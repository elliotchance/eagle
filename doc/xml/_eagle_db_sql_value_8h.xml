<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="_eagle_db_sql_value_8h" kind="file">
    <compoundname>EagleDbSqlValue.h</compoundname>
    <includes refid="_eagle_db_sql_expression_header_8h" local="yes">EagleDbSqlExpressionHeader.h</includes>
    <includes refid="_eagle_db_sql_value_type_8h" local="yes">EagleDbSqlValueType.h</includes>
    <includes refid="_eagle_8h" local="yes">Eagle.h</includes>
    <includes refid="_eagle_data_type_8h" local="yes">EagleDataType.h</includes>
    <includes refid="_eagle_boolean_8h" local="yes">EagleBoolean.h</includes>
    <includedby refid="_eagle_instance_8c" local="yes">eagle/eagle/EagleInstance.c</includedby>
    <includedby refid="_eagle_plan_buffer_provider_8c" local="yes">eagle/eagle/EaglePlanBufferProvider.c</includedby>
    <includedby refid="_eagle_plan_buffer_provider_8h" local="yes">eagle/eagle/EaglePlanBufferProvider.h</includedby>
    <includedby refid="_eagle_plan_operation_8h" local="yes">eagle/eagle/EaglePlanOperation.h</includedby>
    <includedby refid="_eagle_db_console_8c" local="yes">eagle/eagledb/EagleDbConsole.c</includedby>
    <includedby refid="_eagle_db_sql_expression_8c" local="yes">eagle/eagledb/EagleDbSqlExpression.c</includedby>
    <includedby refid="_eagle_db_sql_select_8h" local="yes">eagle/eagledb/EagleDbSqlSelect.h</includedby>
    <includedby refid="_eagle_db_sql_value_8c" local="yes">eagle/eagledb/EagleDbSqlValue.c</includedby>
    <includedby refid="_eagle_db_tuple_8c" local="yes">eagle/eagledb/EagleDbTuple.c</includedby>
    <includedby refid="_eagle_db_tuple_8h" local="yes">eagle/eagledb/EagleDbTuple.h</includedby>
    <incdepgraph>
      <node id="2687">
        <label>EagleDbSqlExpressionType.h</label>
        <link refid="_eagle_db_sql_expression_type_8h"/>
      </node>
      <node id="2688">
        <label>EagleDbSqlValueType.h</label>
        <link refid="_eagle_db_sql_value_type_8h"/>
      </node>
      <node id="2690">
        <label>EagleDataType.h</label>
        <link refid="_eagle_data_type_8h"/>
      </node>
      <node id="2691">
        <label>EagleBoolean.h</label>
        <link refid="_eagle_boolean_8h"/>
      </node>
      <node id="2689">
        <label>Eagle.h</label>
        <link refid="_eagle_8h"/>
      </node>
      <node id="2686">
        <label>EagleDbSqlExpressionHeader.h</label>
        <link refid="_eagle_db_sql_expression_header_8h"/>
        <childnode refid="2687" relation="include">
        </childnode>
      </node>
      <node id="2685">
        <label>eagle/eagledb/EagleDbSqlValue.h</label>
        <link refid="EagleDbSqlValue.h"/>
        <childnode refid="2686" relation="include">
        </childnode>
        <childnode refid="2688" relation="include">
        </childnode>
        <childnode refid="2689" relation="include">
        </childnode>
        <childnode refid="2690" relation="include">
        </childnode>
        <childnode refid="2691" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2730">
        <label>eagle/eagledb/EagleDbTuple.c</label>
        <link refid="_eagle_db_tuple_8c"/>
      </node>
      <node id="2731">
        <label>eagle/eagledb/EagleDbTuple.h</label>
        <link refid="_eagle_db_tuple_8h"/>
        <childnode refid="2701" relation="include">
        </childnode>
        <childnode refid="2732" relation="include">
        </childnode>
        <childnode refid="2730" relation="include">
        </childnode>
      </node>
      <node id="2719">
        <label>eagle/eagledb/EagleDbSqlExpression.c</label>
        <link refid="_eagle_db_sql_expression_8c"/>
        <childnode refid="2719" relation="include">
        </childnode>
      </node>
      <node id="2715">
        <label>eagle/eagledb/EagleDbSqlExpression.h</label>
        <link refid="_eagle_db_sql_expression_8h"/>
        <childnode refid="2716" relation="include">
        </childnode>
        <childnode refid="2717" relation="include">
        </childnode>
        <childnode refid="2718" relation="include">
        </childnode>
        <childnode refid="2720" relation="include">
        </childnode>
        <childnode refid="2721" relation="include">
        </childnode>
        <childnode refid="2719" relation="include">
        </childnode>
        <childnode refid="2722" relation="include">
        </childnode>
        <childnode refid="2724" relation="include">
        </childnode>
        <childnode refid="2725" relation="include">
        </childnode>
      </node>
      <node id="2700">
        <label>eagle/eagle/EagleWorker.c</label>
        <link refid="_eagle_worker_8c"/>
      </node>
      <node id="2703">
        <label>eagle/eagle/EagleWorker.h</label>
        <link refid="_eagle_worker_8h"/>
        <childnode refid="2704" relation="include">
        </childnode>
        <childnode refid="2705" relation="include">
        </childnode>
        <childnode refid="2706" relation="include">
        </childnode>
        <childnode refid="2707" relation="include">
        </childnode>
        <childnode refid="2700" relation="include">
        </childnode>
        <childnode refid="2708" relation="include">
        </childnode>
      </node>
      <node id="2726">
        <label>eagle/eagledb/EagleDbSqlUnaryExpression.c</label>
        <link refid="_eagle_db_sql_unary_expression_8c"/>
      </node>
      <node id="2725">
        <label>eagle/eagledb/EagleDbSqlUnaryExpression.h</label>
        <link refid="_eagle_db_sql_unary_expression_8h"/>
        <childnode refid="2726" relation="include">
        </childnode>
      </node>
      <node id="2735">
        <label>eagle/eagledb/EagleDbTableData.c</label>
        <link refid="_eagle_db_table_data_8c"/>
      </node>
      <node id="2732">
        <label>eagle/eagledb/EagleDbTableData.h</label>
        <link refid="_eagle_db_table_data_8h"/>
        <childnode refid="2712" relation="include">
        </childnode>
        <childnode refid="2701" relation="include">
        </childnode>
        <childnode refid="2733" relation="include">
        </childnode>
        <childnode refid="2714" relation="include">
        </childnode>
        <childnode refid="2735" relation="include">
        </childnode>
      </node>
      <node id="2714">
        <label>eagle/eagledb/EagleDbSqlSelect.c</label>
        <link refid="_eagle_db_sql_select_8c"/>
      </node>
      <node id="2724">
        <label>eagle/eagledb/EagleDbSqlSelect.h</label>
        <link refid="_eagle_db_sql_select_8h"/>
        <childnode refid="2701" relation="include">
        </childnode>
        <childnode refid="2711" relation="include">
        </childnode>
        <childnode refid="2719" relation="include">
        </childnode>
        <childnode refid="2714" relation="include">
        </childnode>
      </node>
      <node id="2717">
        <label>eagle/eagledb/EagleDbSqlBinaryExpression.c</label>
        <link refid="_eagle_db_sql_binary_expression_8c"/>
        <childnode refid="2717" relation="include">
        </childnode>
      </node>
      <node id="2718">
        <label>eagle/eagledb/EagleDbSqlBinaryExpression.h</label>
        <link refid="_eagle_db_sql_binary_expression_8h"/>
        <childnode refid="2719" relation="include">
        </childnode>
      </node>
      <node id="2705">
        <label>eagle/eagle/EagleLogger.c</label>
        <link refid="_eagle_logger_8c"/>
      </node>
      <node id="2693">
        <label>eagle/eagle/EagleInstance.c</label>
        <link refid="_eagle_instance_8c"/>
        <childnode refid="2693" relation="include">
        </childnode>
      </node>
      <node id="2699">
        <label>eagle/eagle/EagleInstance.h</label>
        <link refid="_eagle_instance_8h"/>
        <childnode refid="2700" relation="include">
        </childnode>
        <childnode refid="2701" relation="include">
        </childnode>
      </node>
      <node id="2720">
        <label>eagle/eagledb/EagleDbSqlCastExpression.c</label>
        <link refid="_eagle_db_sql_cast_expression_8c"/>
        <childnode refid="2720" relation="include">
        </childnode>
      </node>
      <node id="2721">
        <label>eagle/eagledb/EagleDbSqlCastExpression.h</label>
        <link refid="_eagle_db_sql_cast_expression_8h"/>
        <childnode refid="2719" relation="include">
        </childnode>
      </node>
      <node id="2716">
        <label>eagle/eagledb/EagleDbParser.c</label>
        <link refid="_eagle_db_parser_8c"/>
      </node>
      <node id="2734">
        <label>eagle/eagledb/EagleDbSchema.c</label>
        <link refid="_eagle_db_schema_8c"/>
      </node>
      <node id="2733">
        <label>eagle/eagledb/EagleDbSchema.h</label>
        <link refid="_eagle_db_schema_8h"/>
        <childnode refid="2712" relation="include">
        </childnode>
        <childnode refid="2713" relation="include">
        </childnode>
        <childnode refid="2701" relation="include">
        </childnode>
        <childnode refid="2711" relation="include">
        </childnode>
        <childnode refid="2734" relation="include">
        </childnode>
      </node>
      <node id="2701">
        <label>eagle/eagledb/EagleDbInstance.c</label>
        <link refid="_eagle_db_instance_8c"/>
        <childnode refid="2701" relation="include">
        </childnode>
      </node>
      <node id="2711">
        <label>eagle/eagledb/EagleDbInstance.h</label>
        <link refid="_eagle_db_instance_8h"/>
        <childnode refid="2712" relation="include">
        </childnode>
        <childnode refid="2713" relation="include">
        </childnode>
        <childnode refid="2701" relation="include">
        </childnode>
        <childnode refid="2714" relation="include">
        </childnode>
      </node>
      <node id="2712">
        <label>eagle/eagledb/EagleDbInformationSchema.c</label>
        <link refid="_eagle_db_information_schema_8c"/>
        <childnode refid="2712" relation="include">
        </childnode>
      </node>
      <node id="2713">
        <label>eagle/eagledb/EagleDbInformationSchema.h</label>
        <link refid="_eagle_db_information_schema_8h"/>
        <childnode refid="2701" relation="include">
        </childnode>
      </node>
      <node id="2704">
        <label>eagle/eagle/EagleLinkedList.c</label>
        <link refid="_eagle_linked_list_8c"/>
      </node>
      <node id="2728">
        <label>eagle/eagle/EaglePlanOperation.c</label>
        <link refid="_eagle_plan_operation_8c"/>
      </node>
      <node id="2727">
        <label>eagle/eagle/EaglePlanOperation.h</label>
        <link refid="_eagle_plan_operation_8h"/>
        <childnode refid="2696" relation="include">
        </childnode>
        <childnode refid="2728" relation="include">
        </childnode>
      </node>
      <node id="2710">
        <label>eagle/eagledb/EagleDbConsole.c</label>
        <link refid="_eagle_db_console_8c"/>
        <childnode refid="2710" relation="include">
        </childnode>
      </node>
      <node id="2723">
        <label>eagle/eagledb/EagleDbSqlFunctionExpression.c</label>
        <link refid="_eagle_db_sql_function_expression_8c"/>
      </node>
      <node id="2707">
        <label>eagle/eagle/EaglePageProviderStream.c</label>
        <link refid="_eagle_page_provider_stream_8c"/>
      </node>
      <node id="2722">
        <label>eagle/eagledb/EagleDbSqlFunctionExpression.h</label>
        <link refid="_eagle_db_sql_function_expression_8h"/>
        <childnode refid="2723" relation="include">
        </childnode>
      </node>
      <node id="2694">
        <label>eagle/eagle/EaglePlanBufferProvider.c</label>
        <link refid="_eagle_plan_buffer_provider_8c"/>
      </node>
      <node id="2695">
        <label>eagle/eagle/EaglePlanBufferProvider.h</label>
        <link refid="_eagle_plan_buffer_provider_8h"/>
        <childnode refid="2696" relation="include">
        </childnode>
        <childnode refid="2694" relation="include">
        </childnode>
      </node>
      <node id="2709">
        <label>eagle/eagle/EagleWorkers.c</label>
        <link refid="_eagle_workers_8c"/>
      </node>
      <node id="2708">
        <label>eagle/eagle/EagleWorkers.h</label>
        <link refid="_eagle_workers_8h"/>
        <childnode refid="2699" relation="include">
        </childnode>
        <childnode refid="2709" relation="include">
        </childnode>
      </node>
      <node id="2729">
        <label>eagle/eagledb/EagleDbSqlValue.c</label>
        <link refid="_eagle_db_sql_value_8c"/>
      </node>
      <node id="2692">
        <label>eagle/eagledb/EagleDbSqlValue.h</label>
        <link refid="EagleDbSqlValue.h"/>
        <childnode refid="2693" relation="include">
        </childnode>
        <childnode refid="2694" relation="include">
        </childnode>
        <childnode refid="2695" relation="include">
        </childnode>
        <childnode refid="2727" relation="include">
        </childnode>
        <childnode refid="2710" relation="include">
        </childnode>
        <childnode refid="2719" relation="include">
        </childnode>
        <childnode refid="2724" relation="include">
        </childnode>
        <childnode refid="2729" relation="include">
        </childnode>
        <childnode refid="2730" relation="include">
        </childnode>
        <childnode refid="2731" relation="include">
        </childnode>
      </node>
      <node id="2697">
        <label>eagle/eagle/EaglePlan.c</label>
        <link refid="_eagle_plan_8c"/>
      </node>
      <node id="2696">
        <label>eagle/eagle/EaglePlan.h</label>
        <link refid="_eagle_plan_8h"/>
        <childnode refid="2697" relation="include">
        </childnode>
        <childnode refid="2698" relation="include">
        </childnode>
        <childnode refid="2710" relation="include">
        </childnode>
        <childnode refid="2711" relation="include">
        </childnode>
        <childnode refid="2715" relation="include">
        </childnode>
      </node>
      <node id="2702">
        <label>eagle/eagle/EaglePlanJob.c</label>
        <link refid="_eagle_plan_job_8c"/>
      </node>
      <node id="2698">
        <label>eagle/eagle/EaglePlanJob.h</label>
        <link refid="_eagle_plan_job_8h"/>
        <childnode refid="2693" relation="include">
        </childnode>
        <childnode refid="2699" relation="include">
        </childnode>
        <childnode refid="2702" relation="include">
        </childnode>
        <childnode refid="2700" relation="include">
        </childnode>
        <childnode refid="2703" relation="include">
        </childnode>
      </node>
      <node id="2706">
        <label>eagle/eagle/EaglePageProviderArray.c</label>
        <link refid="_eagle_page_provider_array_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_eagle_db_sql_value" prot="public">EagleDbSqlValue</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_eagle_db_sql_value_8h_1a5666e74400e97d26054218f2bc382388" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member">EagleBoolean</ref></type>
        <definition>EagleBoolean EagleDbSqlValue_castable</definition>
        <argsstring>(EagleDbSqlValue *value, EagleDataType type)</argsstring>
        <name>EagleDbSqlValue_castable</name>
        <param>
          <type><ref refid="struct_eagle_db_sql_value" kindref="compound">EagleDbSqlValue</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="_eagle_data_type_8h_1ac484ab15f125f81b0437f7aed65fbbb2" kindref="member">EagleDataType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Check if a <ref refid="struct_eagle_db_sql_value" kindref="compound">EagleDbSqlValue</ref> can be cast into a data type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to cast (can be any type). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>The data type to attempt to cast to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>EagleTrue if the value can successfully be cast to the new type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlValue.h" line="135" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlValue.c" bodystart="229" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_db_sql_value_8h_1ab4d86065ded94598b92cdbbaac2a45a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EagleDbSqlValue_Delete</definition>
        <argsstring>(EagleDbSqlValue *value)</argsstring>
        <name>EagleDbSqlValue_Delete</name>
        <param>
          <type><ref refid="struct_eagle_db_sql_value" kindref="compound">EagleDbSqlValue</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Free a value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlValue.h" line="93" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlValue.c" bodystart="104" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_db_sql_value_8h_1a0a31a8cbf2f210a76306a223b77796a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member">EagleDataTypeFloatType</ref></type>
        <definition>EagleDataTypeFloatType EagleDbSqlValue_getFloat</definition>
        <argsstring>(EagleDbSqlValue *value, EagleBoolean *success)</argsstring>
        <name>EagleDbSqlValue_getFloat</name>
        <param>
          <type><ref refid="struct_eagle_db_sql_value" kindref="compound">EagleDbSqlValue</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member">EagleBoolean</ref> *</type>
          <declname>success</declname>
        </param>
        <briefdescription>
<para>Get the float representation of a value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">success</parametername>
</parameternamelist>
<parameterdescription>
<para>Set ot EagleTrue if the returned value is correct. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The float value of whatever the original type of the <computeroutput>value</computeroutput> was. If the value could now be cast then <computeroutput>success</computeroutput> will be set to EagleFalse and 0.0 will be returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlValue.h" line="118" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlValue.c" bodystart="190" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_db_sql_value_8h_1a1ddbf5b4bc69df6d73264cc6f6449158" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member">EagleDataTypeIntegerType</ref></type>
        <definition>EagleDataTypeIntegerType EagleDbSqlValue_getInteger</definition>
        <argsstring>(EagleDbSqlValue *value, EagleBoolean *success)</argsstring>
        <name>EagleDbSqlValue_getInteger</name>
        <param>
          <type><ref refid="struct_eagle_db_sql_value" kindref="compound">EagleDbSqlValue</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member">EagleBoolean</ref> *</type>
          <declname>success</declname>
        </param>
        <briefdescription>
<para>Get the integer representation of a value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">success</parametername>
</parameternamelist>
<parameterdescription>
<para>Set ot EagleTrue if the returned value is correct. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The integer value of whatever the original type of the <computeroutput>value</computeroutput> was. If the value could now be cast then <computeroutput>success</computeroutput> will be set to EagleFalse and 0 will be returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlValue.h" line="109" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlValue.c" bodystart="169" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_db_sql_value_8h_1af70b981f6cecb5cab8f5c5da647988c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_eagle_data_type_8h_1adca1890444ae43d449a6df07beb9c313" kindref="member">EagleDataTypeVarcharType</ref></type>
        <definition>EagleDataTypeVarcharType EagleDbSqlValue_getVarchar</definition>
        <argsstring>(EagleDbSqlValue *value, EagleBoolean *success)</argsstring>
        <name>EagleDbSqlValue_getVarchar</name>
        <param>
          <type><ref refid="struct_eagle_db_sql_value" kindref="compound">EagleDbSqlValue</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member">EagleBoolean</ref> *</type>
          <declname>success</declname>
        </param>
        <briefdescription>
<para>Get the varchar representation of a value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">success</parametername>
</parameternamelist>
<parameterdescription>
<para>Set ot EagleTrue if the returned value is correct. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The varchar value of whatever the original type of the <computeroutput>value</computeroutput> was. If the value could now be cast then <computeroutput>success</computeroutput> will be set to EagleFalse and NULL will be returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlValue.h" line="127" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlValue.c" bodystart="211" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_db_sql_value_8h_1aef6edeab6994f6da16a994df771b9f13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_eagle_db_sql_value" kindref="compound">EagleDbSqlValue</ref> *</type>
        <definition>EagleDbSqlValue* EagleDbSqlValue_NewWithAsterisk</definition>
        <argsstring>(void)</argsstring>
        <name>EagleDbSqlValue_NewWithAsterisk</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create a new <ref refid="struct_eagle_db_sql_value" kindref="compound">EagleDbSqlValue</ref> with an asterisk token. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A new <ref refid="struct_eagle_db_sql_value" kindref="compound">EagleDbSqlValue</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlValue.h" line="80" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlValue.c" bodystart="35" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_db_sql_value_8h_1a5e2c72583ca32f673e08f1f8ed8aa68e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_eagle_db_sql_value" kindref="compound">EagleDbSqlValue</ref> *</type>
        <definition>EagleDbSqlValue* EagleDbSqlValue_NewWithFloat</definition>
        <argsstring>(EagleDataTypeFloatType value)</argsstring>
        <name>EagleDbSqlValue_NewWithFloat</name>
        <param>
          <type><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member">EagleDataTypeFloatType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Create a new <ref refid="struct_eagle_db_sql_value" kindref="compound">EagleDbSqlValue</ref> with an floating point number. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating point value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new <ref refid="struct_eagle_db_sql_value" kindref="compound">EagleDbSqlValue</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlValue.h" line="74" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlValue.c" bodystart="21" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_db_sql_value_8h_1a6cbcbc1cecb4aae06931fcf960ea9bd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_eagle_db_sql_value" kindref="compound">EagleDbSqlValue</ref> *</type>
        <definition>EagleDbSqlValue* EagleDbSqlValue_NewWithIdentifier</definition>
        <argsstring>(char *name)</argsstring>
        <name>EagleDbSqlValue_NewWithIdentifier</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Create a new <ref refid="struct_eagle_db_sql_value" kindref="compound">EagleDbSqlValue</ref> with an identifier (a column name). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the column. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new <ref refid="struct_eagle_db_sql_value" kindref="compound">EagleDbSqlValue</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlValue.h" line="87" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlValue.c" bodystart="48" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_db_sql_value_8h_1a3a7a5b3bd7d5f8241cd33c0e84bbbfc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_eagle_db_sql_value" kindref="compound">EagleDbSqlValue</ref> *</type>
        <definition>EagleDbSqlValue* EagleDbSqlValue_NewWithInteger</definition>
        <argsstring>(EagleDataTypeIntegerType value)</argsstring>
        <name>EagleDbSqlValue_NewWithInteger</name>
        <param>
          <type><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member">EagleDataTypeIntegerType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Create a new <ref refid="struct_eagle_db_sql_value" kindref="compound">EagleDbSqlValue</ref> with an integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new <ref refid="struct_eagle_db_sql_value" kindref="compound">EagleDbSqlValue</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlValue.h" line="67" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlValue.c" bodystart="7" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_db_sql_value_8h_1a323cbac8578d388e068c5bafe63c2c48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_eagle_db_sql_value" kindref="compound">EagleDbSqlValue</ref> *</type>
        <definition>EagleDbSqlValue* EagleDbSqlValue_NewWithString</definition>
        <argsstring>(char *str, EagleBoolean process)</argsstring>
        <name>EagleDbSqlValue_NewWithString</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member">EagleBoolean</ref></type>
          <declname>process</declname>
        </param>
        <briefdescription>
<para>Create a new <ref refid="struct_eagle_db_sql_value" kindref="compound">EagleDbSqlValue</ref> with a string literal. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>String value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">process</parametername>
</parameternamelist>
<parameterdescription>
<para>If this is EagleTrue then the string will be processed, ie remove the surrounding quotes and unescape inner quotes. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new <ref refid="struct_eagle_db_sql_value" kindref="compound">EagleDbSqlValue</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlValue.h" line="60" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlValue.c" bodystart="62" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_db_sql_value_8h_1a2f5ba7d8500494006d393586940e2046" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* EagleDbSqlValue_toString</definition>
        <argsstring>(EagleDbSqlValue *value)</argsstring>
        <name>EagleDbSqlValue_toString</name>
        <param>
          <type><ref refid="struct_eagle_db_sql_value" kindref="compound">EagleDbSqlValue</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Render a value to a string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new string representation of the value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlValue.h" line="100" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlValue.c" bodystart="127" bodyend="167"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>eagle_EagleDbSqlValue_h</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>eagle_EagleDbSqlValue_h</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_db_sql_expression_header_8h" kindref="compound">EagleDbSqlExpressionHeader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_db_sql_value_type_8h" kindref="compound">EagleDbSqlValueType.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_8h" kindref="compound">Eagle.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_data_type_8h" kindref="compound">EagleDataType.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_boolean_8h" kindref="compound">EagleBoolean.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="struct_eagle_db_sql_value" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19" refid="struct_eagle_db_sql_value_1a3faf42a90228121a56f69674cdfd1b23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_db_sql_expression_header_8h_1a633261e6154fbc5ddb4db61baed3e828" kindref="member" tooltip="This header must exists in all structs that &amp;quot;extend&amp;quot; EagleDbSqlExpression...">EagleDbSqlExpressionHeader</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25" refid="struct_eagle_db_sql_value_1ad77ce651fe9b80a9eaae740340be2082" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_8h_1a92e6a76bef8c68fa1b940a5c4520f262" kindref="member" tooltip="This struct instance variable is not dynamically allocated so it&amp;#39;s memory does...">EAGLE_ATTR_NA</ref><sp/><ref refid="_eagle_db_sql_value_type_8h_1a8f57a8843866a9491eebb90fdd9c4d25" kindref="member" tooltip="A value can contain several types.">EagleDbSqlValueType</ref><sp/>type;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36" refid="struct_eagle_db_sql_value_1a34aa1b9d94871f740efabef1b6d52b2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_8h_1a92e6a76bef8c68fa1b940a5c4520f262" kindref="member" tooltip="This struct instance variable is not dynamically allocated so it&amp;#39;s memory does...">EAGLE_ATTR_NA</ref><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>intValue;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41" refid="struct_eagle_db_sql_value_1af5351a0143adaf16c64b881aee01d893" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_8h_1a36dbf56fa988abbaff74a82249eb6ea4" kindref="member" tooltip="This struct instance variable&amp;#39;s memory is fully managed internally.">EAGLE_ATTR_MANAGED</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*identifier;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47" refid="struct_eagle_db_sql_value_1a4d566c1fceb610a562ff221cba447f16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_8h_1a92e6a76bef8c68fa1b940a5c4520f262" kindref="member" tooltip="This struct instance variable is not dynamically allocated so it&amp;#39;s memory does...">EAGLE_ATTR_NA</ref><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>floatValue;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>value;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal">}<sp/><ref refid="struct_eagle_db_sql_value" kindref="compound" tooltip="Encapsulates a Value of any type.">EagleDbSqlValue</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="struct_eagle_db_sql_value" kindref="compound" tooltip="Encapsulates a Value of any type.">EagleDbSqlValue</ref>*<sp/><ref refid="_eagle_db_sql_value_8c_1a323cbac8578d388e068c5bafe63c2c48" kindref="member" tooltip="Create a new EagleDbSqlValue with a string literal.">EagleDbSqlValue_NewWithString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member" tooltip="Enum for representing boolean values.">EagleBoolean</ref><sp/>process);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="struct_eagle_db_sql_value" kindref="compound" tooltip="Encapsulates a Value of any type.">EagleDbSqlValue</ref>*<sp/><ref refid="_eagle_db_sql_value_8c_1a3a7a5b3bd7d5f8241cd33c0e84bbbfc1" kindref="member" tooltip="Create a new EagleDbSqlValue with an integer.">EagleDbSqlValue_NewWithInteger</ref>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>value);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><ref refid="struct_eagle_db_sql_value" kindref="compound" tooltip="Encapsulates a Value of any type.">EagleDbSqlValue</ref>*<sp/><ref refid="_eagle_db_sql_value_8c_1a5e2c72583ca32f673e08f1f8ed8aa68e" kindref="member" tooltip="Create a new EagleDbSqlValue with an floating point number.">EagleDbSqlValue_NewWithFloat</ref>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>value);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><ref refid="struct_eagle_db_sql_value" kindref="compound" tooltip="Encapsulates a Value of any type.">EagleDbSqlValue</ref>*<sp/><ref refid="_eagle_db_sql_value_8c_1aef6edeab6994f6da16a994df771b9f13" kindref="member" tooltip="Create a new EagleDbSqlValue with an asterisk token.">EagleDbSqlValue_NewWithAsterisk</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><ref refid="struct_eagle_db_sql_value" kindref="compound" tooltip="Encapsulates a Value of any type.">EagleDbSqlValue</ref>*<sp/><ref refid="_eagle_db_sql_value_8c_1a2270ea8d7e2aff4ff448ca7d0ac93b0a" kindref="member" tooltip="Create a new EagleDbSqlValue with an identifier (a column name).">EagleDbSqlValue_NewWithIdentifier</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_db_sql_value_8c_1ab4d86065ded94598b92cdbbaac2a45a4" kindref="member" tooltip="Free a value.">EagleDbSqlValue_Delete</ref>(<ref refid="struct_eagle_db_sql_value" kindref="compound" tooltip="Encapsulates a Value of any type.">EagleDbSqlValue</ref><sp/>*value);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="_eagle_db_sql_value_8c_1a2f5ba7d8500494006d393586940e2046" kindref="member" tooltip="Render a value to a string.">EagleDbSqlValue_toString</ref>(<ref refid="struct_eagle_db_sql_value" kindref="compound" tooltip="Encapsulates a Value of any type.">EagleDbSqlValue</ref><sp/>*value);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/><ref refid="_eagle_db_sql_value_8c_1a1ddbf5b4bc69df6d73264cc6f6449158" kindref="member" tooltip="Get the integer representation of a value.">EagleDbSqlValue_getInteger</ref>(<ref refid="struct_eagle_db_sql_value" kindref="compound" tooltip="Encapsulates a Value of any type.">EagleDbSqlValue</ref><sp/>*value,<sp/><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member" tooltip="Enum for representing boolean values.">EagleBoolean</ref><sp/>*success);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/><ref refid="_eagle_db_sql_value_8c_1a0a31a8cbf2f210a76306a223b77796a1" kindref="member" tooltip="Get the float representation of a value.">EagleDbSqlValue_getFloat</ref>(<ref refid="struct_eagle_db_sql_value" kindref="compound" tooltip="Encapsulates a Value of any type.">EagleDbSqlValue</ref><sp/>*value,<sp/><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member" tooltip="Enum for representing boolean values.">EagleBoolean</ref><sp/>*success);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><ref refid="_eagle_data_type_8h_1adca1890444ae43d449a6df07beb9c313" kindref="member" tooltip="The global data type for handling EagleDataTypeVarchar.">EagleDataTypeVarcharType</ref><sp/><ref refid="_eagle_db_sql_value_8c_1af70b981f6cecb5cab8f5c5da647988c4" kindref="member" tooltip="Get the varchar representation of a value.">EagleDbSqlValue_getVarchar</ref>(<ref refid="struct_eagle_db_sql_value" kindref="compound" tooltip="Encapsulates a Value of any type.">EagleDbSqlValue</ref><sp/>*value,<sp/><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member" tooltip="Enum for representing boolean values.">EagleBoolean</ref><sp/>*success);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member" tooltip="Enum for representing boolean values.">EagleBoolean</ref><sp/><ref refid="_eagle_db_sql_value_8c_1a5666e74400e97d26054218f2bc382388" kindref="member" tooltip="Check if a EagleDbSqlValue can be cast into a data type.">EagleDbSqlValue_castable</ref>(<ref refid="struct_eagle_db_sql_value" kindref="compound" tooltip="Encapsulates a Value of any type.">EagleDbSqlValue</ref><sp/>*value,<sp/><ref refid="_eagle_data_type_8h_1ac484ab15f125f81b0437f7aed65fbbb2" kindref="member" tooltip="Data types for pages.">EagleDataType</ref><sp/>type);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlValue.h"/>
  </compounddef>
</doxygen>
