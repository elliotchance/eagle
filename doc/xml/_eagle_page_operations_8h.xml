<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="_eagle_page_operations_8h" kind="file">
    <compoundname>EaglePageOperations.h</compoundname>
    <includes refid="_eagle_page_8h" local="yes">EaglePage.h</includes>
    <includes refid="_eagle_page_provider_8h" local="yes">EaglePageProvider.h</includes>
    <includedby refid="_eagle_instance_8c" local="yes">eagle/eagle/EagleInstance.c</includedby>
    <includedby refid="_eagle_page_operations_8c" local="yes">eagle/eagle/EaglePageOperations.c</includedby>
    <includedby refid="_eagle_plan_8h" local="yes">eagle/eagle/EaglePlan.h</includedby>
    <includedby refid="_eagle_plan_operation_8h" local="yes">eagle/eagle/EaglePlanOperation.h</includedby>
    <includedby refid="_eagle_db_sql_binary_expression_8c" local="yes">eagle/eagledb/EagleDbSqlBinaryExpression.c</includedby>
    <includedby refid="_eagle_db_sql_binary_expression_8h" local="yes">eagle/eagledb/EagleDbSqlBinaryExpression.h</includedby>
    <includedby refid="_eagle_db_sql_expression_8c" local="yes">eagle/eagledb/EagleDbSqlExpression.c</includedby>
    <incdepgraph>
      <node id="882">
        <label>EagleLinkedList.h</label>
        <link refid="_eagle_linked_list_8h"/>
        <childnode refid="879" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="883" relation="include">
        </childnode>
      </node>
      <node id="871">
        <label>eagle/eagle/EaglePageOperations.h</label>
        <link refid="EaglePageOperations.h"/>
        <childnode refid="872" relation="include">
        </childnode>
        <childnode refid="877" relation="include">
        </childnode>
      </node>
      <node id="880">
        <label>mach/mach_time.h</label>
      </node>
      <node id="879">
        <label>EagleSynchronizer.h</label>
        <link refid="_eagle_synchronizer_8h"/>
        <childnode refid="880" relation="include">
        </childnode>
        <childnode refid="881" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
      </node>
      <node id="878">
        <label>pthread.h</label>
      </node>
      <node id="884">
        <label>EaglePageProviderType.h</label>
        <link refid="_eagle_page_provider_type_8h"/>
      </node>
      <node id="874">
        <label>EagleData.h</label>
        <link refid="_eagle_data_8h"/>
        <childnode refid="875" relation="include">
        </childnode>
      </node>
      <node id="875">
        <label>EagleDataType.h</label>
        <link refid="_eagle_data_type_8h"/>
      </node>
      <node id="873">
        <label>EagleBoolean.h</label>
        <link refid="_eagle_boolean_8h"/>
      </node>
      <node id="876">
        <label>Eagle.h</label>
        <link refid="_eagle_8h"/>
      </node>
      <node id="872">
        <label>EaglePage.h</label>
        <link refid="_eagle_page_8h"/>
        <childnode refid="873" relation="include">
        </childnode>
        <childnode refid="874" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="875" relation="include">
        </childnode>
      </node>
      <node id="877">
        <label>EaglePageProvider.h</label>
        <link refid="_eagle_page_provider_8h"/>
        <childnode refid="878" relation="include">
        </childnode>
        <childnode refid="872" relation="include">
        </childnode>
        <childnode refid="879" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
        <childnode refid="882" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="875" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
      </node>
      <node id="881">
        <label>EagleLock.h</label>
        <link refid="_eagle_lock_8h"/>
        <childnode refid="878" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
      </node>
      <node id="883">
        <label>EagleLinkedListItem.h</label>
        <link refid="_eagle_linked_list_item_8h"/>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="911">
        <label>eagle/eagledb/EagleDbSqlExpression.c</label>
        <link refid="_eagle_db_sql_expression_8c"/>
        <childnode refid="911" relation="include">
        </childnode>
      </node>
      <node id="907">
        <label>eagle/eagledb/EagleDbSqlExpression.h</label>
        <link refid="_eagle_db_sql_expression_8h"/>
        <childnode refid="908" relation="include">
        </childnode>
        <childnode refid="909" relation="include">
        </childnode>
        <childnode refid="910" relation="include">
        </childnode>
        <childnode refid="912" relation="include">
        </childnode>
        <childnode refid="913" relation="include">
        </childnode>
        <childnode refid="911" relation="include">
        </childnode>
        <childnode refid="914" relation="include">
        </childnode>
        <childnode refid="916" relation="include">
        </childnode>
        <childnode refid="917" relation="include">
        </childnode>
      </node>
      <node id="892">
        <label>eagle/eagle/EagleWorker.c</label>
        <link refid="_eagle_worker_8c"/>
      </node>
      <node id="895">
        <label>eagle/eagle/EagleWorker.h</label>
        <link refid="_eagle_worker_8h"/>
        <childnode refid="896" relation="include">
        </childnode>
        <childnode refid="897" relation="include">
        </childnode>
        <childnode refid="898" relation="include">
        </childnode>
        <childnode refid="899" relation="include">
        </childnode>
        <childnode refid="892" relation="include">
        </childnode>
        <childnode refid="900" relation="include">
        </childnode>
      </node>
      <node id="918">
        <label>eagle/eagledb/EagleDbSqlUnaryExpression.c</label>
        <link refid="_eagle_db_sql_unary_expression_8c"/>
      </node>
      <node id="917">
        <label>eagle/eagledb/EagleDbSqlUnaryExpression.h</label>
        <link refid="_eagle_db_sql_unary_expression_8h"/>
        <childnode refid="918" relation="include">
        </childnode>
      </node>
      <node id="906">
        <label>eagle/eagledb/EagleDbSqlSelect.c</label>
        <link refid="_eagle_db_sql_select_8c"/>
      </node>
      <node id="916">
        <label>eagle/eagledb/EagleDbSqlSelect.h</label>
        <link refid="_eagle_db_sql_select_8h"/>
        <childnode refid="893" relation="include">
        </childnode>
        <childnode refid="903" relation="include">
        </childnode>
        <childnode refid="911" relation="include">
        </childnode>
        <childnode refid="906" relation="include">
        </childnode>
      </node>
      <node id="909">
        <label>eagle/eagledb/EagleDbSqlBinaryExpression.c</label>
        <link refid="_eagle_db_sql_binary_expression_8c"/>
        <childnode refid="909" relation="include">
        </childnode>
      </node>
      <node id="910">
        <label>eagle/eagledb/EagleDbSqlBinaryExpression.h</label>
        <link refid="_eagle_db_sql_binary_expression_8h"/>
        <childnode refid="911" relation="include">
        </childnode>
      </node>
      <node id="897">
        <label>eagle/eagle/EagleLogger.c</label>
        <link refid="_eagle_logger_8c"/>
      </node>
      <node id="886">
        <label>eagle/eagle/EagleInstance.c</label>
        <link refid="_eagle_instance_8c"/>
        <childnode refid="886" relation="include">
        </childnode>
      </node>
      <node id="891">
        <label>eagle/eagle/EagleInstance.h</label>
        <link refid="_eagle_instance_8h"/>
        <childnode refid="892" relation="include">
        </childnode>
        <childnode refid="893" relation="include">
        </childnode>
      </node>
      <node id="912">
        <label>eagle/eagledb/EagleDbSqlCastExpression.c</label>
        <link refid="_eagle_db_sql_cast_expression_8c"/>
        <childnode refid="912" relation="include">
        </childnode>
      </node>
      <node id="913">
        <label>eagle/eagledb/EagleDbSqlCastExpression.h</label>
        <link refid="_eagle_db_sql_cast_expression_8h"/>
        <childnode refid="911" relation="include">
        </childnode>
      </node>
      <node id="908">
        <label>eagle/eagledb/EagleDbParser.c</label>
        <link refid="_eagle_db_parser_8c"/>
      </node>
      <node id="893">
        <label>eagle/eagledb/EagleDbInstance.c</label>
        <link refid="_eagle_db_instance_8c"/>
        <childnode refid="893" relation="include">
        </childnode>
      </node>
      <node id="903">
        <label>eagle/eagledb/EagleDbInstance.h</label>
        <link refid="_eagle_db_instance_8h"/>
        <childnode refid="904" relation="include">
        </childnode>
        <childnode refid="905" relation="include">
        </childnode>
        <childnode refid="893" relation="include">
        </childnode>
        <childnode refid="906" relation="include">
        </childnode>
      </node>
      <node id="904">
        <label>eagle/eagledb/EagleDbInformationSchema.c</label>
        <link refid="_eagle_db_information_schema_8c"/>
        <childnode refid="904" relation="include">
        </childnode>
      </node>
      <node id="905">
        <label>eagle/eagledb/EagleDbInformationSchema.h</label>
        <link refid="_eagle_db_information_schema_8h"/>
        <childnode refid="893" relation="include">
        </childnode>
      </node>
      <node id="896">
        <label>eagle/eagle/EagleLinkedList.c</label>
        <link refid="_eagle_linked_list_8c"/>
      </node>
      <node id="920">
        <label>eagle/eagle/EaglePlanOperation.c</label>
        <link refid="_eagle_plan_operation_8c"/>
      </node>
      <node id="887">
        <label>eagle/eagle/EaglePageOperations.c</label>
        <link refid="_eagle_page_operations_8c"/>
      </node>
      <node id="919">
        <label>eagle/eagle/EaglePlanOperation.h</label>
        <link refid="_eagle_plan_operation_8h"/>
        <childnode refid="888" relation="include">
        </childnode>
        <childnode refid="920" relation="include">
        </childnode>
      </node>
      <node id="885">
        <label>eagle/eagle/EaglePageOperations.h</label>
        <link refid="EaglePageOperations.h"/>
        <childnode refid="886" relation="include">
        </childnode>
        <childnode refid="887" relation="include">
        </childnode>
        <childnode refid="888" relation="include">
        </childnode>
        <childnode refid="919" relation="include">
        </childnode>
        <childnode refid="909" relation="include">
        </childnode>
        <childnode refid="910" relation="include">
        </childnode>
        <childnode refid="911" relation="include">
        </childnode>
      </node>
      <node id="902">
        <label>eagle/eagledb/EagleDbConsole.c</label>
        <link refid="_eagle_db_console_8c"/>
        <childnode refid="902" relation="include">
        </childnode>
      </node>
      <node id="915">
        <label>eagle/eagledb/EagleDbSqlFunctionExpression.c</label>
        <link refid="_eagle_db_sql_function_expression_8c"/>
      </node>
      <node id="899">
        <label>eagle/eagle/EaglePageProviderStream.c</label>
        <link refid="_eagle_page_provider_stream_8c"/>
      </node>
      <node id="914">
        <label>eagle/eagledb/EagleDbSqlFunctionExpression.h</label>
        <link refid="_eagle_db_sql_function_expression_8h"/>
        <childnode refid="915" relation="include">
        </childnode>
      </node>
      <node id="901">
        <label>eagle/eagle/EagleWorkers.c</label>
        <link refid="_eagle_workers_8c"/>
      </node>
      <node id="900">
        <label>eagle/eagle/EagleWorkers.h</label>
        <link refid="_eagle_workers_8h"/>
        <childnode refid="891" relation="include">
        </childnode>
        <childnode refid="901" relation="include">
        </childnode>
      </node>
      <node id="889">
        <label>eagle/eagle/EaglePlan.c</label>
        <link refid="_eagle_plan_8c"/>
      </node>
      <node id="888">
        <label>eagle/eagle/EaglePlan.h</label>
        <link refid="_eagle_plan_8h"/>
        <childnode refid="889" relation="include">
        </childnode>
        <childnode refid="890" relation="include">
        </childnode>
        <childnode refid="902" relation="include">
        </childnode>
        <childnode refid="903" relation="include">
        </childnode>
        <childnode refid="907" relation="include">
        </childnode>
      </node>
      <node id="894">
        <label>eagle/eagle/EaglePlanJob.c</label>
        <link refid="_eagle_plan_job_8c"/>
      </node>
      <node id="890">
        <label>eagle/eagle/EaglePlanJob.h</label>
        <link refid="_eagle_plan_job_8h"/>
        <childnode refid="886" relation="include">
        </childnode>
        <childnode refid="891" relation="include">
        </childnode>
        <childnode refid="894" relation="include">
        </childnode>
        <childnode refid="892" relation="include">
        </childnode>
        <childnode refid="895" relation="include">
        </childnode>
      </node>
      <node id="898">
        <label>eagle/eagle/EaglePageProviderArray.c</label>
        <link refid="_eagle_page_provider_array_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_eagle_page_operations_8h_1ac1767814a5191fb263d1d7678ba6917d" prot="public" static="no">
        <name>EaglePageOperationFunction</name>
        <param><defname>ptr</defname></param>
        <initializer>void (*ptr)(<ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *destination, <ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *source1, <ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *source2, void *obj)</initializer>
        <briefdescription>
<para>Function pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="10" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_eagle_page_operations_8h_1a861e7f4ed4307737d9d8c630f7cdcec4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_AdditionFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_AdditionFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Add a page of floats with a fixed float. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be float* which is dereferenced to the float value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a7093a7a2c7fc9a44189f0c6d66ec8c36" kindref="member">EagleData_Float()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="274" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="298" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a2e11eb9379553de289ac3b3c5cee81b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_AdditionInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_AdditionInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Add a page of integers with a fixed integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="100" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="90" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a75b23c865944d4a1b7948a9aa2adc915" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_AdditionPageFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_AdditionPageFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Addition of two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="431" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="478" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a21fc7a5bfee8005f282ef3ed7364ff22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_AdditionPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_AdditionPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Addition of two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="421" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="465" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a915b1e6e6b789d976601044cc1e419ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_AndPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_AndPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Calculate logical AND between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="356" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="386" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1ae895c29456f25508ce2fc4dae1e58ca6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_CastIntToBool</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_CastIntToBool</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Cast integer values to boolean (0 and 1). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="345"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a284428e6f5f611cfa65599323b5aac0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_CastPageIntFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_CastPageIntFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Cast INTEGER page to FLOAT page. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="389" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="438" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a6273e3cd132e8b9db447a1c78bb57cae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_DivideLeftFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_DivideLeftFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Divide a page of floats with a fixed float. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be float* which is dereferenced to the float value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a7093a7a2c7fc9a44189f0c6d66ec8c36" kindref="member">EagleData_Float()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="322" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="350" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a56f44580f81f0d27b43588ceaf6d7bd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_DivideLeftInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_DivideLeftInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Divide a page of integers with a fixed integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="148" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="178" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a72548bca2dde60339ae9da04c4fb5403" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_DividePageFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_DividePageFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Division of two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="631" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="838" bodyend="854"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a28a33a620293a0272815f6128c723047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_DividePageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_DividePageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Division of two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="621" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="820" bodyend="836"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1ae84372f58e22682d7c9698ed116168a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_DivideRightFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_DivideRightFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Divide a page of floats with a fixed float. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be float* which is dereferenced to the float value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a7093a7a2c7fc9a44189f0c6d66ec8c36" kindref="member">EagleData_Float()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="334" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="368" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1ad9e14d92cfedc2ee2d7fd5e43da6e73a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_DivideRightInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_DivideRightInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Divide a page of integers with a fixed integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="160" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="196" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a00470c39358da8a5668eb12c3e83fb53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_EqualsFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_EqualsFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Compare a page of floats with a fixed float. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be float* which is dereferenced to the float value for comparison.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a7093a7a2c7fc9a44189f0c6d66ec8c36" kindref="member">EagleData_Float()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="249" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="270" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a1b4f96245d8608bd9daaab485d03b502" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_EqualsInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_EqualsInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Compare a page of integers with a fixed integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value for comparison.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="75" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="64" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a0fbcb28623e90d9b8766e21e9ded7f4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_EqualsPageFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_EqualsPageFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Equals comparison between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="471" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="627" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a6ef4ae9096f59c67123469ac37362cce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_EqualsPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_EqualsPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Equals comparison between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="461" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="614" bodyend="625"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a5426fa057acf4c558a72f30a0098bfe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_GreaterThanEqualPageFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_GreaterThanEqualPageFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Greater than or equal to comparison between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="571" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="753" bodyend="765"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a3a5e103fbe1bb5eac03b8784df1ac3ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_GreaterThanEqualPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_GreaterThanEqualPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Greater than or equal to comparison between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="561" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="740" bodyend="751"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a9d3c9462933492666ad8652bcc0c9605" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_GreaterThanEqualsFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_GreaterThanEqualsFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Calculate values in a page that are greater or equal to than an float. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be float* which is dereferenced to the float value for comparison.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a7093a7a2c7fc9a44189f0c6d66ec8c36" kindref="member">EagleData_Float()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="236" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="256" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a548450031e1602083a35b4eb09f81552" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_GreaterThanEqualsInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_GreaterThanEqualsInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Calculate values in a page that are greater or equal to than an integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value for comparison.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="62" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="51" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1aa6864058da8a5ca26ebb02491e1fd98e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_GreaterThanFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_GreaterThanFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Calculate values in a page that are greater than an float. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be float* which is dereferenced to the float value for comparison.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a7093a7a2c7fc9a44189f0c6d66ec8c36" kindref="member">EagleData_Float()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="210" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="228" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a406649a1c22393fb0169895b0a25d652" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_GreaterThanInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_GreaterThanInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Calculate values in a page that are greater than an integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value for comparison.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="36" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="25" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a622ae1b85c8c27949088a6cc056fd69f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_GreaterThanPageFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_GreaterThanPageFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Greater than comparison between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="531" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="699" bodyend="711"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a46d8374f2554c3098152ff468220744b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_GreaterThanPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_GreaterThanPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Greater than comparison between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="521" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="686" bodyend="697"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1ad9133605694a86d29cbcfa46e8f28e46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_LessThanEqualPageFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_LessThanEqualPageFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Less than or equal to comparison between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="591" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="780" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1aa5c9b2ce2ebc73ba46b55aac558fff35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_LessThanEqualPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_LessThanEqualPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Less than or equal to comparison between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="581" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="767" bodyend="778"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1ae225611f0b209e1d1e11ae1bc35c3939" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_LessThanEqualsFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_LessThanEqualsFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Calculate values in a page that are less than or equal to an float. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be float* which is dereferenced to the float value for comparison.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a7093a7a2c7fc9a44189f0c6d66ec8c36" kindref="member">EagleData_Float()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="223" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="242" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1aac8d2044d5b96b18a0518ff04c35cba9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_LessThanEqualsInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_LessThanEqualsInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Calculate values in a page that are less than or equal to an integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value for comparison.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="49" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="38" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a5dac831ee2c65a11de4b8ee12a6e9188" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_LessThanFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_LessThanFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Calculate values in a page that are less than an float. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be float* which is dereferenced to the float value for comparison.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a7093a7a2c7fc9a44189f0c6d66ec8c36" kindref="member">EagleData_Float()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="197" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="214" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1aed8af88ca2826e1e5e94640ba17b0e00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_LessThanInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_LessThanInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Calculate values in a page that are less than an integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value for comparison.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="23" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="12" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1af27c52761ca2c22702a9757c4a17cbad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_LessThanPageFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_LessThanPageFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Less than comparison between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="551" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="726" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a87fe8ca136417c4786f08ab6ebc124bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_LessThanPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_LessThanPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Less than comparison between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="541" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="713" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a2690b7e660c0299fb0089cb5b4984dc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_ModulusLeftInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_ModulusLeftInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Modulus (remainder) a page of integers with a fixed integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="172" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="103" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1ac9e90c2aede230864b030c03d87bc207" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_ModulusPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_ModulusPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Modulus of two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="511" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="668" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a4155c2fc61cfb50ddad6751398a70fe7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_ModulusRightInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_ModulusRightInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Modulus (remainder) a page of integers with a fixed integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="184" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="121" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a846c81a30fe7a05d76a446b3c665c73f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_MultiplyFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_MultiplyFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Multiply a page of floats with a fixed float. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be float* which is dereferenced to the float value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a7093a7a2c7fc9a44189f0c6d66ec8c36" kindref="member">EagleData_Float()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="310" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="337" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a7c128e6f9b9f259ea589cec034c1761e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_MultiplyInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_MultiplyInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Multiply a page of integers with a fixed integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="136" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="165" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a413e49906bb479f9083827abd8963675" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_MultiplyPageFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_MultiplyPageFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Multiplication of two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="451" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="504" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a5f9ec379ed68d7a8cc0770c5fd0b4f6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_MultiplyPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_MultiplyPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Multiplication of two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="441" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="491" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1aa56d46b2b2bef43d0c2d34405737ac1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_NegatePageFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_NegatePageFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Negate page. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="400" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="452" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a98101677818d4e0df5687a05ff482fb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_NegatePageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_NegatePageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Negate page. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="378" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="425" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a7e3d7b7368e94c5caf680669e2417d3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_NotEqualsFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_NotEqualsFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Compare a page of floats with a fixed float. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be float* which is dereferenced to the float value for comparison.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a7093a7a2c7fc9a44189f0c6d66ec8c36" kindref="member">EagleData_Float()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="262" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="284" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a30c9e80548ec5f8f0b94e1b159cc1a31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_NotEqualsInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_NotEqualsInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Compare a page of integers with a fixed integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value for comparison.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="88" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="77" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a959e133141972d4cf9bd9af7d0b636b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_NotEqualsPageFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_NotEqualsPageFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Not equals comparison between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="491" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="654" bodyend="666"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a6a93cd870158056ca135eff01bc35910" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_NotEqualsPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_NotEqualsPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Not equals comparison between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="481" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="641" bodyend="652"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a12faa846fed0497aa0f864357adc25bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_NotPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_NotPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Calculate logical NOT of a page. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="411" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="412" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a0f3d6e7d7008dfa6e9dc501dc92c1e3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_OrPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_OrPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Calculate logical OR between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="367" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="399" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a257bbb90faf1843e888f8e5cf18618ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_SendPageToProvider</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_SendPageToProvider</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Send records to another provider based on a condition. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>A integer (boolean) to decide if the value should be sent to the provider. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be sent to the provider. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>An instance of <ref refid="struct_eagle_page_provider" kindref="compound">EaglePageProvider</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="501" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="589" bodyend="612"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a6d222018a9344a7a91858ff8d28b2bc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_SendPageToProviderFloat_</definition>
        <argsstring>(EaglePageProvider *provider, EaglePage *source1, EaglePage *source2)</argsstring>
        <name>EaglePageOperations_SendPageToProviderFloat_</name>
        <param>
          <type><ref refid="struct_eagle_page_provider" kindref="compound">EaglePageProvider</ref> *</type>
          <declname>provider</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <briefdescription>
<para>Private function used by <ref refid="_eagle_page_operations_8c_1a257bbb90faf1843e888f8e5cf18618ed" kindref="member">EaglePageOperations_SendPageToProvider()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">provider</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Left source. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Right source. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_page_operations_8c_1a257bbb90faf1843e888f8e5cf18618ed" kindref="member">EaglePageOperations_SendPageToProvider()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="675" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="565" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a40d98b84f9efcf9576cc5ed822f591d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_SendPageToProviderInteger_</definition>
        <argsstring>(EaglePageProvider *provider, EaglePage *source1, EaglePage *source2)</argsstring>
        <name>EaglePageOperations_SendPageToProviderInteger_</name>
        <param>
          <type><ref refid="struct_eagle_page_provider" kindref="compound">EaglePageProvider</ref> *</type>
          <declname>provider</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <briefdescription>
<para>Private function used by <ref refid="_eagle_page_operations_8c_1a257bbb90faf1843e888f8e5cf18618ed" kindref="member">EaglePageOperations_SendPageToProvider()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">provider</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Left source. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Right source. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_page_operations_8c_1a257bbb90faf1843e888f8e5cf18618ed" kindref="member">EaglePageOperations_SendPageToProvider()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="653" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="517" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a85f615bceb1bfcb2f5f536e7004330f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_SendPageToProviderVarchar_</definition>
        <argsstring>(EaglePageProvider *provider, EaglePage *source1, EaglePage *source2)</argsstring>
        <name>EaglePageOperations_SendPageToProviderVarchar_</name>
        <param>
          <type><ref refid="struct_eagle_page_provider" kindref="compound">EaglePageProvider</ref> *</type>
          <declname>provider</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <briefdescription>
<para>Private function used by <ref refid="_eagle_page_operations_8c_1a257bbb90faf1843e888f8e5cf18618ed" kindref="member">EaglePageOperations_SendPageToProvider()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">provider</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Left source. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Right source. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_page_operations_8c_1a257bbb90faf1843e888f8e5cf18618ed" kindref="member">EaglePageOperations_SendPageToProvider()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="664" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="541" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a98a63b31f899a86be0b775326d5b5620" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_SqrtPageFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_SqrtPageFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Calculate square root of a page. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="642" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="856" bodyend="867"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a47869558a26eb1124a8f43cf4ccc71f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_SubtractLeftFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_SubtractLeftFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Subtract a page of floats with a fixed float. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be float* which is dereferenced to the float value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a7093a7a2c7fc9a44189f0c6d66ec8c36" kindref="member">EagleData_Float()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="286" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="311" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1ade3d9f6cb1b231fc4f2c2c628c093799" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_SubtractLeftInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_SubtractLeftInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Subtract a page of integers with a fixed integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="112" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="139" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a721ddc8191c620d97f909d10e551ecbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_SubtractPageFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_SubtractPageFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Subtraction (minus) of two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="611" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="807" bodyend="818"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1abc383e35d1d4316e7be5150777babea7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_SubtractPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_SubtractPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Subtraction (minus) of two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="601" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="794" bodyend="805"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a016a6436393344e104c5cd3f3848f0dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_SubtractRightFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_SubtractRightFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Subtract a page of floats with a fixed float. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be float* which is dereferenced to the float value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a7093a7a2c7fc9a44189f0c6d66ec8c36" kindref="member">EagleData_Float()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="298" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="324" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8h_1a2d909b6a9ce973fcef1815c079bf2491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_SubtractRightInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_SubtractRightInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Subtract a page of integers with a fixed integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h" line="124" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="152" bodyend="163"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>eagle_EaglePageOperations_h</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>eagle_EaglePageOperations_h</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_page_8h" kindref="compound">EaglePage.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_page_provider_8h" kindref="compound">EaglePageProvider.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="_eagle_page_operations_8h_1ac1767814a5191fb263d1d7678ba6917d" refkind="member"><highlight class="preprocessor">#define<sp/>EaglePageOperationFunction(ptr)<sp/>void<sp/>(*ptr)(EaglePage<sp/>*destination,<sp/>EaglePage<sp/>*source1,<sp/>EaglePage<sp/>*source2,<sp/>void<sp/>*obj)</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="23"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1aed8af88ca2826e1e5e94640ba17b0e00" kindref="member" tooltip="Calculate values in a page that are less than an integer.">EaglePageOperations_LessThanInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a406649a1c22393fb0169895b0a25d652" kindref="member" tooltip="Calculate values in a page that are greater than an integer.">EaglePageOperations_GreaterThanInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1aac8d2044d5b96b18a0518ff04c35cba9" kindref="member" tooltip="Calculate values in a page that are less than or equal to an integer.">EaglePageOperations_LessThanEqualsInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a548450031e1602083a35b4eb09f81552" kindref="member" tooltip="Calculate values in a page that are greater or equal to than an integer.">EaglePageOperations_GreaterThanEqualsInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a1b4f96245d8608bd9daaab485d03b502" kindref="member" tooltip="Compare a page of integers with a fixed integer.">EaglePageOperations_EqualsInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a30c9e80548ec5f8f0b94e1b159cc1a31" kindref="member" tooltip="Compare a page of integers with a fixed integer.">EaglePageOperations_NotEqualsInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a2e11eb9379553de289ac3b3c5cee81b1" kindref="member" tooltip="Add a page of integers with a fixed integer.">EaglePageOperations_AdditionInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1ade3d9f6cb1b231fc4f2c2c628c093799" kindref="member" tooltip="Subtract a page of integers with a fixed integer.">EaglePageOperations_SubtractLeftInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a2d909b6a9ce973fcef1815c079bf2491" kindref="member" tooltip="Subtract a page of integers with a fixed integer.">EaglePageOperations_SubtractRightInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a7c128e6f9b9f259ea589cec034c1761e" kindref="member" tooltip="Multiply a page of integers with a fixed integer.">EaglePageOperations_MultiplyInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a56f44580f81f0d27b43588ceaf6d7bd1" kindref="member" tooltip="Divide a page of integers with a fixed integer.">EaglePageOperations_DivideLeftInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1ad9e14d92cfedc2ee2d7fd5e43da6e73a" kindref="member" tooltip="Divide a page of integers with a fixed integer.">EaglePageOperations_DivideRightInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a2690b7e660c0299fb0089cb5b4984dc5" kindref="member" tooltip="Modulus (remainder) a page of integers with a fixed integer.">EaglePageOperations_ModulusLeftInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a4155c2fc61cfb50ddad6751398a70fe7" kindref="member" tooltip="Modulus (remainder) a page of integers with a fixed integer.">EaglePageOperations_ModulusRightInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a5dac831ee2c65a11de4b8ee12a6e9188" kindref="member" tooltip="Calculate values in a page that are less than an float.">EaglePageOperations_LessThanFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1aa6864058da8a5ca26ebb02491e1fd98e" kindref="member" tooltip="Calculate values in a page that are greater than an float.">EaglePageOperations_GreaterThanFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1ae225611f0b209e1d1e11ae1bc35c3939" kindref="member" tooltip="Calculate values in a page that are less than or equal to an float.">EaglePageOperations_LessThanEqualsFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a9d3c9462933492666ad8652bcc0c9605" kindref="member" tooltip="Calculate values in a page that are greater or equal to than an float.">EaglePageOperations_GreaterThanEqualsFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a00470c39358da8a5668eb12c3e83fb53" kindref="member" tooltip="Compare a page of floats with a fixed float.">EaglePageOperations_EqualsFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a7e3d7b7368e94c5caf680669e2417d3c" kindref="member" tooltip="Compare a page of floats with a fixed float.">EaglePageOperations_NotEqualsFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a861e7f4ed4307737d9d8c630f7cdcec4" kindref="member" tooltip="Add a page of floats with a fixed float.">EaglePageOperations_AdditionFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a47869558a26eb1124a8f43cf4ccc71f3" kindref="member" tooltip="Subtract a page of floats with a fixed float.">EaglePageOperations_SubtractLeftFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a016a6436393344e104c5cd3f3848f0dc" kindref="member" tooltip="Subtract a page of floats with a fixed float.">EaglePageOperations_SubtractRightFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a846c81a30fe7a05d76a446b3c665c73f" kindref="member" tooltip="Multiply a page of floats with a fixed float.">EaglePageOperations_MultiplyFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a6273e3cd132e8b9db447a1c78bb57cae" kindref="member" tooltip="Divide a page of floats with a fixed float.">EaglePageOperations_DivideLeftFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1ae84372f58e22682d7c9698ed116168a0" kindref="member" tooltip="Divide a page of floats with a fixed float.">EaglePageOperations_DivideRightFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8h_1ae895c29456f25508ce2fc4dae1e58ca6" kindref="member" tooltip="Cast integer values to boolean (0 and 1).">EaglePageOperations_CastIntToBool</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a915b1e6e6b789d976601044cc1e419ab" kindref="member" tooltip="Calculate logical AND between two pages.">EaglePageOperations_AndPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a0f3d6e7d7008dfa6e9dc501dc92c1e3e" kindref="member" tooltip="Calculate logical OR between two pages.">EaglePageOperations_OrPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a98101677818d4e0df5687a05ff482fb2" kindref="member" tooltip="Negate page.">EaglePageOperations_NegatePageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a284428e6f5f611cfa65599323b5aac0f" kindref="member" tooltip="Cast INTEGER page to FLOAT page.">EaglePageOperations_CastPageIntFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1aa56d46b2b2bef43d0c2d34405737ac1a" kindref="member" tooltip="Negate page.">EaglePageOperations_NegatePageFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a12faa846fed0497aa0f864357adc25bd" kindref="member" tooltip="Calculate logical NOT of a page.">EaglePageOperations_NotPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a21fc7a5bfee8005f282ef3ed7364ff22" kindref="member" tooltip="Addition of two pages.">EaglePageOperations_AdditionPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a75b23c865944d4a1b7948a9aa2adc915" kindref="member" tooltip="Addition of two pages.">EaglePageOperations_AdditionPageFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a5f9ec379ed68d7a8cc0770c5fd0b4f6c" kindref="member" tooltip="Multiplication of two pages.">EaglePageOperations_MultiplyPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a413e49906bb479f9083827abd8963675" kindref="member" tooltip="Multiplication of two pages.">EaglePageOperations_MultiplyPageFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a6ef4ae9096f59c67123469ac37362cce" kindref="member" tooltip="Equals comparison between two pages.">EaglePageOperations_EqualsPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a0fbcb28623e90d9b8766e21e9ded7f4f" kindref="member" tooltip="Equals comparison between two pages.">EaglePageOperations_EqualsPageFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a6a93cd870158056ca135eff01bc35910" kindref="member" tooltip="Not equals comparison between two pages.">EaglePageOperations_NotEqualsPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a959e133141972d4cf9bd9af7d0b636b6" kindref="member" tooltip="Not equals comparison between two pages.">EaglePageOperations_NotEqualsPageFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a257bbb90faf1843e888f8e5cf18618ed" kindref="member" tooltip="Send records to another provider based on a condition.">EaglePageOperations_SendPageToProvider</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1ac9e90c2aede230864b030c03d87bc207" kindref="member" tooltip="Modulus of two pages.">EaglePageOperations_ModulusPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a46d8374f2554c3098152ff468220744b" kindref="member" tooltip="Greater than comparison between two pages.">EaglePageOperations_GreaterThanPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a622ae1b85c8c27949088a6cc056fd69f" kindref="member" tooltip="Greater than comparison between two pages.">EaglePageOperations_GreaterThanPageFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a87fe8ca136417c4786f08ab6ebc124bd" kindref="member" tooltip="Less than comparison between two pages.">EaglePageOperations_LessThanPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1af27c52761ca2c22702a9757c4a17cbad" kindref="member" tooltip="Less than comparison between two pages.">EaglePageOperations_LessThanPageFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a3a5e103fbe1bb5eac03b8784df1ac3ad" kindref="member" tooltip="Greater than or equal to comparison between two pages.">EaglePageOperations_GreaterThanEqualPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a5426fa057acf4c558a72f30a0098bfe5" kindref="member" tooltip="Greater than or equal to comparison between two pages.">EaglePageOperations_GreaterThanEqualPageFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1aa5c9b2ce2ebc73ba46b55aac558fff35" kindref="member" tooltip="Less than or equal to comparison between two pages.">EaglePageOperations_LessThanEqualPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1ad9133605694a86d29cbcfa46e8f28e46" kindref="member" tooltip="Less than or equal to comparison between two pages.">EaglePageOperations_LessThanEqualPageFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1abc383e35d1d4316e7be5150777babea7" kindref="member" tooltip="Subtraction (minus) of two pages.">EaglePageOperations_SubtractPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a721ddc8191c620d97f909d10e551ecbf" kindref="member" tooltip="Subtraction (minus) of two pages.">EaglePageOperations_SubtractPageFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a28a33a620293a0272815f6128c723047" kindref="member" tooltip="Division of two pages.">EaglePageOperations_DividePageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a72548bca2dde60339ae9da04c4fb5403" kindref="member" tooltip="Division of two pages.">EaglePageOperations_DividePageFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a98a63b31f899a86be0b775326d5b5620" kindref="member" tooltip="Calculate square root of a page.">EaglePageOperations_SqrtPageFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a40d98b84f9efcf9576cc5ed822f591d8" kindref="member" tooltip="Private function used by EaglePageOperations_SendPageToProvider().">EaglePageOperations_SendPageToProviderInteger_</ref>(<ref refid="struct_eagle_page_provider" kindref="compound" tooltip="A page provider.">EaglePageProvider</ref><sp/>*provider,</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a85f615bceb1bfcb2f5f536e7004330f5" kindref="member" tooltip="Private function used by EaglePageOperations_SendPageToProvider().">EaglePageOperations_SendPageToProviderVarchar_</ref>(<ref refid="struct_eagle_page_provider" kindref="compound" tooltip="A page provider.">EaglePageProvider</ref><sp/>*provider,</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a6d222018a9344a7a91858ff8d28b2bc8" kindref="member" tooltip="Private function used by EaglePageOperations_SendPageToProvider().">EaglePageOperations_SendPageToProviderFloat_</ref>(<ref refid="struct_eagle_page_provider" kindref="compound" tooltip="A page provider.">EaglePageProvider</ref><sp/>*provider,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.h"/>
  </compounddef>
</doxygen>
