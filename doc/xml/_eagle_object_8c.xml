<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="_eagle_object_8c" kind="file">
    <compoundname>EagleObject.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="_eagle_object_8c" local="yes">EagleObject.h</includes>
    <includes refid="_eagle_8h" local="yes">Eagle.h</includes>
    <includes refid="_eagle_boolean_8h" local="yes">EagleBoolean.h</includes>
    <includedby refid="_eagle_object_8c" local="yes">eagle/eagle/EagleObject.c</includedby>
    <incdepgraph>
      <node id="753">
        <label>eagle/eagle/EagleObject.c</label>
        <link refid="EagleObject.c"/>
        <childnode refid="754" relation="include">
        </childnode>
        <childnode refid="755" relation="include">
        </childnode>
        <childnode refid="756" relation="include">
        </childnode>
        <childnode refid="753" relation="include">
        </childnode>
        <childnode refid="757" relation="include">
        </childnode>
        <childnode refid="758" relation="include">
        </childnode>
      </node>
      <node id="754">
        <label>stdlib.h</label>
      </node>
      <node id="755">
        <label>string.h</label>
      </node>
      <node id="758">
        <label>EagleBoolean.h</label>
        <link refid="_eagle_boolean_8h"/>
      </node>
      <node id="757">
        <label>Eagle.h</label>
        <link refid="_eagle_8h"/>
      </node>
      <node id="756">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="759">
        <label>eagle/eagle/EagleObject.c</label>
        <link refid="EagleObject.c"/>
        <childnode refid="759" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_eagle_object_8c_1a263140d51404fab7c64a4f61398e9bfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member">EagleBoolean</ref></type>
        <definition>EagleBoolean EagleObject_equals</definition>
        <argsstring>(void *obj1, void *obj2)</argsstring>
        <name>EagleObject_equals</name>
        <param>
          <type>void *</type>
          <declname>obj1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj2</declname>
        </param>
        <briefdescription>
<para>Check if two objects are equal. </para>        </briefdescription>
        <detaileddescription>
<para>If either of the objects are NULL or both of them are NULL then the result will be EagleFalse. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj1</parametername>
</parameternamelist>
<parameterdescription>
<para>First object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>EagleTrue if both parameters are not NULL and they have the same pointer address. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EagleObject.c" line="7" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EagleObject.c" bodystart="6" bodyend="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_object_8h" kindref="compound">EagleObject.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="_eagle_object_8h_1a263140d51404fab7c64a4f61398e9bfe" refkind="member"><highlight class="normal"><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member" tooltip="Enum for representing boolean values.">EagleBoolean</ref><sp/><ref refid="_eagle_object_8c_1a263140d51404fab7c64a4f61398e9bfe" kindref="member" tooltip="Check if two objects are equal.">EagleObject_equals</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj2)</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>NULLs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>obj1<sp/>||<sp/>NULL<sp/>==<sp/>obj2)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7aa5c22bab5fe5699bcf03606cb6905d72c" kindref="member" tooltip="FALSE.">EagleFalse</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>the<sp/>pointers<sp/>are<sp/>equal<sp/>then<sp/>we<sp/>don&apos;t<sp/>need<sp/>to<sp/>go<sp/>any<sp/>further<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj1<sp/>==<sp/>obj2;</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EagleObject.c"/>
  </compounddef>
</doxygen>
