<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="_eagle_page_provider_virtual_8h" kind="file">
    <compoundname>EaglePageProviderVirtual.h</compoundname>
    <includes refid="_eagle_data_type_8h" local="yes">EagleDataType.h</includes>
    <includes refid="_eagle_boolean_8h" local="yes">EagleBoolean.h</includes>
    <includes refid="_eagle_page_8h" local="yes">EaglePage.h</includes>
    <includes refid="_eagle_page_provider_8h" local="yes">EaglePageProvider.h</includes>
    <includedby refid="_eagle_page_provider_virtual_8c" local="yes">eagle/eagle/EaglePageProviderVirtual.c</includedby>
    <includedby refid="_eagle_db_information_schema_8c" local="yes">eagle/eagledb/EagleDbInformationSchema.c</includedby>
    <includedby refid="_eagle_db_information_schema_8h" local="yes">eagle/eagledb/EagleDbInformationSchema.h</includedby>
    <incdepgraph>
      <node id="1225">
        <label>EagleLinkedList.h</label>
        <link refid="_eagle_linked_list_8h"/>
        <childnode refid="1222" relation="include">
        </childnode>
        <childnode refid="1216" relation="include">
        </childnode>
        <childnode refid="1219" relation="include">
        </childnode>
        <childnode refid="1226" relation="include">
        </childnode>
      </node>
      <node id="1223">
        <label>mach/mach_time.h</label>
      </node>
      <node id="1222">
        <label>EagleSynchronizer.h</label>
        <link refid="_eagle_synchronizer_8h"/>
        <childnode refid="1223" relation="include">
        </childnode>
        <childnode refid="1224" relation="include">
        </childnode>
        <childnode refid="1216" relation="include">
        </childnode>
      </node>
      <node id="1221">
        <label>pthread.h</label>
      </node>
      <node id="1227">
        <label>EaglePageProviderType.h</label>
        <link refid="_eagle_page_provider_type_8h"/>
      </node>
      <node id="1218">
        <label>EagleData.h</label>
        <link refid="_eagle_data_8h"/>
        <childnode refid="1215" relation="include">
        </childnode>
      </node>
      <node id="1215">
        <label>EagleDataType.h</label>
        <link refid="_eagle_data_type_8h"/>
      </node>
      <node id="1216">
        <label>EagleBoolean.h</label>
        <link refid="_eagle_boolean_8h"/>
      </node>
      <node id="1219">
        <label>Eagle.h</label>
        <link refid="_eagle_8h"/>
      </node>
      <node id="1217">
        <label>EaglePage.h</label>
        <link refid="_eagle_page_8h"/>
        <childnode refid="1216" relation="include">
        </childnode>
        <childnode refid="1218" relation="include">
        </childnode>
        <childnode refid="1219" relation="include">
        </childnode>
        <childnode refid="1215" relation="include">
        </childnode>
      </node>
      <node id="1214">
        <label>eagle/eagle/EaglePageProviderVirtual.h</label>
        <link refid="EaglePageProviderVirtual.h"/>
        <childnode refid="1215" relation="include">
        </childnode>
        <childnode refid="1216" relation="include">
        </childnode>
        <childnode refid="1217" relation="include">
        </childnode>
        <childnode refid="1220" relation="include">
        </childnode>
      </node>
      <node id="1220">
        <label>EaglePageProvider.h</label>
        <link refid="_eagle_page_provider_8h"/>
        <childnode refid="1221" relation="include">
        </childnode>
        <childnode refid="1217" relation="include">
        </childnode>
        <childnode refid="1222" relation="include">
        </childnode>
        <childnode refid="1216" relation="include">
        </childnode>
        <childnode refid="1225" relation="include">
        </childnode>
        <childnode refid="1219" relation="include">
        </childnode>
        <childnode refid="1215" relation="include">
        </childnode>
        <childnode refid="1227" relation="include">
        </childnode>
      </node>
      <node id="1224">
        <label>EagleLock.h</label>
        <link refid="_eagle_lock_8h"/>
        <childnode refid="1221" relation="include">
        </childnode>
        <childnode refid="1219" relation="include">
        </childnode>
      </node>
      <node id="1226">
        <label>EagleLinkedListItem.h</label>
        <link refid="_eagle_linked_list_item_8h"/>
        <childnode refid="1219" relation="include">
        </childnode>
        <childnode refid="1216" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1232">
        <label>eagle/eagledb/EagleDbInstance.c</label>
        <link refid="_eagle_db_instance_8c"/>
        <childnode refid="1232" relation="include">
        </childnode>
      </node>
      <node id="1230">
        <label>eagle/eagledb/EagleDbInformationSchema.c</label>
        <link refid="_eagle_db_information_schema_8c"/>
        <childnode refid="1230" relation="include">
        </childnode>
      </node>
      <node id="1231">
        <label>eagle/eagledb/EagleDbInformationSchema.h</label>
        <link refid="_eagle_db_information_schema_8h"/>
        <childnode refid="1232" relation="include">
        </childnode>
      </node>
      <node id="1229">
        <label>eagle/eagle/EaglePageProviderVirtual.c</label>
        <link refid="_eagle_page_provider_virtual_8c"/>
      </node>
      <node id="1228">
        <label>eagle/eagle/EaglePageProviderVirtual.h</label>
        <link refid="EaglePageProviderVirtual.h"/>
        <childnode refid="1229" relation="include">
        </childnode>
        <childnode refid="1230" relation="include">
        </childnode>
        <childnode refid="1231" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_eagle_page_provider_virtual" prot="public">EaglePageProviderVirtual</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_eagle_page_provider_virtual_8h_1a826f788228b9510b529cffaea06072d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member">EagleBoolean</ref></type>
        <definition>EagleBoolean EaglePageProviderVirtual_add</definition>
        <argsstring>(EaglePageProviderVirtual *epp, void *data)</argsstring>
        <name>EaglePageProviderVirtual_add</name>
        <param>
          <type><ref refid="struct_eagle_page_provider_virtual" kindref="compound">EaglePageProviderVirtual</ref> *</type>
          <declname>epp</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Add a record to a writable provider. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to add to the stream. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>EagleTrue on success. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderVirtual.h" line="90" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderVirtual.c" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_virtual_8h_1a9bdfa94e5cb1b5ce96fdbc93aece6c91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageProviderVirtual_Delete</definition>
        <argsstring>(EaglePageProviderVirtual *epp)</argsstring>
        <name>EaglePageProviderVirtual_Delete</name>
        <param>
          <type><ref refid="struct_eagle_page_provider_virtual" kindref="compound">EaglePageProviderVirtual</ref> *</type>
          <declname>epp</declname>
        </param>
        <briefdescription>
<para>Free a page provider. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>Page provider instance. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderVirtual.h" line="82" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderVirtual.c" bodystart="37" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_virtual_8h_1a72b4d1bbd196fe85a19cc933d2699b4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
        <definition>EaglePage* EaglePageProviderVirtual_getPage</definition>
        <argsstring>(EaglePageProviderVirtual *epp, int pageNumber)</argsstring>
        <name>EaglePageProviderVirtual_getPage</name>
        <param>
          <type><ref refid="struct_eagle_page_provider_virtual" kindref="compound">EaglePageProviderVirtual</ref> *</type>
          <declname>epp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pageNumber</declname>
        </param>
        <briefdescription>
<para>Get a random page from a provider. </para>        </briefdescription>
        <detaileddescription>
<para>You may only use this if <ref refid="_eagle_page_provider_8c_1a8c7f6eaf3a9132a15b2020473a7b69fa" kindref="member">EaglePageProvider_isRandomAccess()</ref> returns EagleTrue. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pageNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of the page where the first page will be 0. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The page, or NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderVirtual.h" line="124" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderVirtual.c" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_virtual_8h_1a4dc3021059eeb8b550027072b00cc3d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member">EagleBoolean</ref></type>
        <definition>EagleBoolean EaglePageProviderVirtual_isRandomAccess</definition>
        <argsstring>(EaglePageProviderVirtual *epp)</argsstring>
        <name>EaglePageProviderVirtual_isRandomAccess</name>
        <param>
          <type><ref refid="struct_eagle_page_provider_virtual" kindref="compound">EaglePageProviderVirtual</ref> *</type>
          <declname>epp</declname>
        </param>
        <briefdescription>
<para>Check is a providers pages can be access in any order with <ref refid="_eagle_page_provider_8c_1addcb8c0174aa93f30996b7ed0c5183dc" kindref="member">EaglePageProvider_getPage()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderVirtual.h" line="116" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderVirtual.c" bodystart="70" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_virtual_8h_1a1eaae0d2cf9987a858ee6e39db296680" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_eagle_page_provider_virtual" kindref="compound">EaglePageProviderVirtual</ref> *</type>
        <definition>EaglePageProviderVirtual* EaglePageProviderVirtual_New</definition>
        <argsstring>(int recordsPerPage, char *name, EagleDataType type, void *obj, void(*free)(void *), EagleBoolean(*add)(void *, void *), int(*pagesRemaining)(void *), EaglePage *(*nextPage)(void *), void(*reset)(void *), EaglePage *(*getPage)(void *, int))</argsstring>
        <name>EaglePageProviderVirtual_New</name>
        <param>
          <type>int</type>
          <declname>recordsPerPage</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="_eagle_data_type_8h_1ac484ab15f125f81b0437f7aed65fbbb2" kindref="member">EagleDataType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>void(*)(void *)</type>
          <declname>free</declname>
        </param>
        <param>
          <type><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member">EagleBoolean</ref>(*)(void *, void *)</type>
          <declname>add</declname>
        </param>
        <param>
          <type>int(*)(void *)</type>
          <declname>pagesRemaining</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *(*)(void *)</type>
          <declname>nextPage</declname>
        </param>
        <param>
          <type>void(*)(void *)</type>
          <declname>reset</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *(*)(void *, int)</type>
          <declname>getPage</declname>
        </param>
        <briefdescription>
<para>Create a new writable page provider with zero records. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">recordsPerPage</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount of records per page. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the provider. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>Data type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>This object is passed as the first argument to all callback functions. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">free</parametername>
</parameternamelist>
<parameterdescription>
<para>Function pointer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">add</parametername>
</parameternamelist>
<parameterdescription>
<para>Function pointer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pagesRemaining</parametername>
</parameternamelist>
<parameterdescription>
<para>Function pointer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nextPage</parametername>
</parameternamelist>
<parameterdescription>
<para>Function pointer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reset</parametername>
</parameternamelist>
<parameterdescription>
<para>Function pointer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">getPage</parametername>
</parameternamelist>
<parameterdescription>
<para>Function pointer. If this is NULL then <ref refid="_eagle_page_provider_8c_1a8c7f6eaf3a9132a15b2020473a7b69fa" kindref="member">EaglePageProvider_isRandomAccess()</ref> will return EagleFalse. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new virtual provider. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderVirtual.h" line="76" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderVirtual.c" bodystart="6" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_virtual_8h_1a5b76c411c438632609413a771778e37e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
        <definition>EaglePage* EaglePageProviderVirtual_nextPage</definition>
        <argsstring>(EaglePageProviderVirtual *epp)</argsstring>
        <name>EaglePageProviderVirtual_nextPage</name>
        <param>
          <type><ref refid="struct_eagle_page_provider_virtual" kindref="compound">EaglePageProviderVirtual</ref> *</type>
          <declname>epp</declname>
        </param>
        <briefdescription>
<para>Get the next page. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The next page, or NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderVirtual.h" line="104" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderVirtual.c" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_virtual_8h_1a3f613bb973bc1ad91a56961ba605b233" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EaglePageProviderVirtual_pagesRemaining</definition>
        <argsstring>(EaglePageProviderVirtual *epp)</argsstring>
        <name>EaglePageProviderVirtual_pagesRemaining</name>
        <param>
          <type><ref refid="struct_eagle_page_provider_virtual" kindref="compound">EaglePageProviderVirtual</ref> *</type>
          <declname>epp</declname>
        </param>
        <briefdescription>
<para>Return the amount of pages remaining. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of pages available for reading. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderVirtual.h" line="97" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderVirtual.c" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_virtual_8h_1ab6b4878e516cccc97a0b805032265b74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageProviderVirtual_reset</definition>
        <argsstring>(EaglePageProviderVirtual *epp)</argsstring>
        <name>EaglePageProviderVirtual_reset</name>
        <param>
          <type><ref refid="struct_eagle_page_provider_virtual" kindref="compound">EaglePageProviderVirtual</ref> *</type>
          <declname>epp</declname>
        </param>
        <briefdescription>
<para>Reset the cursor of a provider. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderVirtual.h" line="110" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderVirtual.c" bodystart="65" bodyend="68"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>eagle_EaglePageProviderVirtual_h</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>eagle_EaglePageProviderVirtual_h</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_data_type_8h" kindref="compound">EagleDataType.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_boolean_8h" kindref="compound">EagleBoolean.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_page_8h" kindref="compound">EaglePage.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_page_provider_8h" kindref="compound">EaglePageProvider.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="struct_eagle_page_provider_virtual" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14" refid="struct_eagle_page_provider_virtual_1a823322f3f10b2fd3df8f9a377af077c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_page_provider_8h_1a1742475040e6c681df7d828121b76519" kindref="member" tooltip="All &amp;quot;subtypes&amp;quot; of EaglePageProvider will have this header.">EaglePageProviderHeader</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19" refid="struct_eagle_page_provider_virtual_1aa919482768c0eac179575481f77e0fa3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24" refid="struct_eagle_page_provider_virtual_1ab11e308af4d13f0e0e4bd2c66dd5c1a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*free)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29" refid="struct_eagle_page_provider_virtual_1a0f6be0103a76477f4caad9920b35e890" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member" tooltip="Enum for representing boolean values.">EagleBoolean</ref><sp/>(*add)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34" refid="struct_eagle_page_provider_virtual_1a34607682ff4e5edcf744b7d048df34c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*pagesRemaining)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39" refid="struct_eagle_page_provider_virtual_1af03bfed0d8201c8681b0d33191e155cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref>*<sp/>(*nextPage)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44" refid="struct_eagle_page_provider_virtual_1a105e0e55b4d80bf852f6a1bac5d6baf0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*reset)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49" refid="struct_eagle_page_provider_virtual_1ade6483e105fabe59d2bd04a97966a2ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref>*<sp/>(*getPage)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>int);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal">}<sp/><ref refid="struct_eagle_page_provider_virtual" kindref="compound">EaglePageProviderVirtual</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="struct_eagle_page_provider_virtual" kindref="compound">EaglePageProviderVirtual</ref>*<sp/><ref refid="_eagle_page_provider_virtual_8c_1a1eaae0d2cf9987a858ee6e39db296680" kindref="member" tooltip="Create a new writable page provider with zero records.">EaglePageProviderVirtual_New</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recordsPerPage,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ac484ab15f125f81b0437f7aed65fbbb2" kindref="member" tooltip="Data types for pages.">EagleDataType</ref><sp/>type,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*free)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member" tooltip="Enum for representing boolean values.">EagleBoolean</ref><sp/>(*add)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*pagesRemaining)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref>*<sp/>(*nextPage)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*reset)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref>*<sp/>(*getPage)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_virtual_8c_1a9bdfa94e5cb1b5ce96fdbc93aece6c91" kindref="member" tooltip="Free a page provider.">EaglePageProviderVirtual_Delete</ref>(<ref refid="struct_eagle_page_provider_virtual" kindref="compound">EaglePageProviderVirtual</ref><sp/>*epp);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member" tooltip="Enum for representing boolean values.">EagleBoolean</ref><sp/><ref refid="_eagle_page_provider_virtual_8c_1a826f788228b9510b529cffaea06072d0" kindref="member" tooltip="Add a record to a writable provider.">EaglePageProviderVirtual_add</ref>(<ref refid="struct_eagle_page_provider_virtual" kindref="compound">EaglePageProviderVirtual</ref><sp/>*epp,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_virtual_8c_1a3f613bb973bc1ad91a56961ba605b233" kindref="member" tooltip="Return the amount of pages remaining.">EaglePageProviderVirtual_pagesRemaining</ref>(<ref refid="struct_eagle_page_provider_virtual" kindref="compound">EaglePageProviderVirtual</ref><sp/>*epp);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref>*<sp/><ref refid="_eagle_page_provider_virtual_8c_1a5b76c411c438632609413a771778e37e" kindref="member" tooltip="Get the next page.">EaglePageProviderVirtual_nextPage</ref>(<ref refid="struct_eagle_page_provider_virtual" kindref="compound">EaglePageProviderVirtual</ref><sp/>*epp);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_virtual_8c_1ab6b4878e516cccc97a0b805032265b74" kindref="member" tooltip="Reset the cursor of a provider.">EaglePageProviderVirtual_reset</ref>(<ref refid="struct_eagle_page_provider_virtual" kindref="compound">EaglePageProviderVirtual</ref><sp/>*epp);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member" tooltip="Enum for representing boolean values.">EagleBoolean</ref><sp/><ref refid="_eagle_page_provider_virtual_8c_1a4dc3021059eeb8b550027072b00cc3d1" kindref="member" tooltip="Check is a providers pages can be access in any order with EaglePageProvider_getPage()...">EaglePageProviderVirtual_isRandomAccess</ref>(<ref refid="struct_eagle_page_provider_virtual" kindref="compound">EaglePageProviderVirtual</ref><sp/>*epp);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref>*<sp/><ref refid="_eagle_page_provider_virtual_8c_1a72b4d1bbd196fe85a19cc933d2699b4c" kindref="member" tooltip="Get a random page from a provider.">EaglePageProviderVirtual_getPage</ref>(<ref refid="struct_eagle_page_provider_virtual" kindref="compound">EaglePageProviderVirtual</ref><sp/>*epp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pageNumber);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderVirtual.h"/>
  </compounddef>
</doxygen>
