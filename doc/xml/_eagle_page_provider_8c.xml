<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="_eagle_page_provider_8c" kind="file">
    <compoundname>EaglePageProvider.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="_eagle_page_provider_8c" local="yes">EaglePageProviderArray.h</includes>
    <includes refid="_eagle_page_provider_8h" local="yes">EaglePageProvider.h</includes>
    <includes refid="_eagle_data_type_8h" local="yes">EagleDataType.h</includes>
    <includes refid="_eagle_boolean_8h" local="yes">EagleBoolean.h</includes>
    <includes refid="_eagle_page_8h" local="yes">EaglePage.h</includes>
    <includedby refid="_eagle_page_provider_8c" local="yes">eagle/eagle/EaglePageProvider.c</includedby>
    <incdepgraph>
      <node id="922">
        <label>stdlib.h</label>
      </node>
      <node id="936">
        <label>EagleLinkedList.h</label>
        <link refid="_eagle_linked_list_8h"/>
        <childnode refid="933" relation="include">
        </childnode>
        <childnode refid="929" relation="include">
        </childnode>
        <childnode refid="932" relation="include">
        </childnode>
        <childnode refid="937" relation="include">
        </childnode>
      </node>
      <node id="934">
        <label>mach/mach_time.h</label>
      </node>
      <node id="933">
        <label>EagleSynchronizer.h</label>
        <link refid="_eagle_synchronizer_8h"/>
        <childnode refid="934" relation="include">
        </childnode>
        <childnode refid="935" relation="include">
        </childnode>
        <childnode refid="929" relation="include">
        </childnode>
      </node>
      <node id="927">
        <label>pthread.h</label>
      </node>
      <node id="924">
        <label>string.h</label>
      </node>
      <node id="938">
        <label>EaglePageProviderType.h</label>
        <link refid="_eagle_page_provider_type_8h"/>
      </node>
      <node id="930">
        <label>EagleData.h</label>
        <link refid="_eagle_data_8h"/>
        <childnode refid="931" relation="include">
        </childnode>
      </node>
      <node id="931">
        <label>EagleDataType.h</label>
        <link refid="_eagle_data_type_8h"/>
      </node>
      <node id="929">
        <label>EagleBoolean.h</label>
        <link refid="_eagle_boolean_8h"/>
      </node>
      <node id="932">
        <label>Eagle.h</label>
        <link refid="_eagle_8h"/>
      </node>
      <node id="923">
        <label>math.h</label>
      </node>
      <node id="928">
        <label>EaglePage.h</label>
        <link refid="_eagle_page_8h"/>
        <childnode refid="929" relation="include">
        </childnode>
        <childnode refid="930" relation="include">
        </childnode>
        <childnode refid="932" relation="include">
        </childnode>
        <childnode refid="931" relation="include">
        </childnode>
      </node>
      <node id="925">
        <label>stdio.h</label>
      </node>
      <node id="921">
        <label>eagle/eagle/EaglePageProvider.c</label>
        <link refid="EaglePageProvider.c"/>
        <childnode refid="922" relation="include">
        </childnode>
        <childnode refid="923" relation="include">
        </childnode>
        <childnode refid="924" relation="include">
        </childnode>
        <childnode refid="925" relation="include">
        </childnode>
        <childnode refid="921" relation="include">
        </childnode>
        <childnode refid="926" relation="include">
        </childnode>
        <childnode refid="931" relation="include">
        </childnode>
        <childnode refid="929" relation="include">
        </childnode>
        <childnode refid="928" relation="include">
        </childnode>
      </node>
      <node id="926">
        <label>EaglePageProvider.h</label>
        <link refid="_eagle_page_provider_8h"/>
        <childnode refid="927" relation="include">
        </childnode>
        <childnode refid="928" relation="include">
        </childnode>
        <childnode refid="933" relation="include">
        </childnode>
        <childnode refid="929" relation="include">
        </childnode>
        <childnode refid="936" relation="include">
        </childnode>
        <childnode refid="932" relation="include">
        </childnode>
        <childnode refid="931" relation="include">
        </childnode>
        <childnode refid="938" relation="include">
        </childnode>
      </node>
      <node id="935">
        <label>EagleLock.h</label>
        <link refid="_eagle_lock_8h"/>
        <childnode refid="927" relation="include">
        </childnode>
        <childnode refid="932" relation="include">
        </childnode>
      </node>
      <node id="937">
        <label>EagleLinkedListItem.h</label>
        <link refid="_eagle_linked_list_item_8h"/>
        <childnode refid="932" relation="include">
        </childnode>
        <childnode refid="929" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="939">
        <label>eagle/eagle/EaglePageProvider.c</label>
        <link refid="EaglePageProvider.c"/>
        <childnode refid="939" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_eagle_page_provider_8c_1a183a8c681cc94873a7a4674af1c35880" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member">EagleBoolean</ref></type>
        <definition>EagleBoolean EaglePageProvider_add</definition>
        <argsstring>(EaglePageProvider *epp, void *data)</argsstring>
        <name>EaglePageProvider_add</name>
        <param>
          <type><ref refid="struct_eagle_page_provider" kindref="compound">EaglePageProvider</ref> *</type>
          <declname>epp</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Add a record to a writable provider (if possible). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to add to the stream. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>EagleTrue on success. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProvider.c" line="54" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProvider.c" bodystart="53" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_8c_1a28ab9a84c6a2c8cc78757b95d24af9a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageProvider_Delete</definition>
        <argsstring>(EaglePageProvider *epp)</argsstring>
        <name>EaglePageProvider_Delete</name>
        <param>
          <type><ref refid="struct_eagle_page_provider" kindref="compound">EaglePageProvider</ref> *</type>
          <declname>epp</declname>
        </param>
        <briefdescription>
<para>Delete a provider. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProvider.c" line="27" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProvider.c" bodystart="26" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_8c_1addcb8c0174aa93f30996b7ed0c5183dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
        <definition>EaglePage* EaglePageProvider_getPage</definition>
        <argsstring>(EaglePageProvider *epp, int pageNumber)</argsstring>
        <name>EaglePageProvider_getPage</name>
        <param>
          <type><ref refid="struct_eagle_page_provider" kindref="compound">EaglePageProvider</ref> *</type>
          <declname>epp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pageNumber</declname>
        </param>
        <briefdescription>
<para>Get a random page from a provider. </para>        </briefdescription>
        <detaileddescription>
<para>You may only use this if <ref refid="_eagle_page_provider_8c_1a8c7f6eaf3a9132a15b2020473a7b69fa" kindref="member">EaglePageProvider_isRandomAccess()</ref> returns EagleTrue. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pageNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of the page where the first page will be 0. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The page, or NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProvider.c" line="177" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProvider.c" bodystart="176" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_8c_1a8c7f6eaf3a9132a15b2020473a7b69fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member">EagleBoolean</ref></type>
        <definition>EagleBoolean EaglePageProvider_isRandomAccess</definition>
        <argsstring>(EaglePageProvider *epp)</argsstring>
        <name>EaglePageProvider_isRandomAccess</name>
        <param>
          <type><ref refid="struct_eagle_page_provider" kindref="compound">EaglePageProvider</ref> *</type>
          <declname>epp</declname>
        </param>
        <briefdescription>
<para>Check is a providers pages can be access in any order with <ref refid="_eagle_page_provider_8c_1addcb8c0174aa93f30996b7ed0c5183dc" kindref="member">EaglePageProvider_getPage()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProvider.c" line="150" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProvider.c" bodystart="149" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_8c_1a0ceaedea95767ce9e5d3134ca0ac90a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
        <definition>EaglePage* EaglePageProvider_nextPage</definition>
        <argsstring>(EaglePageProvider *epp)</argsstring>
        <name>EaglePageProvider_nextPage</name>
        <param>
          <type><ref refid="struct_eagle_page_provider" kindref="compound">EaglePageProvider</ref> *</type>
          <declname>epp</declname>
        </param>
        <briefdescription>
<para>Get the next page from a provider. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The next page, or NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProvider.c" line="100" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProvider.c" bodystart="99" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_8c_1a2c871cdcad6ce101ef48504808713bc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EaglePageProvider_pagesRemaining</definition>
        <argsstring>(EaglePageProvider *epp)</argsstring>
        <name>EaglePageProvider_pagesRemaining</name>
        <param>
          <type><ref refid="struct_eagle_page_provider" kindref="compound">EaglePageProvider</ref> *</type>
          <declname>epp</declname>
        </param>
        <briefdescription>
<para>Return the amount of pages remaining. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of pages available for reading. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProvider.c" line="73" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProvider.c" bodystart="72" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_8c_1a90d7702a512bc366d8ebe2f505fbf263" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageProvider_reset</definition>
        <argsstring>(EaglePageProvider *epp)</argsstring>
        <name>EaglePageProvider_reset</name>
        <param>
          <type><ref refid="struct_eagle_page_provider" kindref="compound">EaglePageProvider</ref> *</type>
          <declname>epp</declname>
        </param>
        <briefdescription>
<para>Reset the cursor of a provider. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProvider.c" line="127" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProvider.c" bodystart="126" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_8c_1a4807f7e4df6b3ff566caa253a073a702" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EaglePageProvider_TotalPages</definition>
        <argsstring>(int totalRecords, int recordsPerPage)</argsstring>
        <name>EaglePageProvider_TotalPages</name>
        <param>
          <type>int</type>
          <declname>totalRecords</declname>
        </param>
        <param>
          <type>int</type>
          <declname>recordsPerPage</declname>
        </param>
        <briefdescription>
<para>Calculate the amount of pages required to serve a given amount of records. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">totalRecords</parametername>
</parameternamelist>
<parameterdescription>
<para>The total records. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">recordsPerPage</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum records a single page can hold. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of pages left. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProvider.c" line="11" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProvider.c" bodystart="10" bodyend="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_page_provider_array_8h" kindref="compound">EaglePageProviderArray.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_page_provider_single_8h" kindref="compound">EaglePageProviderSingle.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_page_provider_stream_8h" kindref="compound">EaglePageProviderStream.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_page_provider_virtual_8h" kindref="compound">EaglePageProviderVirtual.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="_eagle_page_provider_8h_1a4807f7e4df6b3ff566caa253a073a702" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_8c_1a4807f7e4df6b3ff566caa253a073a702" kindref="member" tooltip="Calculate the amount of pages required to serve a given amount of records.">EaglePageProvider_TotalPages</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalRecords,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recordsPerPage)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pagesLeft;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>totalRecords<sp/>||<sp/>0<sp/>==<sp/>recordsPerPage)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>pagesLeft<sp/>=<sp/>totalRecords<sp/>/<sp/>recordsPerPage;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(totalRecords<sp/>%<sp/>recordsPerPage<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++pagesLeft;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pagesLeft;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="_eagle_page_provider_8h_1a28ab9a84c6a2c8cc78757b95d24af9a4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_8c_1a28ab9a84c6a2c8cc78757b95d24af9a4" kindref="member" tooltip="Delete a provider.">EaglePageProvider_Delete</ref>(<ref refid="struct_eagle_page_provider" kindref="compound" tooltip="A page provider.">EaglePageProvider</ref><sp/>*epp)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>epp)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(epp-&gt;providerType)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182acfec4372c15b902568eadfffcb597d6b" kindref="member" tooltip="A page provider that wraps an array of a fixed size.">EaglePageProviderTypeArray</ref>:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_page_provider_array_8c_1a380666e66452a70fd59a15c7937cf41c" kindref="member" tooltip="Delete a provider.">EaglePageProviderArray_Delete</ref>((<ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref>*)<sp/>epp);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182a025d3b2ba2e4291a44b793c5a91157ca" kindref="member" tooltip="This page provider only contains a single value and will return pages filled with...">EaglePageProviderTypeSingle</ref>:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_page_provider_single_8c_1a487d87fcf03f80757b4ae08ebcfdc218" kindref="member" tooltip="Free a page provider.">EaglePageProviderSingle_Delete</ref>((<ref refid="struct_eagle_page_provider_single" kindref="compound">EaglePageProviderSingle</ref>*)<sp/>epp);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182af7cecea195b442fefe0df741b9d67d12" kindref="member" tooltip="A read/write page provider that can be any length and can have records added to it...">EaglePageProviderTypeStream</ref>:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_page_provider_stream_8c_1a8792ef92bd56b39e4738d41639e88133" kindref="member" tooltip="Free a page provider.">EaglePageProviderStream_Delete</ref>((<ref refid="struct_eagle_page_provider_stream" kindref="compound">EaglePageProviderStream</ref>*)<sp/>epp);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182a28499ece7b81771ce977c57196213ab6" kindref="member" tooltip="A virtual table does not contain any actual data, but rather relies on callback functions...">EaglePageProviderTypeVirtual</ref>:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_page_provider_virtual_8c_1a9bdfa94e5cb1b5ce96fdbc93aece6c91" kindref="member" tooltip="Free a page provider.">EaglePageProviderVirtual_Delete</ref>((<ref refid="struct_eagle_page_provider_virtual" kindref="compound">EaglePageProviderVirtual</ref>*)<sp/>epp);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="_eagle_page_provider_8h_1a183a8c681cc94873a7a4674af1c35880" refkind="member"><highlight class="normal"><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member" tooltip="Enum for representing boolean values.">EagleBoolean</ref><sp/><ref refid="_eagle_page_provider_8c_1a183a8c681cc94873a7a4674af1c35880" kindref="member" tooltip="Add a record to a writable provider (if possible).">EaglePageProvider_add</ref>(<ref refid="struct_eagle_page_provider" kindref="compound" tooltip="A page provider.">EaglePageProvider</ref><sp/>*epp,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(epp-&gt;providerType)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182acfec4372c15b902568eadfffcb597d6b" kindref="member" tooltip="A page provider that wraps an array of a fixed size.">EaglePageProviderTypeArray</ref>:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182a025d3b2ba2e4291a44b793c5a91157ca" kindref="member" tooltip="This page provider only contains a single value and will return pages filled with...">EaglePageProviderTypeSingle</ref>:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182af7cecea195b442fefe0df741b9d67d12" kindref="member" tooltip="A read/write page provider that can be any length and can have records added to it...">EaglePageProviderTypeStream</ref>:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_stream_8c_1a7025b6f29d691c4820cce699f53e569b" kindref="member" tooltip="Add a record to a writable provider.">EaglePageProviderStream_add</ref>((<ref refid="struct_eagle_page_provider_stream" kindref="compound">EaglePageProviderStream</ref>*)<sp/>epp,<sp/>data);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182a28499ece7b81771ce977c57196213ab6" kindref="member" tooltip="A virtual table does not contain any actual data, but rather relies on callback functions...">EaglePageProviderTypeVirtual</ref>:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_virtual_8c_1a826f788228b9510b529cffaea06072d0" kindref="member" tooltip="Add a record to a writable provider.">EaglePageProviderVirtual_add</ref>((<ref refid="struct_eagle_page_provider_virtual" kindref="compound">EaglePageProviderVirtual</ref>*)<sp/>epp,<sp/>data);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7aa5c22bab5fe5699bcf03606cb6905d72c" kindref="member" tooltip="FALSE.">EagleFalse</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="_eagle_page_provider_8h_1a2c871cdcad6ce101ef48504808713bc2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_8c_1a2c871cdcad6ce101ef48504808713bc2" kindref="member" tooltip="Return the amount of pages remaining.">EaglePageProvider_pagesRemaining</ref>(<ref refid="struct_eagle_page_provider" kindref="compound" tooltip="A page provider.">EaglePageProvider</ref><sp/>*epp)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(epp-&gt;providerType)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182acfec4372c15b902568eadfffcb597d6b" kindref="member" tooltip="A page provider that wraps an array of a fixed size.">EaglePageProviderTypeArray</ref>:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="_eagle_page_provider_array_8c_1ab8318f3b57e8569fbd5d825543efd264" kindref="member" tooltip="Pages remaining.">EaglePageProviderArray_pagesRemaining</ref>((<ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref>*)<sp/>epp);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182a025d3b2ba2e4291a44b793c5a91157ca" kindref="member" tooltip="This page provider only contains a single value and will return pages filled with...">EaglePageProviderTypeSingle</ref>:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="_eagle_page_provider_single_8c_1a56bb3a08344b564978b0224a67c6d30b" kindref="member" tooltip="Return the amount of pages remaining.">EaglePageProviderSingle_pagesRemaining</ref>((<ref refid="struct_eagle_page_provider_single" kindref="compound">EaglePageProviderSingle</ref>*)<sp/>epp);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182af7cecea195b442fefe0df741b9d67d12" kindref="member" tooltip="A read/write page provider that can be any length and can have records added to it...">EaglePageProviderTypeStream</ref>:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="_eagle_page_provider_stream_8c_1a9c8383d83c016c60a209d0b1b7655969" kindref="member" tooltip="Return the amount of pages remaining at the moment for a read/write provider.">EaglePageProviderStream_pagesRemaining</ref>((<ref refid="struct_eagle_page_provider_stream" kindref="compound">EaglePageProviderStream</ref>*)<sp/>epp);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182a28499ece7b81771ce977c57196213ab6" kindref="member" tooltip="A virtual table does not contain any actual data, but rather relies on callback functions...">EaglePageProviderTypeVirtual</ref>:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="_eagle_page_provider_virtual_8c_1a3f613bb973bc1ad91a56961ba605b233" kindref="member" tooltip="Return the amount of pages remaining.">EaglePageProviderVirtual_pagesRemaining</ref>((<ref refid="struct_eagle_page_provider_virtual" kindref="compound">EaglePageProviderVirtual</ref>*)<sp/>epp);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="_eagle_page_provider_8h_1a0ceaedea95767ce9e5d3134ca0ac90a8" refkind="member"><highlight class="normal"><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref>*<sp/><ref refid="_eagle_page_provider_8c_1a0ceaedea95767ce9e5d3134ca0ac90a8" kindref="member" tooltip="Get the next page from a provider.">EaglePageProvider_nextPage</ref>(<ref refid="struct_eagle_page_provider" kindref="compound" tooltip="A page provider.">EaglePageProvider</ref><sp/>*epp)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*page;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(epp-&gt;providerType)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182acfec4372c15b902568eadfffcb597d6b" kindref="member" tooltip="A page provider that wraps an array of a fixed size.">EaglePageProviderTypeArray</ref>:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>page<sp/>=<sp/><ref refid="_eagle_page_provider_array_8c_1aee58b0f3f6127873c3f537526c311690" kindref="member" tooltip="Get the next page from a provider.">EaglePageProviderArray_nextPage</ref>((<ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref>*)<sp/>epp);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182a025d3b2ba2e4291a44b793c5a91157ca" kindref="member" tooltip="This page provider only contains a single value and will return pages filled with...">EaglePageProviderTypeSingle</ref>:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>page<sp/>=<sp/><ref refid="_eagle_page_provider_single_8c_1a492b383550a116b27451f296d98270d1" kindref="member" tooltip="Get the next page from a provider.">EaglePageProviderSingle_nextPage</ref>((<ref refid="struct_eagle_page_provider_single" kindref="compound">EaglePageProviderSingle</ref>*)<sp/>epp);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182af7cecea195b442fefe0df741b9d67d12" kindref="member" tooltip="A read/write page provider that can be any length and can have records added to it...">EaglePageProviderTypeStream</ref>:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>page<sp/>=<sp/><ref refid="_eagle_page_provider_stream_8c_1ad384802e24a69a6ffd061f5755c4837a" kindref="member" tooltip="Get the next page from a stream provider.">EaglePageProviderStream_nextPage</ref>((<ref refid="struct_eagle_page_provider_stream" kindref="compound">EaglePageProviderStream</ref>*)<sp/>epp);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182a28499ece7b81771ce977c57196213ab6" kindref="member" tooltip="A virtual table does not contain any actual data, but rather relies on callback functions...">EaglePageProviderTypeVirtual</ref>:</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>page<sp/>=<sp/><ref refid="_eagle_page_provider_virtual_8c_1a5b76c411c438632609413a771778e37e" kindref="member" tooltip="Get the next page.">EaglePageProviderVirtual_nextPage</ref>((<ref refid="struct_eagle_page_provider_virtual" kindref="compound">EaglePageProviderVirtual</ref>*)<sp/>epp);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>page;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="_eagle_page_provider_8h_1a90d7702a512bc366d8ebe2f505fbf263" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_8c_1a90d7702a512bc366d8ebe2f505fbf263" kindref="member" tooltip="Reset the cursor of a provider.">EaglePageProvider_reset</ref>(<ref refid="struct_eagle_page_provider" kindref="compound" tooltip="A page provider.">EaglePageProvider</ref><sp/>*epp)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(epp-&gt;providerType)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182acfec4372c15b902568eadfffcb597d6b" kindref="member" tooltip="A page provider that wraps an array of a fixed size.">EaglePageProviderTypeArray</ref>:</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_page_provider_array_8c_1aaf1f8014accfd28b8362a726122d4ab0" kindref="member" tooltip="Reset the cursor of a provider.">EaglePageProviderArray_reset</ref>((<ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref>*)<sp/>epp);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182a025d3b2ba2e4291a44b793c5a91157ca" kindref="member" tooltip="This page provider only contains a single value and will return pages filled with...">EaglePageProviderTypeSingle</ref>:</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_page_provider_single_8c_1aa68b8d54ad58c127366022f6c3327412" kindref="member" tooltip="Reset the cursor of a provider.">EaglePageProviderSingle_reset</ref>((<ref refid="struct_eagle_page_provider_single" kindref="compound">EaglePageProviderSingle</ref>*)<sp/>epp);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182af7cecea195b442fefe0df741b9d67d12" kindref="member" tooltip="A read/write page provider that can be any length and can have records added to it...">EaglePageProviderTypeStream</ref>:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_page_provider_stream_8c_1aa64143fd3c610189581a7a8c317edf12" kindref="member" tooltip="Reset the cursor of a provider.">EaglePageProviderStream_reset</ref>((<ref refid="struct_eagle_page_provider_stream" kindref="compound">EaglePageProviderStream</ref>*)<sp/>epp);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182a28499ece7b81771ce977c57196213ab6" kindref="member" tooltip="A virtual table does not contain any actual data, but rather relies on callback functions...">EaglePageProviderTypeVirtual</ref>:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_page_provider_virtual_8c_1ab6b4878e516cccc97a0b805032265b74" kindref="member" tooltip="Reset the cursor of a provider.">EaglePageProviderVirtual_reset</ref>((<ref refid="struct_eagle_page_provider_virtual" kindref="compound">EaglePageProviderVirtual</ref>*)<sp/>epp);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="_eagle_page_provider_8h_1a8c7f6eaf3a9132a15b2020473a7b69fa" refkind="member"><highlight class="normal"><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member" tooltip="Enum for representing boolean values.">EagleBoolean</ref><sp/><ref refid="_eagle_page_provider_8c_1a8c7f6eaf3a9132a15b2020473a7b69fa" kindref="member" tooltip="Check is a providers pages can be access in any order with EaglePageProvider_getPage()...">EaglePageProvider_isRandomAccess</ref>(<ref refid="struct_eagle_page_provider" kindref="compound" tooltip="A page provider.">EaglePageProvider</ref><sp/>*epp)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member" tooltip="Enum for representing boolean values.">EagleBoolean</ref><sp/>r;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(epp-&gt;providerType)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182acfec4372c15b902568eadfffcb597d6b" kindref="member" tooltip="A page provider that wraps an array of a fixed size.">EaglePageProviderTypeArray</ref>:</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="_eagle_page_provider_array_8c_1a914c23813fc8fb5a148bf5b97baba2d8" kindref="member" tooltip="Check is a providers pages can be access in any order with EaglePageProvider_getPage()...">EaglePageProviderArray_isRandomAccess</ref>((<ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref>*)<sp/>epp);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182a025d3b2ba2e4291a44b793c5a91157ca" kindref="member" tooltip="This page provider only contains a single value and will return pages filled with...">EaglePageProviderTypeSingle</ref>:</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="_eagle_page_provider_single_8c_1a6ef4671505a45447e6b990e6676408c7" kindref="member" tooltip="Check is a providers pages can be access in any order with EaglePageProvider_getPage()...">EaglePageProviderSingle_isRandomAccess</ref>((<ref refid="struct_eagle_page_provider_single" kindref="compound">EaglePageProviderSingle</ref>*)<sp/>epp);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182af7cecea195b442fefe0df741b9d67d12" kindref="member" tooltip="A read/write page provider that can be any length and can have records added to it...">EaglePageProviderTypeStream</ref>:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="_eagle_page_provider_stream_8c_1a8f7d508914607cfa09e0daec3170c365" kindref="member" tooltip="Check is a providers pages can be access in any order with EaglePageProvider_getPage()...">EaglePageProviderStream_isRandomAccess</ref>((<ref refid="struct_eagle_page_provider_stream" kindref="compound">EaglePageProviderStream</ref>*)<sp/>epp);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182a28499ece7b81771ce977c57196213ab6" kindref="member" tooltip="A virtual table does not contain any actual data, but rather relies on callback functions...">EaglePageProviderTypeVirtual</ref>:</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="_eagle_page_provider_virtual_8c_1a4dc3021059eeb8b550027072b00cc3d1" kindref="member" tooltip="Check is a providers pages can be access in any order with EaglePageProvider_getPage()...">EaglePageProviderVirtual_isRandomAccess</ref>((<ref refid="struct_eagle_page_provider_virtual" kindref="compound">EaglePageProviderVirtual</ref>*)<sp/>epp);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="_eagle_page_provider_8h_1addcb8c0174aa93f30996b7ed0c5183dc" refkind="member"><highlight class="normal"><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref>*<sp/><ref refid="_eagle_page_provider_8c_1addcb8c0174aa93f30996b7ed0c5183dc" kindref="member" tooltip="Get a random page from a provider.">EaglePageProvider_getPage</ref>(<ref refid="struct_eagle_page_provider" kindref="compound" tooltip="A page provider.">EaglePageProvider</ref><sp/>*epp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pageNumber)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*page;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(epp-&gt;providerType)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182acfec4372c15b902568eadfffcb597d6b" kindref="member" tooltip="A page provider that wraps an array of a fixed size.">EaglePageProviderTypeArray</ref>:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>page<sp/>=<sp/><ref refid="_eagle_page_provider_array_8c_1ad848a6337b6b16331b57b5f6778b5751" kindref="member" tooltip="Get a random page from a provider.">EaglePageProviderArray_getPage</ref>((<ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref>*)<sp/>epp,<sp/>pageNumber);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182a025d3b2ba2e4291a44b793c5a91157ca" kindref="member" tooltip="This page provider only contains a single value and will return pages filled with...">EaglePageProviderTypeSingle</ref>:</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>page<sp/>=<sp/><ref refid="_eagle_page_provider_single_8c_1ad34b753359f3649ee26bfaf0f4109d04" kindref="member" tooltip="Get a random page from a provider.">EaglePageProviderSingle_getPage</ref>((<ref refid="struct_eagle_page_provider_single" kindref="compound">EaglePageProviderSingle</ref>*)<sp/>epp,<sp/>pageNumber);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182af7cecea195b442fefe0df741b9d67d12" kindref="member" tooltip="A read/write page provider that can be any length and can have records added to it...">EaglePageProviderTypeStream</ref>:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>page<sp/>=<sp/><ref refid="_eagle_page_provider_stream_8c_1afd6523b6ebb0f0c496f96f23240eaa00" kindref="member" tooltip="Get a random page from a provider.">EaglePageProviderStream_getPage</ref>((<ref refid="struct_eagle_page_provider_stream" kindref="compound">EaglePageProviderStream</ref>*)<sp/>epp,<sp/>pageNumber);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182a28499ece7b81771ce977c57196213ab6" kindref="member" tooltip="A virtual table does not contain any actual data, but rather relies on callback functions...">EaglePageProviderTypeVirtual</ref>:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>page<sp/>=<sp/><ref refid="_eagle_page_provider_virtual_8c_1a72b4d1bbd196fe85a19cc933d2699b4c" kindref="member" tooltip="Get a random page from a provider.">EaglePageProviderVirtual_getPage</ref>((<ref refid="struct_eagle_page_provider_virtual" kindref="compound">EaglePageProviderVirtual</ref>*)<sp/>epp,<sp/>pageNumber);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>page;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProvider.c"/>
  </compounddef>
</doxygen>
