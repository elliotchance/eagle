<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="_eagle_db_tuple_8h" kind="file">
    <compoundname>EagleDbTuple.h</compoundname>
    <includes refid="_eagle_db_column_8h" local="yes">EagleDbColumn.h</includes>
    <includes refid="_eagle_db_table_8h" local="yes">EagleDbTable.h</includes>
    <includes refid="_eagle_8h" local="yes">Eagle.h</includes>
    <includes refid="_eagle_db_sql_value_8h" local="yes">EagleDbSqlValue.h</includes>
    <includedby refid="_eagle_db_instance_8c" local="yes">eagle/eagledb/EagleDbInstance.c</includedby>
    <includedby refid="_eagle_db_table_data_8h" local="yes">eagle/eagledb/EagleDbTableData.h</includedby>
    <includedby refid="_eagle_db_tuple_8c" local="yes">eagle/eagledb/EagleDbTuple.c</includedby>
    <incdepgraph>
      <node id="2921">
        <label>eagle/eagledb/EagleDbTuple.h</label>
        <link refid="EagleDbTuple.h"/>
        <childnode refid="2922" relation="include">
        </childnode>
        <childnode refid="2926" relation="include">
        </childnode>
        <childnode refid="2925" relation="include">
        </childnode>
        <childnode refid="2934" relation="include">
        </childnode>
      </node>
      <node id="2936">
        <label>EagleDbSqlExpressionType.h</label>
        <link refid="_eagle_db_sql_expression_type_8h"/>
      </node>
      <node id="2927">
        <label>EagleLinkedList.h</label>
        <link refid="_eagle_linked_list_8h"/>
        <childnode refid="2928" relation="include">
        </childnode>
        <childnode refid="2932" relation="include">
        </childnode>
        <childnode refid="2925" relation="include">
        </childnode>
        <childnode refid="2933" relation="include">
        </childnode>
      </node>
      <node id="2929">
        <label>mach/mach_time.h</label>
      </node>
      <node id="2937">
        <label>EagleDbSqlValueType.h</label>
        <link refid="_eagle_db_sql_value_type_8h"/>
      </node>
      <node id="2928">
        <label>EagleSynchronizer.h</label>
        <link refid="_eagle_synchronizer_8h"/>
        <childnode refid="2929" relation="include">
        </childnode>
        <childnode refid="2930" relation="include">
        </childnode>
        <childnode refid="2932" relation="include">
        </childnode>
      </node>
      <node id="2931">
        <label>pthread.h</label>
      </node>
      <node id="2923">
        <label>EagleData.h</label>
        <link refid="_eagle_data_8h"/>
        <childnode refid="2924" relation="include">
        </childnode>
      </node>
      <node id="2924">
        <label>EagleDataType.h</label>
        <link refid="_eagle_data_type_8h"/>
      </node>
      <node id="2932">
        <label>EagleBoolean.h</label>
        <link refid="_eagle_boolean_8h"/>
      </node>
      <node id="2925">
        <label>Eagle.h</label>
        <link refid="_eagle_8h"/>
      </node>
      <node id="2935">
        <label>EagleDbSqlExpressionHeader.h</label>
        <link refid="_eagle_db_sql_expression_header_8h"/>
        <childnode refid="2936" relation="include">
        </childnode>
      </node>
      <node id="2922">
        <label>EagleDbColumn.h</label>
        <link refid="_eagle_db_column_8h"/>
        <childnode refid="2923" relation="include">
        </childnode>
        <childnode refid="2925" relation="include">
        </childnode>
        <childnode refid="2924" relation="include">
        </childnode>
      </node>
      <node id="2934">
        <label>EagleDbSqlValue.h</label>
        <link refid="_eagle_db_sql_value_8h"/>
        <childnode refid="2935" relation="include">
        </childnode>
        <childnode refid="2937" relation="include">
        </childnode>
        <childnode refid="2925" relation="include">
        </childnode>
        <childnode refid="2924" relation="include">
        </childnode>
        <childnode refid="2932" relation="include">
        </childnode>
      </node>
      <node id="2926">
        <label>EagleDbTable.h</label>
        <link refid="_eagle_db_table_8h"/>
        <childnode refid="2922" relation="include">
        </childnode>
        <childnode refid="2925" relation="include">
        </childnode>
        <childnode refid="2927" relation="include">
        </childnode>
      </node>
      <node id="2930">
        <label>EagleLock.h</label>
        <link refid="_eagle_lock_8h"/>
        <childnode refid="2931" relation="include">
        </childnode>
        <childnode refid="2925" relation="include">
        </childnode>
      </node>
      <node id="2933">
        <label>EagleLinkedListItem.h</label>
        <link refid="_eagle_linked_list_item_8h"/>
        <childnode refid="2925" relation="include">
        </childnode>
        <childnode refid="2932" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2948">
        <label>eagle/eagledb/EagleDbTuple.c</label>
        <link refid="_eagle_db_tuple_8c"/>
      </node>
      <node id="2938">
        <label>eagle/eagledb/EagleDbTuple.h</label>
        <link refid="EagleDbTuple.h"/>
        <childnode refid="2939" relation="include">
        </childnode>
        <childnode refid="2940" relation="include">
        </childnode>
        <childnode refid="2948" relation="include">
        </childnode>
      </node>
      <node id="2947">
        <label>eagle/eagledb/EagleDbTableData.c</label>
        <link refid="_eagle_db_table_data_8c"/>
      </node>
      <node id="2940">
        <label>eagle/eagledb/EagleDbTableData.h</label>
        <link refid="_eagle_db_table_data_8h"/>
        <childnode refid="2941" relation="include">
        </childnode>
        <childnode refid="2939" relation="include">
        </childnode>
        <childnode refid="2942" relation="include">
        </childnode>
        <childnode refid="2945" relation="include">
        </childnode>
        <childnode refid="2947" relation="include">
        </childnode>
      </node>
      <node id="2945">
        <label>eagle/eagledb/EagleDbSqlSelect.c</label>
        <link refid="_eagle_db_sql_select_8c"/>
      </node>
      <node id="2946">
        <label>eagle/eagledb/EagleDbSchema.c</label>
        <link refid="_eagle_db_schema_8c"/>
      </node>
      <node id="2942">
        <label>eagle/eagledb/EagleDbSchema.h</label>
        <link refid="_eagle_db_schema_8h"/>
        <childnode refid="2941" relation="include">
        </childnode>
        <childnode refid="2943" relation="include">
        </childnode>
        <childnode refid="2939" relation="include">
        </childnode>
        <childnode refid="2944" relation="include">
        </childnode>
        <childnode refid="2946" relation="include">
        </childnode>
      </node>
      <node id="2939">
        <label>eagle/eagledb/EagleDbInstance.c</label>
        <link refid="_eagle_db_instance_8c"/>
        <childnode refid="2939" relation="include">
        </childnode>
      </node>
      <node id="2944">
        <label>eagle/eagledb/EagleDbInstance.h</label>
        <link refid="_eagle_db_instance_8h"/>
        <childnode refid="2941" relation="include">
        </childnode>
        <childnode refid="2943" relation="include">
        </childnode>
        <childnode refid="2939" relation="include">
        </childnode>
        <childnode refid="2945" relation="include">
        </childnode>
      </node>
      <node id="2941">
        <label>eagle/eagledb/EagleDbInformationSchema.c</label>
        <link refid="_eagle_db_information_schema_8c"/>
        <childnode refid="2941" relation="include">
        </childnode>
      </node>
      <node id="2943">
        <label>eagle/eagledb/EagleDbInformationSchema.h</label>
        <link refid="_eagle_db_information_schema_8h"/>
        <childnode refid="2939" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_eagle_db_tuple" prot="public">EagleDbTuple</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_eagle_db_tuple_8h_1af97cca184b3284c6cba8012086fcfa3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EagleDbTuple_Delete</definition>
        <argsstring>(EagleDbTuple *tuple)</argsstring>
        <name>EagleDbTuple_Delete</name>
        <param>
          <type><ref refid="struct_eagle_db_tuple" kindref="compound">EagleDbTuple</ref> *</type>
          <declname>tuple</declname>
        </param>
        <briefdescription>
<para>Delete a tuple. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">tuple</parametername>
</parameternamelist>
<parameterdescription>
<para>The tuple instance. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbTuple.h" line="37" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbTuple.c" bodystart="34" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_db_tuple_8h_1a2b2b8f183f9a5c082ab5a12a7f34440d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_eagle_db_tuple" kindref="compound">EagleDbTuple</ref> *</type>
        <definition>EagleDbTuple* EagleDbTuple_New</definition>
        <argsstring>(EagleDbTable *table)</argsstring>
        <name>EagleDbTuple_New</name>
        <param>
          <type><ref refid="struct_eagle_db_table" kindref="compound">EagleDbTable</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
<para>Create a new tuple (record). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">table</parametername>
</parameternamelist>
<parameterdescription>
<para>Table instance. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The newly created tuple for <computeroutput>table</computeroutput> definition. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbTuple.h" line="31" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbTuple.c" bodystart="11" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_db_tuple_8h_1a5d19b3d67af53a633ac8816d44a0c0ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member">EagleBoolean</ref></type>
        <definition>EagleBoolean EagleDbTuple_set</definition>
        <argsstring>(EagleDbTuple *tuple, int position, EagleDbSqlValue *value, EagleDataType columnType)</argsstring>
        <name>EagleDbTuple_set</name>
        <param>
          <type><ref refid="struct_eagle_db_tuple" kindref="compound">EagleDbTuple</ref> *</type>
          <declname>tuple</declname>
        </param>
        <param>
          <type>int</type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_db_sql_value" kindref="compound">EagleDbSqlValue</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="_eagle_data_type_8h_1ac484ab15f125f81b0437f7aed65fbbb2" kindref="member">EagleDataType</ref></type>
          <declname>columnType</declname>
        </param>
        <briefdescription>
<para>Set a tuple column with a dynamic value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">tuple</parametername>
</parameternamelist>
<parameterdescription>
<para>The tuple instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">position</parametername>
</parameternamelist>
<parameterdescription>
<para>The column position, the first column will be index 0. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value (of any type). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">columnType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the column in the tuple. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>EagleTrue if the <computeroutput>value</computeroutput> can be cast successfully and put into the tuple. Otherwise EagleFalse will be returned and the tuple will remain unmodified. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbTuple.h" line="79" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbTuple.c" bodystart="82" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_db_tuple_8h_1a1391ec2ce8421342eb5f3ea5ba7baa51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EagleDbTuple_setFloat</definition>
        <argsstring>(EagleDbTuple *tuple, int position, EagleDataTypeFloatType value)</argsstring>
        <name>EagleDbTuple_setFloat</name>
        <param>
          <type><ref refid="struct_eagle_db_tuple" kindref="compound">EagleDbTuple</ref> *</type>
          <declname>tuple</declname>
        </param>
        <param>
          <type>int</type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member">EagleDataTypeFloatType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set a FLOAT value to a column in a tuple. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">tuple</parametername>
</parameternamelist>
<parameterdescription>
<para>The tuple instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">position</parametername>
</parameternamelist>
<parameterdescription>
<para>The column position, the first column will be index 0. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbTuple.h" line="53" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbTuple.c" bodystart="63" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_db_tuple_8h_1aca2dc45fa28cc9d9bdaa16ea362b9183" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EagleDbTuple_setInt</definition>
        <argsstring>(EagleDbTuple *tuple, int position, EagleDataTypeIntegerType value)</argsstring>
        <name>EagleDbTuple_setInt</name>
        <param>
          <type><ref refid="struct_eagle_db_tuple" kindref="compound">EagleDbTuple</ref> *</type>
          <declname>tuple</declname>
        </param>
        <param>
          <type>int</type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member">EagleDataTypeIntegerType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set an INTEGER value to a column in a tuple. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">tuple</parametername>
</parameternamelist>
<parameterdescription>
<para>The tuple instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">position</parametername>
</parameternamelist>
<parameterdescription>
<para>The column position, the first column will be index 0. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbTuple.h" line="45" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbTuple.c" bodystart="54" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_db_tuple_8h_1a5488d8f900ac3082eb368a895c5d2f0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EagleDbTuple_setVarchar</definition>
        <argsstring>(EagleDbTuple *tuple, int position, EagleDataTypeVarcharType value)</argsstring>
        <name>EagleDbTuple_setVarchar</name>
        <param>
          <type><ref refid="struct_eagle_db_tuple" kindref="compound">EagleDbTuple</ref> *</type>
          <declname>tuple</declname>
        </param>
        <param>
          <type>int</type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="_eagle_data_type_8h_1adca1890444ae43d449a6df07beb9c313" kindref="member">EagleDataTypeVarcharType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set a VARCHAR value to a column in a tuple. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">tuple</parametername>
</parameternamelist>
<parameterdescription>
<para>The tuple instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">position</parametername>
</parameternamelist>
<parameterdescription>
<para>The column position, the first column will be index 0. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbTuple.h" line="61" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbTuple.c" bodystart="72" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_db_tuple_8h_1a42e51efb5b8e44c665d224e9371f4f07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* EagleDbTuple_toString</definition>
        <argsstring>(EagleDbTuple *tuple)</argsstring>
        <name>EagleDbTuple_toString</name>
        <param>
          <type><ref refid="struct_eagle_db_tuple" kindref="compound">EagleDbTuple</ref> *</type>
          <declname>tuple</declname>
        </param>
        <briefdescription>
<para>Render a tuple as a string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">tuple</parametername>
</parameternamelist>
<parameterdescription>
<para>The tuple instance. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new string instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbTuple.h" line="68" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbTuple.c" bodystart="120" bodyend="161"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>eagle_EagleDbTuple_h</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>eagle_EagleDbTuple_h</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_db_column_8h" kindref="compound">EagleDbColumn.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_db_table_8h" kindref="compound">EagleDbTable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_8h" kindref="compound">Eagle.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_db_sql_value_8h" kindref="compound">EagleDbSqlValue.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="struct_eagle_db_tuple" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17" refid="struct_eagle_db_tuple_1af00cdd742d205932a8309628d39efd5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_8h_1a36dbf56fa988abbaff74a82249eb6ea4" kindref="member" tooltip="This struct instance variable&amp;#39;s memory is fully managed internally.">EAGLE_ATTR_MANAGED</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**data;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22" refid="struct_eagle_db_tuple_1a33d9bdee5210ec9c8efef6ee8e14027c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_8h_1a7e259482575242c5ba87845cb6695afc" kindref="member" tooltip="This struct instance variable is provided by an external source.">EAGLE_ATTR_PROVIDED</ref><sp/><ref refid="struct_eagle_db_table" kindref="compound" tooltip="A table definition.">EagleDbTable</ref><sp/>*table;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal">}<sp/><ref refid="struct_eagle_db_tuple" kindref="compound" tooltip="A tuple represents a row in a table.">EagleDbTuple</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="struct_eagle_db_tuple" kindref="compound" tooltip="A tuple represents a row in a table.">EagleDbTuple</ref>*<sp/><ref refid="_eagle_db_tuple_8c_1a2b2b8f183f9a5c082ab5a12a7f34440d" kindref="member" tooltip="Create a new tuple (record).">EagleDbTuple_New</ref>(<ref refid="struct_eagle_db_table" kindref="compound" tooltip="A table definition.">EagleDbTable</ref><sp/>*table);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_db_tuple_8c_1af97cca184b3284c6cba8012086fcfa3c" kindref="member" tooltip="Delete a tuple.">EagleDbTuple_Delete</ref>(<ref refid="struct_eagle_db_tuple" kindref="compound" tooltip="A tuple represents a row in a table.">EagleDbTuple</ref><sp/>*tuple);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_db_tuple_8c_1aca2dc45fa28cc9d9bdaa16ea362b9183" kindref="member" tooltip="Set an INTEGER value to a column in a tuple.">EagleDbTuple_setInt</ref>(<ref refid="struct_eagle_db_tuple" kindref="compound" tooltip="A tuple represents a row in a table.">EagleDbTuple</ref><sp/>*tuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>position,<sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>value);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_db_tuple_8c_1a1391ec2ce8421342eb5f3ea5ba7baa51" kindref="member" tooltip="Set a FLOAT value to a column in a tuple.">EagleDbTuple_setFloat</ref>(<ref refid="struct_eagle_db_tuple" kindref="compound" tooltip="A tuple represents a row in a table.">EagleDbTuple</ref><sp/>*tuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>position,<sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>value);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_db_tuple_8c_1a5488d8f900ac3082eb368a895c5d2f0f" kindref="member" tooltip="Set a VARCHAR value to a column in a tuple.">EagleDbTuple_setVarchar</ref>(<ref refid="struct_eagle_db_tuple" kindref="compound" tooltip="A tuple represents a row in a table.">EagleDbTuple</ref><sp/>*tuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>position,<sp/><ref refid="_eagle_data_type_8h_1adca1890444ae43d449a6df07beb9c313" kindref="member" tooltip="The global data type for handling EagleDataTypeVarchar.">EagleDataTypeVarcharType</ref><sp/>value);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="_eagle_db_tuple_8c_1a42e51efb5b8e44c665d224e9371f4f07" kindref="member" tooltip="Render a tuple as a string.">EagleDbTuple_toString</ref>(<ref refid="struct_eagle_db_tuple" kindref="compound" tooltip="A tuple represents a row in a table.">EagleDbTuple</ref><sp/>*tuple);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member" tooltip="Enum for representing boolean values.">EagleBoolean</ref><sp/><ref refid="_eagle_db_tuple_8c_1a6aee184f4be56944f33b2cbcd12a1cfd" kindref="member" tooltip="Set a tuple column with a dynamic value.">EagleDbTuple_set</ref>(<ref refid="struct_eagle_db_tuple" kindref="compound" tooltip="A tuple represents a row in a table.">EagleDbTuple</ref><sp/>*tuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>position,<sp/><ref refid="struct_eagle_db_sql_value" kindref="compound" tooltip="Encapsulates a Value of any type.">EagleDbSqlValue</ref><sp/>*value,<sp/><ref refid="_eagle_data_type_8h_1ac484ab15f125f81b0437f7aed65fbbb2" kindref="member" tooltip="Data types for pages.">EagleDataType</ref><sp/>columnType);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbTuple.h"/>
  </compounddef>
</doxygen>
