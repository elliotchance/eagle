<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="_eagle_instance_8c" kind="file">
    <compoundname>EagleInstance.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">signal.h</includes>
    <includes refid="_eagle_instance_8c" local="yes">EagleInstance.h</includes>
    <includes local="no">pthread.h</includes>
    <includes local="no">mach/mach_time.h</includes>
    <includes refid="_eagle_boolean_8h" local="yes">EagleBoolean.h</includes>
    <includes refid="_eagle_data_8h" local="yes">EagleData.h</includes>
    <includes refid="_eagle_8h" local="yes">Eagle.h</includes>
    <includes refid="_eagle_data_type_8h" local="yes">EagleDataType.h</includes>
    <includes refid="_eagle_page_8h" local="yes">EaglePage.h</includes>
    <includes refid="_eagle_synchronizer_8h" local="yes">EagleSynchronizer.h</includes>
    <includes refid="_eagle_page_operations_8h" local="yes">EaglePageOperations.h</includes>
    <includes refid="_eagle_page_provider_8h" local="yes">EaglePageProvider.h</includes>
    <includes refid="_eagle_db_sql_value_8h" local="yes">EagleDbSqlValue.h</includes>
    <includes refid="_eagle_linked_list_8h" local="yes">EagleLinkedList.h</includes>
    <includes refid="_eagle_plan_job_8h" local="yes">EaglePlanJob.h</includes>
    <includes refid="_eagle_utils_8h" local="yes">EagleUtils.h</includes>
    <includes refid="_eagle_memory_8h" local="yes">EagleMemory.h</includes>
    <includes local="no">time.h</includes>
    <includedby refid="_eagle_instance_8c" local="yes">eagle/eagle/EagleInstance.c</includedby>
    <incdepgraph>
      <node id="290">
        <label>stdlib.h</label>
      </node>
      <node id="309">
        <label>EagleDbSqlExpressionType.h</label>
        <link refid="_eagle_db_sql_expression_type_8h"/>
      </node>
      <node id="289">
        <label>eagle/eagle/EagleInstance.c</label>
        <link refid="EagleInstance.c"/>
        <childnode refid="290" relation="include">
        </childnode>
        <childnode refid="291" relation="include">
        </childnode>
        <childnode refid="292" relation="include">
        </childnode>
        <childnode refid="289" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
        <childnode refid="294" relation="include">
        </childnode>
        <childnode refid="295" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="299" relation="include">
        </childnode>
        <childnode refid="300" relation="include">
        </childnode>
        <childnode refid="302" relation="include">
        </childnode>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="307" relation="include">
        </childnode>
        <childnode refid="304" relation="include">
        </childnode>
        <childnode refid="311" relation="include">
        </childnode>
        <childnode refid="316" relation="include">
        </childnode>
        <childnode refid="317" relation="include">
        </childnode>
        <childnode refid="318" relation="include">
        </childnode>
      </node>
      <node id="316">
        <label>EagleUtils.h</label>
        <link refid="_eagle_utils_8h"/>
        <childnode refid="294" relation="include">
        </childnode>
        <childnode refid="295" relation="include">
        </childnode>
      </node>
      <node id="304">
        <label>EagleLinkedList.h</label>
        <link refid="_eagle_linked_list_8h"/>
        <childnode refid="300" relation="include">
        </childnode>
        <childnode refid="295" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="305" relation="include">
        </childnode>
      </node>
      <node id="313">
        <label>EaglePlanOperation.h</label>
        <link refid="_eagle_plan_operation_8h"/>
        <childnode refid="302" relation="include">
        </childnode>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="295" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="307" relation="include">
        </childnode>
      </node>
      <node id="302">
        <label>EaglePageOperations.h</label>
        <link refid="_eagle_page_operations_8h"/>
        <childnode refid="299" relation="include">
        </childnode>
        <childnode refid="303" relation="include">
        </childnode>
      </node>
      <node id="294">
        <label>mach/mach_time.h</label>
      </node>
      <node id="310">
        <label>EagleDbSqlValueType.h</label>
        <link refid="_eagle_db_sql_value_type_8h"/>
      </node>
      <node id="300">
        <label>EagleSynchronizer.h</label>
        <link refid="_eagle_synchronizer_8h"/>
        <childnode refid="294" relation="include">
        </childnode>
        <childnode refid="301" relation="include">
        </childnode>
        <childnode refid="295" relation="include">
        </childnode>
      </node>
      <node id="293">
        <label>pthread.h</label>
      </node>
      <node id="306">
        <label>EaglePageProviderType.h</label>
        <link refid="_eagle_page_provider_type_8h"/>
      </node>
      <node id="296">
        <label>EagleData.h</label>
        <link refid="_eagle_data_8h"/>
        <childnode refid="297" relation="include">
        </childnode>
      </node>
      <node id="292">
        <label>signal.h</label>
      </node>
      <node id="314">
        <label>EaglePlanBufferProvider.h</label>
        <link refid="_eagle_plan_buffer_provider_8h"/>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="307" relation="include">
        </childnode>
      </node>
      <node id="297">
        <label>EagleDataType.h</label>
        <link refid="_eagle_data_type_8h"/>
      </node>
      <node id="295">
        <label>EagleBoolean.h</label>
        <link refid="_eagle_boolean_8h"/>
      </node>
      <node id="298">
        <label>Eagle.h</label>
        <link refid="_eagle_8h"/>
      </node>
      <node id="318">
        <label>time.h</label>
      </node>
      <node id="308">
        <label>EagleDbSqlExpressionHeader.h</label>
        <link refid="_eagle_db_sql_expression_header_8h"/>
        <childnode refid="309" relation="include">
        </childnode>
      </node>
      <node id="315">
        <label>EaglePlanError.h</label>
        <link refid="_eagle_plan_error_8h"/>
      </node>
      <node id="317">
        <label>EagleMemory.h</label>
        <link refid="_eagle_memory_8h"/>
      </node>
      <node id="299">
        <label>EaglePage.h</label>
        <link refid="_eagle_page_8h"/>
        <childnode refid="295" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
      </node>
      <node id="307">
        <label>EagleDbSqlValue.h</label>
        <link refid="_eagle_db_sql_value_8h"/>
        <childnode refid="308" relation="include">
        </childnode>
        <childnode refid="310" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="295" relation="include">
        </childnode>
      </node>
      <node id="312">
        <label>EaglePlan.h</label>
        <link refid="_eagle_plan_8h"/>
        <childnode refid="294" relation="include">
        </childnode>
        <childnode refid="302" relation="include">
        </childnode>
        <childnode refid="313" relation="include">
        </childnode>
        <childnode refid="314" relation="include">
        </childnode>
        <childnode refid="315" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="304" relation="include">
        </childnode>
      </node>
      <node id="291">
        <label>stdio.h</label>
      </node>
      <node id="303">
        <label>EaglePageProvider.h</label>
        <link refid="_eagle_page_provider_8h"/>
        <childnode refid="293" relation="include">
        </childnode>
        <childnode refid="299" relation="include">
        </childnode>
        <childnode refid="300" relation="include">
        </childnode>
        <childnode refid="295" relation="include">
        </childnode>
        <childnode refid="304" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="306" relation="include">
        </childnode>
      </node>
      <node id="301">
        <label>EagleLock.h</label>
        <link refid="_eagle_lock_8h"/>
        <childnode refid="293" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
      </node>
      <node id="311">
        <label>EaglePlanJob.h</label>
        <link refid="_eagle_plan_job_8h"/>
        <childnode refid="312" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
      </node>
      <node id="305">
        <label>EagleLinkedListItem.h</label>
        <link refid="_eagle_linked_list_item_8h"/>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="295" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="319">
        <label>eagle/eagle/EagleInstance.c</label>
        <link refid="EagleInstance.c"/>
        <childnode refid="319" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_eagle_instance_8c_1a04799f2a6588421bb8235faa8144f78f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EagleInstance_addPlan</definition>
        <argsstring>(EagleInstance *eagle, EaglePlan *plan)</argsstring>
        <name>EagleInstance_addPlan</name>
        <param>
          <type><ref refid="struct_eagle_instance" kindref="compound">EagleInstance</ref> *</type>
          <declname>eagle</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_plan" kindref="compound">EaglePlan</ref> *</type>
          <declname>plan</declname>
        </param>
        <briefdescription>
<para>Add an <ref refid="struct_eagle_plan" kindref="compound">EaglePlan</ref> to an <ref refid="struct_eagle_instance" kindref="compound">EagleInstance</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">eagle</parametername>
</parameternamelist>
<parameterdescription>
<para>Instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">plan</parametername>
</parameternamelist>
<parameterdescription>
<para>The plan to execute. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EagleInstance.c" line="33" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EagleInstance.c" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_instance_8c_1a21f9875e7adcb02f2370897749e56181" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EagleInstance_Delete</definition>
        <argsstring>(EagleInstance *eagle)</argsstring>
        <name>EagleInstance_Delete</name>
        <param>
          <type><ref refid="struct_eagle_instance" kindref="compound">EagleInstance</ref> *</type>
          <declname>eagle</declname>
        </param>
        <briefdescription>
<para>Free <ref refid="struct_eagle_instance" kindref="compound">EagleInstance</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">eagle</parametername>
</parameternamelist>
<parameterdescription>
<para>Instance. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EagleInstance.c" line="104" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EagleInstance.c" bodystart="103" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_instance_8c_1af3888839e04de3cc548480228920c3a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_eagle_instance" kindref="compound">EagleInstance</ref> *</type>
        <definition>EagleInstance* EagleInstance_New</definition>
        <argsstring>(int totalWorkers)</argsstring>
        <name>EagleInstance_New</name>
        <param>
          <type>int</type>
          <declname>totalWorkers</declname>
        </param>
        <briefdescription>
<para>Create a new eagle instance. </para>        </briefdescription>
        <detaileddescription>
<para>The instance is effectivly a database, with a certain amount of workers (threads) that will carry out the work. Do not create multiple instances for the same database as there is no way to syncronise them.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">totalWorkers</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of workers to launch, this does not include the main thread that will handle the connections and look after the workers. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EagleInstance.c" line="10" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EagleInstance.c" bodystart="9" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_instance_8c_1a32eec2a01e622ad90ff8b679e7e292be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_eagle_plan_job" kindref="compound">EaglePlanJob</ref> *</type>
        <definition>EaglePlanJob* EagleInstance_nextJob</definition>
        <argsstring>(EagleInstance *eagle, int coreId)</argsstring>
        <name>EagleInstance_nextJob</name>
        <param>
          <type><ref refid="struct_eagle_instance" kindref="compound">EagleInstance</ref> *</type>
          <declname>eagle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>coreId</declname>
        </param>
        <briefdescription>
<para>Get the next finite job from the stack. </para>        </briefdescription>
        <detaileddescription>
<para>This is a syncronised method that all the workers will call independantly when they have nothing to do. If this method returns NULL it is upto the workers to know that there is no more work, they will check periodically after that.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">eagle</parametername>
</parameternamelist>
<parameterdescription>
<para>Instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">coreId</parametername>
</parameternamelist>
<parameterdescription>
<para>CPU core ID. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Initialised <ref refid="struct_eagle_plan_job" kindref="compound">EaglePlanJob</ref>, or NULL if there are no available jobs. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EagleInstance.c" line="63" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EagleInstance.c" bodystart="62" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_instance_8c_1ad03ede95fd768ca7dd084250a9f3e39e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EagleInstance_nextJob_</definition>
        <argsstring>(EaglePlan *plan, EaglePlanJob **job, int coreId)</argsstring>
        <name>EagleInstance_nextJob_</name>
        <param>
          <type><ref refid="struct_eagle_plan" kindref="compound">EaglePlan</ref> *</type>
          <declname>plan</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_plan_job" kindref="compound">EaglePlanJob</ref> **</type>
          <declname>job</declname>
        </param>
        <param>
          <type>int</type>
          <declname>coreId</declname>
        </param>
        <briefdescription>
<para>This is the internal non-synchronised version of <ref refid="_eagle_instance_8c_1a32eec2a01e622ad90ff8b679e7e292be" kindref="member">EagleInstance_nextJob()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Having the core functionality in another function is mainly to help with profiling code. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">plan</parametername>
</parameternamelist>
<parameterdescription>
<para>The plan. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">job</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to the job. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">coreId</parametername>
</parameternamelist>
<parameterdescription>
<para>CPU core ID. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EagleInstance.c" line="38" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EagleInstance.c" bodystart="37" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_instance_8c_1a683dd58ebffac2f2f0fa090bf46a032d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EagleInstance_run</definition>
        <argsstring>(EagleInstance *eagle)</argsstring>
        <name>EagleInstance_run</name>
        <param>
          <type><ref refid="struct_eagle_instance" kindref="compound">EagleInstance</ref> *</type>
          <declname>eagle</declname>
        </param>
        <briefdescription>
<para>Run the instance. </para>        </briefdescription>
        <detaileddescription>
<para>This will start it.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">eagle</parametername>
</parameternamelist>
<parameterdescription>
<para>Instance from <ref refid="_eagle_instance_8c_1af3888839e04de3cc548480228920c3a7" kindref="member">EagleInstance_New()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EagleInstance.c" line="24" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EagleInstance.c" bodystart="23" bodyend="30"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_instance_8h" kindref="compound">EagleInstance.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_utils_8h" kindref="compound">EagleUtils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_memory_8h" kindref="compound">EagleMemory.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_logger_8h" kindref="compound">EagleLogger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="_eagle_instance_8h_1af3888839e04de3cc548480228920c3a7" refkind="member"><highlight class="normal"><ref refid="struct_eagle_instance" kindref="compound" tooltip="An eagle instance (a database).">EagleInstance</ref>*<sp/><ref refid="_eagle_instance_8c_1af3888839e04de3cc548480228920c3a7" kindref="member" tooltip="Create a new eagle instance.">EagleInstance_New</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalWorkers)</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_eagle_instance" kindref="compound" tooltip="An eagle instance (a database).">EagleInstance</ref><sp/>*instance<sp/>=<sp/>(<ref refid="struct_eagle_instance" kindref="compound" tooltip="An eagle instance (a database).">EagleInstance</ref>*)<sp/><ref refid="_eagle_memory_8c_1a21ad14d6772cd800661d5f2a29d18d2b" kindref="member" tooltip="Allocate a single block of memory.">EagleMemory_Allocate</ref>(</highlight><highlight class="stringliteral">&quot;EagleInstance_New.1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_eagle_instance" kindref="compound" tooltip="An eagle instance (a database).">EagleInstance</ref>));</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>instance)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>instance-&gt;<ref refid="struct_eagle_instance_1a502a8778d8c7547ef08ac823d3764d97" kindref="member" tooltip="The workers.">workers</ref><sp/>=<sp/><ref refid="_eagle_workers_8c_1afec90f270653a4e59db8d82b523b74e7" kindref="member" tooltip="Create a new pool of workers.">EagleWorkers_New</ref>(totalWorkers,<sp/>instance);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>instance-&gt;<ref refid="struct_eagle_instance_1a60fa50d7cee12dbf1a9a7f4a094c9266" kindref="member" tooltip="To syncronise the EagleInstance_nextJob() method.">nextJobLock</ref><sp/>=<sp/><ref refid="_eagle_synchronizer_8c_1a98913d5b1b10058b0e839dabdbcaed12" kindref="member" tooltip="Create a new EagleLock.">EagleSynchronizer_CreateLock</ref>();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>instance-&gt;<ref refid="struct_eagle_instance_1a83534f7da738950a4c67225645099239" kindref="member" tooltip="The plan that needs to be executed.">plan</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instance;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="_eagle_instance_8h_1a683dd58ebffac2f2f0fa090bf46a032d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_instance_8c_1a683dd58ebffac2f2f0fa090bf46a032d" kindref="member" tooltip="Run the instance.">EagleInstance_run</ref>(<ref refid="struct_eagle_instance" kindref="compound" tooltip="An eagle instance (a database).">EagleInstance</ref><sp/>*eagle)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>workers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_workers_8c_1a61f9797eee35f27a4a9e308d6d235e94" kindref="member" tooltip="Start the pool of workers.">EagleWorkers_start</ref>(eagle-&gt;<ref refid="struct_eagle_instance_1a502a8778d8c7547ef08ac823d3764d97" kindref="member" tooltip="The workers.">workers</ref>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>close<sp/>workers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_workers_8c_1a47cf93cd3e01b6f6c179f39381fc90b8" kindref="member" tooltip="Wait for all workers to finish.">EagleWorkers_joinAll</ref>(eagle-&gt;<ref refid="struct_eagle_instance_1a502a8778d8c7547ef08ac823d3764d97" kindref="member" tooltip="The workers.">workers</ref>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="_eagle_instance_8h_1a04799f2a6588421bb8235faa8144f78f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_instance_8c_1a04799f2a6588421bb8235faa8144f78f" kindref="member" tooltip="Add an EaglePlan to an EagleInstance.">EagleInstance_addPlan</ref>(<ref refid="struct_eagle_instance" kindref="compound" tooltip="An eagle instance (a database).">EagleInstance</ref><sp/>*eagle,<sp/><ref refid="struct_eagle_plan" kindref="compound" tooltip="An execution plan.">EaglePlan</ref><sp/>*plan)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>eagle-&gt;<ref refid="struct_eagle_instance_1a83534f7da738950a4c67225645099239" kindref="member" tooltip="The plan that needs to be executed.">plan</ref><sp/>=<sp/>plan;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="_eagle_instance_8h_1ad03ede95fd768ca7dd084250a9f3e39e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_instance_8c_1ad03ede95fd768ca7dd084250a9f3e39e" kindref="member" tooltip="This is the internal non-synchronised version of EagleInstance_nextJob().">EagleInstance_nextJob_</ref>(<ref refid="struct_eagle_plan" kindref="compound" tooltip="An execution plan.">EaglePlan</ref><sp/>*plan,<sp/><ref refid="struct_eagle_plan_job" kindref="compound" tooltip="A plan is divided up into single jobs that are run simultaneously.">EaglePlanJob</ref><sp/>**job,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coreId)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_linked_list_8h_1a3a810389ad0cc624dc492e57febee224" kindref="member" tooltip="Iterate through a linked list.">EagleLinkedList_Foreach</ref>((*job)-&gt;plan-&gt;providers,<sp/><ref refid="struct_eagle_plan_buffer_provider" kindref="compound" tooltip="This structure acts as a link between a page providers data and the buffer for an...">EaglePlanBufferProvider</ref>*,<sp/>provider)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_eagle_page_provider_8c_1a2c871cdcad6ce101ef48504808713bc2" kindref="member" tooltip="Return the amount of pages remaining.">EaglePageProvider_pagesRemaining</ref>(provider-&gt;value.provider.provider)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_plan_job_8c_1acb8ec253ecb74dc0603daf5902175473" kindref="member" tooltip="Delete a job.">EaglePlanJob_Delete</ref>(*job);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*job<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(provider-&gt;destinationBuffer<sp/>&gt;=<sp/>plan-&gt;<ref refid="struct_eagle_plan_1a9021062c2280f08138aabe013bfa3746" kindref="member" tooltip="The number of buffers needed for the execution.">buffersNeeded</ref>)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>msg[1024];</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(msg,<sp/></highlight><highlight class="stringliteral">&quot;destination<sp/>%d<sp/>is<sp/>greater<sp/>than<sp/>allowed<sp/>%d<sp/>buffers!\n&quot;</highlight><highlight class="normal">,<sp/>provider-&gt;destinationBuffer,<sp/>plan-&gt;<ref refid="struct_eagle_plan_1a9021062c2280f08138aabe013bfa3746" kindref="member" tooltip="The number of buffers needed for the execution.">buffersNeeded</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_logger_8c_1a2b11ce5acff2e74749d6ad9e181e67e8" kindref="member" tooltip="Log an event.">EagleLogger_Log</ref>(<ref refid="_eagle_logger_severity_8h_1a7316d55576378a753facf17fa36597e2a76a93f9f51daaaaf8a119a878fa74988" kindref="member" tooltip="An error is a problem that has stopped a task from continuing but the state of the...">EagleLoggerSeverityError</ref>,<sp/>msg);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_plan_job_8c_1acb8ec253ecb74dc0603daf5902175473" kindref="member" tooltip="Delete a job.">EaglePlanJob_Delete</ref>(*job);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*job<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_page_8c_1a1335c4aeab6d307f25a8e06f90240d12" kindref="member" tooltip="Free a page.">EaglePage_Delete</ref>((*job)-&gt;buffers[provider-&gt;destinationBuffer]);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*job)-&gt;buffers[provider-&gt;destinationBuffer]<sp/>=<sp/><ref refid="_eagle_page_provider_8c_1a0ceaedea95767ce9e5d3134ca0ac90a8" kindref="member" tooltip="Get the next page from a provider.">EaglePageProvider_nextPage</ref>(provider-&gt;value.provider.provider);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_linked_list_8h_1a44608d5ba3fc434424fa67e3bacbdd39" kindref="member" tooltip="This MUST always follow a EagleLinkedList_ForeachEnd.">EagleLinkedList_ForeachEnd</ref></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="_eagle_instance_8h_1a32eec2a01e622ad90ff8b679e7e292be" refkind="member"><highlight class="normal"><ref refid="struct_eagle_plan_job" kindref="compound" tooltip="A plan is divided up into single jobs that are run simultaneously.">EaglePlanJob</ref>*<sp/><ref refid="_eagle_instance_8c_1a32eec2a01e622ad90ff8b679e7e292be" kindref="member" tooltip="Get the next finite job from the stack.">EagleInstance_nextJob</ref>(<ref refid="struct_eagle_instance" kindref="compound" tooltip="An eagle instance (a database).">EagleInstance</ref><sp/>*eagle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coreId)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_eagle_plan" kindref="compound" tooltip="An execution plan.">EaglePlan</ref><sp/>*plan<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_eagle_plan_job" kindref="compound" tooltip="A plan is divided up into single jobs that are run simultaneously.">EaglePlanJob</ref><sp/>*job<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*EagleBoolean<sp/>sync<sp/>=<sp/>EagleTrue;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>plan<sp/>=<sp/>eagle-&gt;<ref refid="struct_eagle_instance_1a83534f7da738950a4c67225645099239" kindref="member" tooltip="The plan that needs to be executed.">plan</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>job<sp/>=<sp/><ref refid="_eagle_plan_job_8c_1a917a60c7b643ae5891f97f10cdb22705" kindref="member" tooltip="Create a new job from a plan.">EaglePlanJob_New</ref>(plan);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>all<sp/>the<sp/>providers<sp/>can<sp/>be<sp/>accessed<sp/>randomly<sp/>we<sp/>do<sp/>not<sp/>need<sp/>to<sp/>syncronise<sp/>this<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*EagleLinkedList_Foreach(eagle-&gt;plan-&gt;providers,<sp/>EaglePlanBufferProvider*,<sp/>provider)</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch(provider-&gt;type)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>EaglePlanBufferProviderTypeValue:</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>this<sp/>case<sp/>in<sp/>find,<sp/>we<sp/>do<sp/>not<sp/>need<sp/>sychronisation<sp/>for<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*break;</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>EaglePlanBufferProviderTypeProvider:</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(EagleFalse<sp/>==<sp/>EaglePageProvider_isRandomAccess(provider-&gt;value.provider.provider))<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sync<sp/>=<sp/>EagleFalse;</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/><sp/>EagleLinkedList_ForeachEnd*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*if(EagleTrue<sp/>==<sp/>sync)<sp/>{*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>synchronize<sp/>this<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_synchronizer_8h_1a0f54c3edc40e4477acd9f503e51bf299" kindref="member" tooltip="Lock an EagleLock.">EagleSynchronizer_Lock</ref>(eagle-&gt;<ref refid="struct_eagle_instance_1a60fa50d7cee12dbf1a9a7f4a094c9266" kindref="member" tooltip="To syncronise the EagleInstance_nextJob() method.">nextJobLock</ref>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_instance_8c_1ad03ede95fd768ca7dd084250a9f3e39e" kindref="member" tooltip="This is the internal non-synchronised version of EagleInstance_nextJob().">EagleInstance_nextJob_</ref>(eagle-&gt;<ref refid="struct_eagle_instance_1a83534f7da738950a4c67225645099239" kindref="member" tooltip="The plan that needs to be executed.">plan</ref>,<sp/>&amp;job,<sp/>coreId);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*if(EagleTrue<sp/>==<sp/>sync)<sp/>{*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_synchronizer_8c_1a6a41ea4ba599f003f8671993660464d6" kindref="member" tooltip="Unlock an EagleLock.">EagleSynchronizer_Unlock</ref>(eagle-&gt;<ref refid="struct_eagle_instance_1a60fa50d7cee12dbf1a9a7f4a094c9266" kindref="member" tooltip="To syncronise the EagleInstance_nextJob() method.">nextJobLock</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>job;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="_eagle_instance_8h_1a21f9875e7adcb02f2370897749e56181" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_instance_8c_1a21f9875e7adcb02f2370897749e56181" kindref="member" tooltip="Free EagleInstance.">EagleInstance_Delete</ref>(<ref refid="struct_eagle_instance" kindref="compound" tooltip="An eagle instance (a database).">EagleInstance</ref><sp/>*eagle)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>eagle)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_workers_8c_1af409e7dcd3ed135dc4daae5f40ab4a4d" kindref="member" tooltip="Delete a pool of workers.">EagleWorkers_Delete</ref>(eagle-&gt;<ref refid="struct_eagle_instance_1a502a8778d8c7547ef08ac823d3764d97" kindref="member" tooltip="The workers.">workers</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_lock_8c_1a87e2254b1b165636debfd228f13bd4d6" kindref="member" tooltip="Free a lock.">EagleLock_Delete</ref>(eagle-&gt;<ref refid="struct_eagle_instance_1a60fa50d7cee12dbf1a9a7f4a094c9266" kindref="member" tooltip="To syncronise the EagleInstance_nextJob() method.">nextJobLock</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_memory_8c_1aaa3b2daf6c57f2aa57de0ade732caeb5" kindref="member" tooltip="Free a pointer.">EagleMemory_Free</ref>(eagle);</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EagleInstance.c"/>
  </compounddef>
</doxygen>
