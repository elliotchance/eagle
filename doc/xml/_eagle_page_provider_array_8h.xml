<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="_eagle_page_provider_array_8h" kind="file">
    <compoundname>EaglePageProviderArray.h</compoundname>
    <includes refid="_eagle_page_provider_8h" local="yes">EaglePageProvider.h</includes>
    <includedby refid="_eagle_page_provider_array_8c" local="yes">eagle/eagle/EaglePageProviderArray.c</includedby>
    <includedby refid="_eagle_page_provider_single_8c" local="yes">eagle/eagle/EaglePageProviderSingle.c</includedby>
    <incdepgraph>
      <node id="1044">
        <label>EagleLinkedList.h</label>
        <link refid="_eagle_linked_list_8h"/>
        <childnode refid="1041" relation="include">
        </childnode>
        <childnode refid="1037" relation="include">
        </childnode>
        <childnode refid="1040" relation="include">
        </childnode>
        <childnode refid="1045" relation="include">
        </childnode>
      </node>
      <node id="1042">
        <label>mach/mach_time.h</label>
      </node>
      <node id="1041">
        <label>EagleSynchronizer.h</label>
        <link refid="_eagle_synchronizer_8h"/>
        <childnode refid="1042" relation="include">
        </childnode>
        <childnode refid="1043" relation="include">
        </childnode>
        <childnode refid="1037" relation="include">
        </childnode>
      </node>
      <node id="1035">
        <label>pthread.h</label>
      </node>
      <node id="1046">
        <label>EaglePageProviderType.h</label>
        <link refid="_eagle_page_provider_type_8h"/>
      </node>
      <node id="1038">
        <label>EagleData.h</label>
        <link refid="_eagle_data_8h"/>
        <childnode refid="1039" relation="include">
        </childnode>
      </node>
      <node id="1039">
        <label>EagleDataType.h</label>
        <link refid="_eagle_data_type_8h"/>
      </node>
      <node id="1037">
        <label>EagleBoolean.h</label>
        <link refid="_eagle_boolean_8h"/>
      </node>
      <node id="1040">
        <label>Eagle.h</label>
        <link refid="_eagle_8h"/>
      </node>
      <node id="1036">
        <label>EaglePage.h</label>
        <link refid="_eagle_page_8h"/>
        <childnode refid="1037" relation="include">
        </childnode>
        <childnode refid="1038" relation="include">
        </childnode>
        <childnode refid="1040" relation="include">
        </childnode>
        <childnode refid="1039" relation="include">
        </childnode>
      </node>
      <node id="1034">
        <label>EaglePageProvider.h</label>
        <link refid="_eagle_page_provider_8h"/>
        <childnode refid="1035" relation="include">
        </childnode>
        <childnode refid="1036" relation="include">
        </childnode>
        <childnode refid="1041" relation="include">
        </childnode>
        <childnode refid="1037" relation="include">
        </childnode>
        <childnode refid="1044" relation="include">
        </childnode>
        <childnode refid="1040" relation="include">
        </childnode>
        <childnode refid="1039" relation="include">
        </childnode>
        <childnode refid="1046" relation="include">
        </childnode>
      </node>
      <node id="1043">
        <label>EagleLock.h</label>
        <link refid="_eagle_lock_8h"/>
        <childnode refid="1035" relation="include">
        </childnode>
        <childnode refid="1040" relation="include">
        </childnode>
      </node>
      <node id="1045">
        <label>EagleLinkedListItem.h</label>
        <link refid="_eagle_linked_list_item_8h"/>
        <childnode refid="1040" relation="include">
        </childnode>
        <childnode refid="1037" relation="include">
        </childnode>
      </node>
      <node id="1033">
        <label>eagle/eagle/EaglePageProviderArray.h</label>
        <link refid="EaglePageProviderArray.h"/>
        <childnode refid="1034" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1049">
        <label>eagle/eagle/EaglePageProviderSingle.c</label>
        <link refid="_eagle_page_provider_single_8c"/>
      </node>
      <node id="1048">
        <label>eagle/eagle/EaglePageProviderArray.c</label>
        <link refid="_eagle_page_provider_array_8c"/>
      </node>
      <node id="1047">
        <label>eagle/eagle/EaglePageProviderArray.h</label>
        <link refid="EaglePageProviderArray.h"/>
        <childnode refid="1048" relation="include">
        </childnode>
        <childnode refid="1049" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_eagle_page_provider_array" prot="public">EaglePageProviderArray</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_eagle_page_provider_array_8h_1a380666e66452a70fd59a15c7937cf41c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageProviderArray_Delete</definition>
        <argsstring>(EaglePageProviderArray *epp)</argsstring>
        <name>EaglePageProviderArray_Delete</name>
        <param>
          <type><ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref> *</type>
          <declname>epp</declname>
        </param>
        <briefdescription>
<para>Delete a provider. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.h" line="63" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.c" bodystart="38" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_array_8h_1ad848a6337b6b16331b57b5f6778b5751" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
        <definition>EaglePage* EaglePageProviderArray_getPage</definition>
        <argsstring>(EaglePageProviderArray *epp, int pageNumber)</argsstring>
        <name>EaglePageProviderArray_getPage</name>
        <param>
          <type><ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref> *</type>
          <declname>epp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pageNumber</declname>
        </param>
        <briefdescription>
<para>Get a random page from a provider. </para>        </briefdescription>
        <detaileddescription>
<para>You may only use this if <ref refid="_eagle_page_provider_8c_1a8c7f6eaf3a9132a15b2020473a7b69fa" kindref="member">EaglePageProvider_isRandomAccess()</ref> returns EagleTrue. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pageNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of the page where the first page will be 0. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The page, or NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.h" line="90" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.c" bodystart="104" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_array_8h_1a914c23813fc8fb5a148bf5b97baba2d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member">EagleBoolean</ref></type>
        <definition>EagleBoolean EaglePageProviderArray_isRandomAccess</definition>
        <argsstring>(EaglePageProviderArray *epp)</argsstring>
        <name>EaglePageProviderArray_isRandomAccess</name>
        <param>
          <type><ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref> *</type>
          <declname>epp</declname>
        </param>
        <briefdescription>
<para>Check is a providers pages can be access in any order with <ref refid="_eagle_page_provider_8c_1addcb8c0174aa93f30996b7ed0c5183dc" kindref="member">EaglePageProvider_getPage()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.h" line="82" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.c" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_array_8h_1a5472d33ec1a991971fb7ed014311284b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref> *</type>
        <definition>EaglePageProviderArray* EaglePageProviderArray_New</definition>
        <argsstring>(EagleDataType type, void *records, int totalRecords, int recordsPerPage, char *name)</argsstring>
        <name>EaglePageProviderArray_New</name>
        <param>
          <type><ref refid="_eagle_data_type_8h_1ac484ab15f125f81b0437f7aed65fbbb2" kindref="member">EagleDataType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>records</declname>
        </param>
        <param>
          <type>int</type>
          <declname>totalRecords</declname>
        </param>
        <param>
          <type>int</type>
          <declname>recordsPerPage</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Create a new read only page provider from a fixed size array. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>The data type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">records</parametername>
</parameternamelist>
<parameterdescription>
<para>The data records. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">totalRecords</parametername>
</parameternamelist>
<parameterdescription>
<para>The total records. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">recordsPerPage</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount of records to serve out per page. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the provider. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new provider. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.h" line="50" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.c" bodystart="7" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_array_8h_1aee58b0f3f6127873c3f537526c311690" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
        <definition>EaglePage* EaglePageProviderArray_nextPage</definition>
        <argsstring>(EaglePageProviderArray *epp)</argsstring>
        <name>EaglePageProviderArray_nextPage</name>
        <param>
          <type><ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref> *</type>
          <declname>epp</declname>
        </param>
        <briefdescription>
<para>Get the next page from a provider. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The next page, or NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.h" line="70" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.c" bodystart="49" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_array_8h_1ab8318f3b57e8569fbd5d825543efd264" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EaglePageProviderArray_pagesRemaining</definition>
        <argsstring>(EaglePageProviderArray *epp)</argsstring>
        <name>EaglePageProviderArray_pagesRemaining</name>
        <param>
          <type><ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref> *</type>
          <declname>epp</declname>
        </param>
        <briefdescription>
<para>Pages remaining. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of pages remaining when the provider is made from an int array. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.h" line="57" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.c" bodystart="27" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_array_8h_1aaf1f8014accfd28b8362a726122d4ab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageProviderArray_reset</definition>
        <argsstring>(EaglePageProviderArray *epp)</argsstring>
        <name>EaglePageProviderArray_reset</name>
        <param>
          <type><ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref> *</type>
          <declname>epp</declname>
        </param>
        <briefdescription>
<para>Reset the cursor of a provider. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.h" line="76" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.c" bodystart="92" bodyend="97"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>eagle_EaglePageProviderArray_h</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>eagle_EaglePageProviderArray_h</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_page_provider_8h" kindref="compound">EaglePageProvider.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="struct_eagle_page_provider_array" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="11" refid="struct_eagle_page_provider_array_1a823322f3f10b2fd3df8f9a377af077c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_page_provider_8h_1a1742475040e6c681df7d828121b76519" kindref="member" tooltip="All &amp;quot;subtypes&amp;quot; of EaglePageProvider will have this header.">EaglePageProviderHeader</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17" refid="struct_eagle_page_provider_array_1a43afd3c921ea1cf1b530ec6ebfed3ebe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_8h_1a92e6a76bef8c68fa1b940a5c4520f262" kindref="member" tooltip="This struct instance variable is not dynamically allocated so it&amp;#39;s memory does...">EAGLE_ATTR_NA</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offsetRecords;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23" refid="struct_eagle_page_provider_array_1a6d229dced099552a8e8b7708f636e0d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_8h_1a92e6a76bef8c68fa1b940a5c4520f262" kindref="member" tooltip="This struct instance variable is not dynamically allocated so it&amp;#39;s memory does...">EAGLE_ATTR_NA</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalRecords;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32" refid="struct_eagle_page_provider_array_1a13656e5d0e264ac3f822f2661a288b79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_8h_1abbf13e8ccd8267eae6f8134bdedb96b7" kindref="member" tooltip="This struct instance variable may be freed internally or externally.">EAGLE_ATTR_SEMI_MANAGED</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*records;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37" refid="struct_eagle_page_provider_array_1a35af3476dcf04b4a47c3ff89c5177ccc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_8h_1a36dbf56fa988abbaff74a82249eb6ea4" kindref="member" tooltip="This struct instance variable&amp;#39;s memory is fully managed internally.">EAGLE_ATTR_MANAGED</ref><sp/><ref refid="struct_eagle_lock" kindref="compound" tooltip="A lock is used to synchronize code blocks between threads.">EagleLock</ref><sp/>*nextPageLock;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal">}<sp/><ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref>*<sp/><ref refid="_eagle_page_provider_array_8c_1a5472d33ec1a991971fb7ed014311284b" kindref="member" tooltip="Create a new read only page provider from a fixed size array.">EaglePageProviderArray_New</ref>(<ref refid="_eagle_data_type_8h_1ac484ab15f125f81b0437f7aed65fbbb2" kindref="member" tooltip="Data types for pages.">EagleDataType</ref><sp/>type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*records,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalRecords,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recordsPerPage,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_array_8c_1ab8318f3b57e8569fbd5d825543efd264" kindref="member" tooltip="Pages remaining.">EaglePageProviderArray_pagesRemaining</ref>(<ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref><sp/>*epp);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_array_8c_1a380666e66452a70fd59a15c7937cf41c" kindref="member" tooltip="Delete a provider.">EaglePageProviderArray_Delete</ref>(<ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref><sp/>*epp);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref>*<sp/><ref refid="_eagle_page_provider_array_8c_1aee58b0f3f6127873c3f537526c311690" kindref="member" tooltip="Get the next page from a provider.">EaglePageProviderArray_nextPage</ref>(<ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref><sp/>*epp);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_array_8c_1aaf1f8014accfd28b8362a726122d4ab0" kindref="member" tooltip="Reset the cursor of a provider.">EaglePageProviderArray_reset</ref>(<ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref><sp/>*epp);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member" tooltip="Enum for representing boolean values.">EagleBoolean</ref><sp/><ref refid="_eagle_page_provider_array_8c_1a914c23813fc8fb5a148bf5b97baba2d8" kindref="member" tooltip="Check is a providers pages can be access in any order with EaglePageProvider_getPage()...">EaglePageProviderArray_isRandomAccess</ref>(<ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref><sp/>*epp);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref>*<sp/><ref refid="_eagle_page_provider_array_8c_1ad848a6337b6b16331b57b5f6778b5751" kindref="member" tooltip="Get a random page from a provider.">EaglePageProviderArray_getPage</ref>(<ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref><sp/>*epp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pageNumber);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.h"/>
  </compounddef>
</doxygen>
