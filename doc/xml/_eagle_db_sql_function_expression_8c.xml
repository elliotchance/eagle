<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="_eagle_db_sql_function_expression_8c" kind="file">
    <compoundname>EagleDbSqlFunctionExpression.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="_eagle_db_sql_function_expression_8h" local="yes">EagleDbSqlFunctionExpression.h</includes>
    <includes refid="_eagle_memory_8h" local="yes">EagleMemory.h</includes>
    <incdepgraph>
      <node id="2442">
        <label>EagleDbSqlExpression.h</label>
        <link refid="_eagle_db_sql_expression_8h"/>
        <childnode refid="2443" relation="include">
        </childnode>
        <childnode refid="2460" relation="include">
        </childnode>
      </node>
      <node id="2438">
        <label>stdlib.h</label>
      </node>
      <node id="2461">
        <label>EagleDbSqlExpressionType.h</label>
        <link refid="_eagle_db_sql_expression_type_8h"/>
      </node>
      <node id="2455">
        <label>EagleLinkedList.h</label>
        <link refid="_eagle_linked_list_8h"/>
        <childnode refid="2453" relation="include">
        </childnode>
        <childnode refid="2447" relation="include">
        </childnode>
        <childnode refid="2450" relation="include">
        </childnode>
        <childnode refid="2456" relation="include">
        </childnode>
      </node>
      <node id="2458">
        <label>EaglePlanOperation.h</label>
        <link refid="_eagle_plan_operation_8h"/>
        <childnode refid="2445" relation="include">
        </childnode>
        <childnode refid="2451" relation="include">
        </childnode>
        <childnode refid="2447" relation="include">
        </childnode>
        <childnode refid="2450" relation="include">
        </childnode>
        <childnode refid="2459" relation="include">
        </childnode>
      </node>
      <node id="2445">
        <label>EaglePageOperations.h</label>
        <link refid="_eagle_page_operations_8h"/>
        <childnode refid="2446" relation="include">
        </childnode>
        <childnode refid="2451" relation="include">
        </childnode>
      </node>
      <node id="2444">
        <label>mach/mach_time.h</label>
      </node>
      <node id="2462">
        <label>EagleDbSqlValueType.h</label>
        <link refid="_eagle_db_sql_value_type_8h"/>
      </node>
      <node id="2453">
        <label>EagleSynchronizer.h</label>
        <link refid="_eagle_synchronizer_8h"/>
        <childnode refid="2444" relation="include">
        </childnode>
        <childnode refid="2454" relation="include">
        </childnode>
        <childnode refid="2447" relation="include">
        </childnode>
      </node>
      <node id="2452">
        <label>pthread.h</label>
      </node>
      <node id="2440">
        <label>string.h</label>
      </node>
      <node id="2457">
        <label>EaglePageProviderType.h</label>
        <link refid="_eagle_page_provider_type_8h"/>
      </node>
      <node id="2437">
        <label>eagle/eagledb/EagleDbSqlFunctionExpression.c</label>
        <link refid="EagleDbSqlFunctionExpression.c"/>
        <childnode refid="2438" relation="include">
        </childnode>
        <childnode refid="2439" relation="include">
        </childnode>
        <childnode refid="2440" relation="include">
        </childnode>
        <childnode refid="2441" relation="include">
        </childnode>
        <childnode refid="2465" relation="include">
        </childnode>
      </node>
      <node id="2441">
        <label>EagleDbSqlFunctionExpression.h</label>
        <link refid="_eagle_db_sql_function_expression_8h"/>
        <childnode refid="2442" relation="include">
        </childnode>
        <childnode refid="2450" relation="include">
        </childnode>
      </node>
      <node id="2448">
        <label>EagleData.h</label>
        <link refid="_eagle_data_8h"/>
        <childnode refid="2449" relation="include">
        </childnode>
      </node>
      <node id="2463">
        <label>EaglePlanBufferProvider.h</label>
        <link refid="_eagle_plan_buffer_provider_8h"/>
        <childnode refid="2451" relation="include">
        </childnode>
        <childnode refid="2450" relation="include">
        </childnode>
        <childnode refid="2459" relation="include">
        </childnode>
      </node>
      <node id="2449">
        <label>EagleDataType.h</label>
        <link refid="_eagle_data_type_8h"/>
      </node>
      <node id="2447">
        <label>EagleBoolean.h</label>
        <link refid="_eagle_boolean_8h"/>
      </node>
      <node id="2450">
        <label>Eagle.h</label>
        <link refid="_eagle_8h"/>
      </node>
      <node id="2460">
        <label>EagleDbSqlExpressionHeader.h</label>
        <link refid="_eagle_db_sql_expression_header_8h"/>
        <childnode refid="2461" relation="include">
        </childnode>
      </node>
      <node id="2464">
        <label>EaglePlanError.h</label>
        <link refid="_eagle_plan_error_8h"/>
      </node>
      <node id="2465">
        <label>EagleMemory.h</label>
        <link refid="_eagle_memory_8h"/>
      </node>
      <node id="2446">
        <label>EaglePage.h</label>
        <link refid="_eagle_page_8h"/>
        <childnode refid="2447" relation="include">
        </childnode>
        <childnode refid="2448" relation="include">
        </childnode>
        <childnode refid="2450" relation="include">
        </childnode>
        <childnode refid="2449" relation="include">
        </childnode>
      </node>
      <node id="2459">
        <label>EagleDbSqlValue.h</label>
        <link refid="_eagle_db_sql_value_8h"/>
        <childnode refid="2460" relation="include">
        </childnode>
        <childnode refid="2462" relation="include">
        </childnode>
        <childnode refid="2450" relation="include">
        </childnode>
        <childnode refid="2449" relation="include">
        </childnode>
        <childnode refid="2447" relation="include">
        </childnode>
      </node>
      <node id="2443">
        <label>EaglePlan.h</label>
        <link refid="_eagle_plan_8h"/>
        <childnode refid="2444" relation="include">
        </childnode>
        <childnode refid="2445" relation="include">
        </childnode>
        <childnode refid="2458" relation="include">
        </childnode>
        <childnode refid="2463" relation="include">
        </childnode>
        <childnode refid="2464" relation="include">
        </childnode>
        <childnode refid="2450" relation="include">
        </childnode>
        <childnode refid="2449" relation="include">
        </childnode>
        <childnode refid="2455" relation="include">
        </childnode>
      </node>
      <node id="2439">
        <label>stdio.h</label>
      </node>
      <node id="2451">
        <label>EaglePageProvider.h</label>
        <link refid="_eagle_page_provider_8h"/>
        <childnode refid="2452" relation="include">
        </childnode>
        <childnode refid="2446" relation="include">
        </childnode>
        <childnode refid="2453" relation="include">
        </childnode>
        <childnode refid="2447" relation="include">
        </childnode>
        <childnode refid="2455" relation="include">
        </childnode>
        <childnode refid="2450" relation="include">
        </childnode>
        <childnode refid="2449" relation="include">
        </childnode>
        <childnode refid="2457" relation="include">
        </childnode>
      </node>
      <node id="2454">
        <label>EagleLock.h</label>
        <link refid="_eagle_lock_8h"/>
        <childnode refid="2452" relation="include">
        </childnode>
        <childnode refid="2450" relation="include">
        </childnode>
      </node>
      <node id="2456">
        <label>EagleLinkedListItem.h</label>
        <link refid="_eagle_linked_list_item_8h"/>
        <childnode refid="2450" relation="include">
        </childnode>
        <childnode refid="2447" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_eagle_db_sql_function_expression_8c_1a83c77b09974e4bc04eed00f6642cf47f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EagleDbSqlFunctionExpression_Delete</definition>
        <argsstring>(EagleDbSqlFunctionExpression *expr)</argsstring>
        <name>EagleDbSqlFunctionExpression_Delete</name>
        <param>
          <type><ref refid="struct_eagle_db_sql_function_expression" kindref="compound">EagleDbSqlFunctionExpression</ref> *</type>
          <declname>expr</declname>
        </param>
        <briefdescription>
<para>Free a function expression. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>It is safer to use <ref refid="_eagle_db_sql_expression_8c_1a762d1a558814f2576ed01c9a32e84647" kindref="member">EagleDbSqlExpression_Delete()</ref> since it will automatically use the correct Delete function. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">expr</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlFunctionExpression.c" line="22" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlFunctionExpression.c" bodystart="21" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_db_sql_function_expression_8c_1ad46775d9ecdee86e127411663f3e19b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EagleDbSqlFunctionExpression_DeleteRecursive</definition>
        <argsstring>(EagleDbSqlFunctionExpression *expr)</argsstring>
        <name>EagleDbSqlFunctionExpression_DeleteRecursive</name>
        <param>
          <type><ref refid="struct_eagle_db_sql_function_expression" kindref="compound">EagleDbSqlFunctionExpression</ref> *</type>
          <declname>expr</declname>
        </param>
        <briefdescription>
<para>Free a function expression (recursively). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>It is safer to use <ref refid="_eagle_db_sql_expression_8c_1a60ada4a12271bc1d4cbaec239365ef8d" kindref="member">EagleDbSqlExpression_DeleteRecursive()</ref> since it will automatically use the correct Delete function. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">expr</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlFunctionExpression.c" line="32" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlFunctionExpression.c" bodystart="31" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_db_sql_function_expression_8c_1a7d9277c4ae3125d82bce5643f877ee19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_eagle_db_sql_function_expression" kindref="compound">EagleDbSqlFunctionExpression</ref> *</type>
        <definition>EagleDbSqlFunctionExpression* EagleDbSqlFunctionExpression_New</definition>
        <argsstring>(char *name, EagleDbSqlExpression *expr)</argsstring>
        <name>EagleDbSqlFunctionExpression_New</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_db_sql_expression" kindref="compound">EagleDbSqlExpression</ref> *</type>
          <declname>expr</declname>
        </param>
        <briefdescription>
<para>Create a new <ref refid="struct_eagle_db_sql_function_expression" kindref="compound">EagleDbSqlFunctionExpression</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Function name. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">expr</parametername>
</parameternamelist>
<parameterdescription>
<para>Expression. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlFunctionExpression.c" line="8" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlFunctionExpression.c" bodystart="7" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_db_sql_function_expression_8c_1aa762a77d4761c376e7fea17b6b228248" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* EagleDbSqlFunctionExpression_toString</definition>
        <argsstring>(EagleDbSqlFunctionExpression *expr)</argsstring>
        <name>EagleDbSqlFunctionExpression_toString</name>
        <param>
          <type><ref refid="struct_eagle_db_sql_function_expression" kindref="compound">EagleDbSqlFunctionExpression</ref> *</type>
          <declname>expr</declname>
        </param>
        <briefdescription>
<para>Render a function expression into a string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">expr</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new string representation of the expression. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlFunctionExpression.c" line="43" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlFunctionExpression.c" bodystart="42" bodyend="55"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_db_sql_function_expression_8h" kindref="compound">EagleDbSqlFunctionExpression.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_memory_8h" kindref="compound">EagleMemory.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="_eagle_db_sql_function_expression_8h_1a7d9277c4ae3125d82bce5643f877ee19" refkind="member"><highlight class="normal"><ref refid="struct_eagle_db_sql_function_expression" kindref="compound" tooltip="Expression type is EagleDbSqlExpressionTypeFunctionExpression.">EagleDbSqlFunctionExpression</ref>*<sp/><ref refid="_eagle_db_sql_function_expression_8c_1a7d9277c4ae3125d82bce5643f877ee19" kindref="member" tooltip="Create a new EagleDbSqlFunctionExpression.">EagleDbSqlFunctionExpression_New</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/><ref refid="struct_eagle_db_sql_expression" kindref="compound" tooltip="Dummy type for other expression structures.">EagleDbSqlExpression</ref><sp/>*expr)</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_eagle_db_sql_function_expression" kindref="compound" tooltip="Expression type is EagleDbSqlExpressionTypeFunctionExpression.">EagleDbSqlFunctionExpression</ref><sp/>*exp<sp/>=<sp/>(<ref refid="struct_eagle_db_sql_function_expression" kindref="compound" tooltip="Expression type is EagleDbSqlExpressionTypeFunctionExpression.">EagleDbSqlFunctionExpression</ref>*)<sp/><ref refid="_eagle_memory_8c_1a21ad14d6772cd800661d5f2a29d18d2b" kindref="member" tooltip="Allocate a single block of memory.">EagleMemory_Allocate</ref>(</highlight><highlight class="stringliteral">&quot;EagleDbSqlFunctionExpression_New.1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_eagle_db_sql_function_expression" kindref="compound" tooltip="Expression type is EagleDbSqlExpressionTypeFunctionExpression.">EagleDbSqlFunctionExpression</ref>));</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>exp)<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>exp-&gt;expressionType<sp/>=<sp/><ref refid="_eagle_db_sql_expression_type_8h_1a9f9ea3b12922dfc8fc26e2463ce34f7da310fa056bc6f14d824b33508bd9136d8" kindref="member" tooltip="Real type is EagleDbSqlFunctionExpression.">EagleDbSqlExpressionTypeFunctionExpression</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>exp-&gt;<ref refid="struct_eagle_db_sql_function_expression_1a1929121f9116e94f8a2b45cee4787686" kindref="member" tooltip="The first argument.">expr</ref><sp/>=<sp/>expr;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>exp-&gt;<ref refid="struct_eagle_db_sql_function_expression_1a5ac083a645d964373f022d03df4849c8" kindref="member" tooltip="The name of the function.">name</ref><sp/>=<sp/>strdup(name);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exp;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="_eagle_db_sql_function_expression_8h_1a83c77b09974e4bc04eed00f6642cf47f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_db_sql_function_expression_8c_1a83c77b09974e4bc04eed00f6642cf47f" kindref="member" tooltip="Free a function expression.">EagleDbSqlFunctionExpression_Delete</ref>(<ref refid="struct_eagle_db_sql_function_expression" kindref="compound" tooltip="Expression type is EagleDbSqlExpressionTypeFunctionExpression.">EagleDbSqlFunctionExpression</ref><sp/>*expr)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>expr)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_memory_8c_1aaa3b2daf6c57f2aa57de0ade732caeb5" kindref="member" tooltip="Free a pointer.">EagleMemory_Free</ref>(expr-&gt;<ref refid="struct_eagle_db_sql_function_expression_1a5ac083a645d964373f022d03df4849c8" kindref="member" tooltip="The name of the function.">name</ref>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_memory_8c_1aaa3b2daf6c57f2aa57de0ade732caeb5" kindref="member" tooltip="Free a pointer.">EagleMemory_Free</ref>(expr);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="_eagle_db_sql_function_expression_8h_1ad46775d9ecdee86e127411663f3e19b2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_db_sql_function_expression_8c_1ad46775d9ecdee86e127411663f3e19b2" kindref="member" tooltip="Free a function expression (recursively).">EagleDbSqlFunctionExpression_DeleteRecursive</ref>(<ref refid="struct_eagle_db_sql_function_expression" kindref="compound" tooltip="Expression type is EagleDbSqlExpressionTypeFunctionExpression.">EagleDbSqlFunctionExpression</ref><sp/>*expr)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>expr)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_memory_8c_1aaa3b2daf6c57f2aa57de0ade732caeb5" kindref="member" tooltip="Free a pointer.">EagleMemory_Free</ref>(expr-&gt;<ref refid="struct_eagle_db_sql_function_expression_1a5ac083a645d964373f022d03df4849c8" kindref="member" tooltip="The name of the function.">name</ref>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_db_sql_expression_8c_1a60ada4a12271bc1d4cbaec239365ef8d" kindref="member">EagleDbSqlExpression_DeleteRecursive</ref>((<ref refid="struct_eagle_db_sql_expression" kindref="compound" tooltip="Dummy type for other expression structures.">EagleDbSqlExpression</ref>*)<sp/>expr-&gt;<ref refid="struct_eagle_db_sql_function_expression_1a1929121f9116e94f8a2b45cee4787686" kindref="member" tooltip="The first argument.">expr</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_memory_8c_1aaa3b2daf6c57f2aa57de0ade732caeb5" kindref="member" tooltip="Free a pointer.">EagleMemory_Free</ref>(expr);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="_eagle_db_sql_function_expression_8h_1aa762a77d4761c376e7fea17b6b228248" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="_eagle_db_sql_function_expression_8c_1aa762a77d4761c376e7fea17b6b228248" kindref="member" tooltip="Render a function expression into a string.">EagleDbSqlFunctionExpression_toString</ref>(<ref refid="struct_eagle_db_sql_function_expression" kindref="compound" tooltip="Expression type is EagleDbSqlExpressionTypeFunctionExpression.">EagleDbSqlFunctionExpression</ref><sp/>*expr)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/><ref refid="_eagle_memory_8c_1a21ad14d6772cd800661d5f2a29d18d2b" kindref="member" tooltip="Allocate a single block of memory.">EagleMemory_Allocate</ref>(</highlight><highlight class="stringliteral">&quot;EagleDbSqlFunctionExpression_toString.1&quot;</highlight><highlight class="normal">,<sp/>1024),<sp/>*exp;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>exp<sp/>=<sp/><ref refid="_eagle_db_sql_expression_8c_1a7951dc2d4ddeae124336eb9475ecb266" kindref="member" tooltip="Render an expression (of any type) to a string.">EagleDbSqlExpression_toString</ref>(expr-&gt;<ref refid="struct_eagle_db_sql_function_expression_1a1929121f9116e94f8a2b45cee4787686" kindref="member" tooltip="The first argument.">expr</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(s,<sp/></highlight><highlight class="stringliteral">&quot;%s(%s)&quot;</highlight><highlight class="normal">,<sp/>expr-&gt;<ref refid="struct_eagle_db_sql_function_expression_1a5ac083a645d964373f022d03df4849c8" kindref="member" tooltip="The name of the function.">name</ref>,<sp/>exp);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_memory_8c_1aaa3b2daf6c57f2aa57de0ade732caeb5" kindref="member" tooltip="Free a pointer.">EagleMemory_Free</ref>(exp);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/elliot/Xcode/eagle/eagle/eagledb/EagleDbSqlFunctionExpression.c"/>
  </compounddef>
</doxygen>
