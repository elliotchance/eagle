<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="_eagle_page_provider_array_8c" kind="file">
    <compoundname>EaglePageProviderArray.c</compoundname>
    <includes local="no">string.h</includes>
    <includes refid="_eagle_page_provider_array_8h" local="yes">EaglePageProviderArray.h</includes>
    <includes refid="_eagle_utils_8h" local="yes">EagleUtils.h</includes>
    <includes refid="_eagle_memory_8h" local="yes">EagleMemory.h</includes>
    <includes refid="_eagle_worker_8h" local="yes">EagleWorker.h</includes>
    <incdepgraph>
      <node id="1021">
        <label>EagleWorker.h</label>
        <link refid="_eagle_worker_8h"/>
        <childnode refid="1007" relation="include">
        </childnode>
        <childnode refid="1012" relation="include">
        </childnode>
        <childnode refid="1022" relation="include">
        </childnode>
      </node>
      <node id="1028">
        <label>EagleDbSqlExpressionType.h</label>
        <link refid="_eagle_db_sql_expression_type_8h"/>
      </node>
      <node id="1019">
        <label>EagleUtils.h</label>
        <link refid="_eagle_utils_8h"/>
        <childnode refid="1014" relation="include">
        </childnode>
        <childnode refid="1009" relation="include">
        </childnode>
      </node>
      <node id="1016">
        <label>EagleLinkedList.h</label>
        <link refid="_eagle_linked_list_8h"/>
        <childnode refid="1013" relation="include">
        </childnode>
        <childnode refid="1009" relation="include">
        </childnode>
        <childnode refid="1012" relation="include">
        </childnode>
        <childnode refid="1017" relation="include">
        </childnode>
      </node>
      <node id="1025">
        <label>EaglePlanOperation.h</label>
        <link refid="_eagle_plan_operation_8h"/>
        <childnode refid="1024" relation="include">
        </childnode>
        <childnode refid="1006" relation="include">
        </childnode>
        <childnode refid="1009" relation="include">
        </childnode>
        <childnode refid="1012" relation="include">
        </childnode>
        <childnode refid="1026" relation="include">
        </childnode>
      </node>
      <node id="1024">
        <label>EaglePageOperations.h</label>
        <link refid="_eagle_page_operations_8h"/>
        <childnode refid="1008" relation="include">
        </childnode>
        <childnode refid="1006" relation="include">
        </childnode>
      </node>
      <node id="1014">
        <label>mach/mach_time.h</label>
      </node>
      <node id="1029">
        <label>EagleDbSqlValueType.h</label>
        <link refid="_eagle_db_sql_value_type_8h"/>
      </node>
      <node id="1013">
        <label>EagleSynchronizer.h</label>
        <link refid="_eagle_synchronizer_8h"/>
        <childnode refid="1014" relation="include">
        </childnode>
        <childnode refid="1015" relation="include">
        </childnode>
        <childnode refid="1009" relation="include">
        </childnode>
      </node>
      <node id="1007">
        <label>pthread.h</label>
      </node>
      <node id="1004">
        <label>string.h</label>
      </node>
      <node id="1018">
        <label>EaglePageProviderType.h</label>
        <link refid="_eagle_page_provider_type_8h"/>
      </node>
      <node id="1010">
        <label>EagleData.h</label>
        <link refid="_eagle_data_8h"/>
        <childnode refid="1011" relation="include">
        </childnode>
      </node>
      <node id="1030">
        <label>EaglePlanBufferProvider.h</label>
        <link refid="_eagle_plan_buffer_provider_8h"/>
        <childnode refid="1006" relation="include">
        </childnode>
        <childnode refid="1012" relation="include">
        </childnode>
        <childnode refid="1026" relation="include">
        </childnode>
      </node>
      <node id="1011">
        <label>EagleDataType.h</label>
        <link refid="_eagle_data_type_8h"/>
      </node>
      <node id="1009">
        <label>EagleBoolean.h</label>
        <link refid="_eagle_boolean_8h"/>
      </node>
      <node id="1012">
        <label>Eagle.h</label>
        <link refid="_eagle_8h"/>
      </node>
      <node id="1027">
        <label>EagleDbSqlExpressionHeader.h</label>
        <link refid="_eagle_db_sql_expression_header_8h"/>
        <childnode refid="1028" relation="include">
        </childnode>
      </node>
      <node id="1031">
        <label>EaglePlanError.h</label>
        <link refid="_eagle_plan_error_8h"/>
      </node>
      <node id="1020">
        <label>EagleMemory.h</label>
        <link refid="_eagle_memory_8h"/>
      </node>
      <node id="1008">
        <label>EaglePage.h</label>
        <link refid="_eagle_page_8h"/>
        <childnode refid="1009" relation="include">
        </childnode>
        <childnode refid="1010" relation="include">
        </childnode>
        <childnode refid="1012" relation="include">
        </childnode>
        <childnode refid="1011" relation="include">
        </childnode>
      </node>
      <node id="1026">
        <label>EagleDbSqlValue.h</label>
        <link refid="_eagle_db_sql_value_8h"/>
        <childnode refid="1027" relation="include">
        </childnode>
        <childnode refid="1029" relation="include">
        </childnode>
        <childnode refid="1012" relation="include">
        </childnode>
        <childnode refid="1011" relation="include">
        </childnode>
        <childnode refid="1009" relation="include">
        </childnode>
      </node>
      <node id="1023">
        <label>EaglePlan.h</label>
        <link refid="_eagle_plan_8h"/>
        <childnode refid="1014" relation="include">
        </childnode>
        <childnode refid="1024" relation="include">
        </childnode>
        <childnode refid="1025" relation="include">
        </childnode>
        <childnode refid="1030" relation="include">
        </childnode>
        <childnode refid="1031" relation="include">
        </childnode>
        <childnode refid="1012" relation="include">
        </childnode>
        <childnode refid="1011" relation="include">
        </childnode>
        <childnode refid="1016" relation="include">
        </childnode>
      </node>
      <node id="1006">
        <label>EaglePageProvider.h</label>
        <link refid="_eagle_page_provider_8h"/>
        <childnode refid="1007" relation="include">
        </childnode>
        <childnode refid="1008" relation="include">
        </childnode>
        <childnode refid="1013" relation="include">
        </childnode>
        <childnode refid="1009" relation="include">
        </childnode>
        <childnode refid="1016" relation="include">
        </childnode>
        <childnode refid="1012" relation="include">
        </childnode>
        <childnode refid="1011" relation="include">
        </childnode>
        <childnode refid="1018" relation="include">
        </childnode>
      </node>
      <node id="1015">
        <label>EagleLock.h</label>
        <link refid="_eagle_lock_8h"/>
        <childnode refid="1007" relation="include">
        </childnode>
        <childnode refid="1012" relation="include">
        </childnode>
      </node>
      <node id="1022">
        <label>EaglePlanJob.h</label>
        <link refid="_eagle_plan_job_8h"/>
        <childnode refid="1023" relation="include">
        </childnode>
        <childnode refid="1012" relation="include">
        </childnode>
      </node>
      <node id="1017">
        <label>EagleLinkedListItem.h</label>
        <link refid="_eagle_linked_list_item_8h"/>
        <childnode refid="1012" relation="include">
        </childnode>
        <childnode refid="1009" relation="include">
        </childnode>
      </node>
      <node id="1003">
        <label>eagle/eagle/EaglePageProviderArray.c</label>
        <link refid="EaglePageProviderArray.c"/>
        <childnode refid="1004" relation="include">
        </childnode>
        <childnode refid="1005" relation="include">
        </childnode>
        <childnode refid="1019" relation="include">
        </childnode>
        <childnode refid="1020" relation="include">
        </childnode>
        <childnode refid="1021" relation="include">
        </childnode>
      </node>
      <node id="1005">
        <label>EaglePageProviderArray.h</label>
        <link refid="_eagle_page_provider_array_8h"/>
        <childnode refid="1006" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_eagle_page_provider_array_8c_1a380666e66452a70fd59a15c7937cf41c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageProviderArray_Delete</definition>
        <argsstring>(EaglePageProviderArray *epp)</argsstring>
        <name>EaglePageProviderArray_Delete</name>
        <param>
          <type><ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref> *</type>
          <declname>epp</declname>
        </param>
        <briefdescription>
<para>Delete a provider. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.c" line="39" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.c" bodystart="38" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_array_8c_1ad848a6337b6b16331b57b5f6778b5751" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
        <definition>EaglePage* EaglePageProviderArray_getPage</definition>
        <argsstring>(EaglePageProviderArray *epp, int pageNumber)</argsstring>
        <name>EaglePageProviderArray_getPage</name>
        <param>
          <type><ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref> *</type>
          <declname>epp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pageNumber</declname>
        </param>
        <briefdescription>
<para>Get a random page from a provider. </para>        </briefdescription>
        <detaileddescription>
<para>You may only use this if <ref refid="_eagle_page_provider_8c_1a8c7f6eaf3a9132a15b2020473a7b69fa" kindref="member">EaglePageProvider_isRandomAccess()</ref> returns EagleTrue. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pageNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of the page where the first page will be 0. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The page, or NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.c" line="105" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.c" bodystart="104" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_array_8c_1a914c23813fc8fb5a148bf5b97baba2d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member">EagleBoolean</ref></type>
        <definition>EagleBoolean EaglePageProviderArray_isRandomAccess</definition>
        <argsstring>(EaglePageProviderArray *epp)</argsstring>
        <name>EaglePageProviderArray_isRandomAccess</name>
        <param>
          <type><ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref> *</type>
          <declname>epp</declname>
        </param>
        <briefdescription>
<para>Check is a providers pages can be access in any order with <ref refid="_eagle_page_provider_8c_1addcb8c0174aa93f30996b7ed0c5183dc" kindref="member">EaglePageProvider_getPage()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.c" line="100" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.c" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_array_8c_1a5472d33ec1a991971fb7ed014311284b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref> *</type>
        <definition>EaglePageProviderArray* EaglePageProviderArray_New</definition>
        <argsstring>(EagleDataType type, void *records, int totalRecords, int recordsPerPage, char *name)</argsstring>
        <name>EaglePageProviderArray_New</name>
        <param>
          <type><ref refid="_eagle_data_type_8h_1ac484ab15f125f81b0437f7aed65fbbb2" kindref="member">EagleDataType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>records</declname>
        </param>
        <param>
          <type>int</type>
          <declname>totalRecords</declname>
        </param>
        <param>
          <type>int</type>
          <declname>recordsPerPage</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Create a new read only page provider from a fixed size array. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>The data type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">records</parametername>
</parameternamelist>
<parameterdescription>
<para>The data records. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">totalRecords</parametername>
</parameternamelist>
<parameterdescription>
<para>The total records. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">recordsPerPage</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount of records to serve out per page. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the provider. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new provider. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.c" line="8" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.c" bodystart="7" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_array_8c_1aee58b0f3f6127873c3f537526c311690" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
        <definition>EaglePage* EaglePageProviderArray_nextPage</definition>
        <argsstring>(EaglePageProviderArray *epp)</argsstring>
        <name>EaglePageProviderArray_nextPage</name>
        <param>
          <type><ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref> *</type>
          <declname>epp</declname>
        </param>
        <briefdescription>
<para>Get the next page from a provider. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The next page, or NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.c" line="50" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.c" bodystart="49" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_array_8c_1ab8318f3b57e8569fbd5d825543efd264" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EaglePageProviderArray_pagesRemaining</definition>
        <argsstring>(EaglePageProviderArray *epp)</argsstring>
        <name>EaglePageProviderArray_pagesRemaining</name>
        <param>
          <type><ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref> *</type>
          <declname>epp</declname>
        </param>
        <briefdescription>
<para>Pages remaining. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of pages remaining when the provider is made from an int array. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.c" line="28" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.c" bodystart="27" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_provider_array_8c_1aaf1f8014accfd28b8362a726122d4ab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageProviderArray_reset</definition>
        <argsstring>(EaglePageProviderArray *epp)</argsstring>
        <name>EaglePageProviderArray_reset</name>
        <param>
          <type><ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref> *</type>
          <declname>epp</declname>
        </param>
        <briefdescription>
<para>Reset the cursor of a provider. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">epp</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.c" line="93" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.c" bodystart="92" bodyend="97"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_page_provider_array_8h" kindref="compound">EaglePageProviderArray.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_utils_8h" kindref="compound">EagleUtils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_memory_8h" kindref="compound">EagleMemory.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_worker_8h" kindref="compound">EagleWorker.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="_eagle_page_provider_array_8h_1a5472d33ec1a991971fb7ed014311284b" refkind="member"><highlight class="normal"><ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref>*<sp/><ref refid="_eagle_page_provider_array_8c_1a5472d33ec1a991971fb7ed014311284b" kindref="member" tooltip="Create a new read only page provider from a fixed size array.">EaglePageProviderArray_New</ref>(<ref refid="_eagle_data_type_8h_1ac484ab15f125f81b0437f7aed65fbbb2" kindref="member" tooltip="Data types for pages.">EagleDataType</ref><sp/>type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*records,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalRecords,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recordsPerPage,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref><sp/>*pageProvider<sp/>=<sp/>(<ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref>*)<sp/><ref refid="_eagle_memory_8c_1a21ad14d6772cd800661d5f2a29d18d2b" kindref="member" tooltip="Allocate a single block of memory.">EagleMemory_Allocate</ref>(</highlight><highlight class="stringliteral">&quot;EaglePageProviderArray_New.1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref>));</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>pageProvider)<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>pageProvider-&gt;providerType<sp/>=<sp/><ref refid="_eagle_page_provider_type_8h_1a87939b197bf22df261df8c4aec3de182acfec4372c15b902568eadfffcb597d6b" kindref="member" tooltip="A page provider that wraps an array of a fixed size.">EaglePageProviderTypeArray</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>pageProvider-&gt;type<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>pageProvider-&gt;name<sp/>=<sp/>(NULL<sp/>==<sp/>name<sp/>?<sp/>NULL<sp/>:<sp/>strdup(name));</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>pageProvider-&gt;recordsPerPage<sp/>=<sp/>recordsPerPage;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>pageProvider-&gt;<ref refid="struct_eagle_page_provider_array_1a43afd3c921ea1cf1b530ec6ebfed3ebe" kindref="member" tooltip="The cursor position.">offsetRecords</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>pageProvider-&gt;<ref refid="struct_eagle_page_provider_array_1a6d229dced099552a8e8b7708f636e0d9" kindref="member" tooltip="The total amount of records.">totalRecords</ref><sp/>=<sp/>totalRecords;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>pageProvider-&gt;<ref refid="struct_eagle_page_provider_array_1a13656e5d0e264ac3f822f2661a288b79" kindref="member" tooltip="A pointer to the actual data that will be fed into pages.">records</ref><sp/>=<sp/>records;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>pageProvider-&gt;<ref refid="struct_eagle_page_provider_array_1a35af3476dcf04b4a47c3ff89c5177ccc" kindref="member" tooltip="Synchronize EaglePageProvider_nextPage() and EaglePageProvider_pagesRemaining().">nextPageLock</ref><sp/>=<sp/><ref refid="_eagle_synchronizer_8c_1a98913d5b1b10058b0e839dabdbcaed12" kindref="member" tooltip="Create a new EagleLock.">EagleSynchronizer_CreateLock</ref>();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pageProvider;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="_eagle_page_provider_array_8h_1ab8318f3b57e8569fbd5d825543efd264" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_array_8c_1ab8318f3b57e8569fbd5d825543efd264" kindref="member" tooltip="Pages remaining.">EaglePageProviderArray_pagesRemaining</ref>(<ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref><sp/>*epp)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_synchronizer_8h_1a0f54c3edc40e4477acd9f503e51bf299" kindref="member" tooltip="Lock an EagleLock.">EagleSynchronizer_Lock</ref>(epp-&gt;<ref refid="struct_eagle_page_provider_array_1a35af3476dcf04b4a47c3ff89c5177ccc" kindref="member" tooltip="Synchronize EaglePageProvider_nextPage() and EaglePageProvider_pagesRemaining().">nextPageLock</ref>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="_eagle_page_provider_8c_1a4807f7e4df6b3ff566caa253a073a702" kindref="member" tooltip="Calculate the amount of pages required to serve a given amount of records.">EaglePageProvider_TotalPages</ref>(epp-&gt;<ref refid="struct_eagle_page_provider_array_1a6d229dced099552a8e8b7708f636e0d9" kindref="member" tooltip="The total amount of records.">totalRecords</ref><sp/>-<sp/>epp-&gt;<ref refid="struct_eagle_page_provider_array_1a43afd3c921ea1cf1b530ec6ebfed3ebe" kindref="member" tooltip="The cursor position.">offsetRecords</ref>,<sp/>epp-&gt;recordsPerPage);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_synchronizer_8c_1a6a41ea4ba599f003f8671993660464d6" kindref="member" tooltip="Unlock an EagleLock.">EagleSynchronizer_Unlock</ref>(epp-&gt;<ref refid="struct_eagle_page_provider_array_1a35af3476dcf04b4a47c3ff89c5177ccc" kindref="member" tooltip="Synchronize EaglePageProvider_nextPage() and EaglePageProvider_pagesRemaining().">nextPageLock</ref>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="_eagle_page_provider_array_8h_1a380666e66452a70fd59a15c7937cf41c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_array_8c_1a380666e66452a70fd59a15c7937cf41c" kindref="member" tooltip="Delete a provider.">EaglePageProviderArray_Delete</ref>(<ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref><sp/>*epp)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>epp)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_lock_8c_1a87e2254b1b165636debfd228f13bd4d6" kindref="member" tooltip="Free a lock.">EagleLock_Delete</ref>(epp-&gt;<ref refid="struct_eagle_page_provider_array_1a35af3476dcf04b4a47c3ff89c5177ccc" kindref="member" tooltip="Synchronize EaglePageProvider_nextPage() and EaglePageProvider_pagesRemaining().">nextPageLock</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_memory_8c_1aaa3b2daf6c57f2aa57de0ade732caeb5" kindref="member" tooltip="Free a pointer.">EagleMemory_Free</ref>(epp-&gt;name);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_memory_8c_1aaa3b2daf6c57f2aa57de0ade732caeb5" kindref="member" tooltip="Free a pointer.">EagleMemory_Free</ref>(epp);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="_eagle_page_provider_array_8h_1aee58b0f3f6127873c3f537526c311690" refkind="member"><highlight class="normal"><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref>*<sp/><ref refid="_eagle_page_provider_array_8c_1aee58b0f3f6127873c3f537526c311690" kindref="member" tooltip="Get the next page from a provider.">EaglePageProviderArray_nextPage</ref>(<ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref><sp/>*epp)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pageSize<sp/>=<sp/><ref refid="_eagle_utils_8h_1ad2f3678bf5eae3684fc497130b946eae" kindref="member" tooltip="Minimum value.">MIN</ref>(epp-&gt;recordsPerPage,<sp/>epp-&gt;<ref refid="struct_eagle_page_provider_array_1a6d229dced099552a8e8b7708f636e0d9" kindref="member" tooltip="The total amount of records.">totalRecords</ref><sp/>-<sp/>epp-&gt;<ref refid="struct_eagle_page_provider_array_1a43afd3c921ea1cf1b530ec6ebfed3ebe" kindref="member" tooltip="The cursor position.">offsetRecords</ref>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*page<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(epp-&gt;<ref refid="struct_eagle_page_provider_array_1a43afd3c921ea1cf1b530ec6ebfed3ebe" kindref="member" tooltip="The cursor position.">offsetRecords</ref><sp/>&gt;=<sp/>epp-&gt;<ref refid="struct_eagle_page_provider_array_1a6d229dced099552a8e8b7708f636e0d9" kindref="member" tooltip="The total amount of records.">totalRecords</ref>)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_synchronizer_8h_1a0f54c3edc40e4477acd9f503e51bf299" kindref="member" tooltip="Lock an EagleLock.">EagleSynchronizer_Lock</ref>(epp-&gt;<ref refid="struct_eagle_page_provider_array_1a35af3476dcf04b4a47c3ff89c5177ccc" kindref="member" tooltip="Synchronize EaglePageProvider_nextPage() and EaglePageProvider_pagesRemaining().">nextPageLock</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(epp-&gt;type)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_data_type_8h_1ac484ab15f125f81b0437f7aed65fbbb2a036473b82a3370995203efc068bfd977" kindref="member" tooltip="INT or INTEGER: 32bit integer.">EagleDataTypeInteger</ref>:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*begin<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>epp-&gt;<ref refid="struct_eagle_page_provider_array_1a13656e5d0e264ac3f822f2661a288b79" kindref="member" tooltip="A pointer to the actual data that will be fed into pages.">records</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>page<sp/>=<sp/><ref refid="_eagle_page_8c_1a46dfbf616a96645c9617bbc12312f94a" kindref="member" tooltip="Create a new EaglePage.">EaglePage_New</ref>(epp-&gt;type,<sp/>begin<sp/>+<sp/>epp-&gt;<ref refid="struct_eagle_page_provider_array_1a43afd3c921ea1cf1b530ec6ebfed3ebe" kindref="member" tooltip="The cursor position.">offsetRecords</ref>,<sp/>pageSize,<sp/>pageSize,<sp/>epp-&gt;<ref refid="struct_eagle_page_provider_array_1a43afd3c921ea1cf1b530ec6ebfed3ebe" kindref="member" tooltip="The cursor position.">offsetRecords</ref>,<sp/><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7aa5c22bab5fe5699bcf03606cb6905d72c" kindref="member" tooltip="FALSE.">EagleFalse</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_data_type_8h_1ac484ab15f125f81b0437f7aed65fbbb2ae23dff1ffd05859c8d1d0b291a6d4693" kindref="member" tooltip="FLOAT: 64bit floating point.">EagleDataTypeFloat</ref>:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>*begin<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>epp-&gt;<ref refid="struct_eagle_page_provider_array_1a13656e5d0e264ac3f822f2661a288b79" kindref="member" tooltip="A pointer to the actual data that will be fed into pages.">records</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>page<sp/>=<sp/><ref refid="_eagle_page_8c_1a46dfbf616a96645c9617bbc12312f94a" kindref="member" tooltip="Create a new EaglePage.">EaglePage_New</ref>(epp-&gt;type,<sp/>begin<sp/>+<sp/>epp-&gt;<ref refid="struct_eagle_page_provider_array_1a43afd3c921ea1cf1b530ec6ebfed3ebe" kindref="member" tooltip="The cursor position.">offsetRecords</ref>,<sp/>pageSize,<sp/>pageSize,<sp/>epp-&gt;<ref refid="struct_eagle_page_provider_array_1a43afd3c921ea1cf1b530ec6ebfed3ebe" kindref="member" tooltip="The cursor position.">offsetRecords</ref>,<sp/><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7aa5c22bab5fe5699bcf03606cb6905d72c" kindref="member" tooltip="FALSE.">EagleFalse</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_data_type_8h_1ac484ab15f125f81b0437f7aed65fbbb2a23c99b1b8cd114dcb4b0c2671767ac86" kindref="member" tooltip="VARCHAR: A NULL terminated string.">EagleDataTypeVarchar</ref>:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1adca1890444ae43d449a6df07beb9c313" kindref="member" tooltip="The global data type for handling EagleDataTypeVarchar.">EagleDataTypeVarcharType</ref><sp/>*begin<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1adca1890444ae43d449a6df07beb9c313" kindref="member" tooltip="The global data type for handling EagleDataTypeVarchar.">EagleDataTypeVarcharType</ref>*)<sp/>epp-&gt;<ref refid="struct_eagle_page_provider_array_1a13656e5d0e264ac3f822f2661a288b79" kindref="member" tooltip="A pointer to the actual data that will be fed into pages.">records</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>page<sp/>=<sp/><ref refid="_eagle_page_8c_1a46dfbf616a96645c9617bbc12312f94a" kindref="member" tooltip="Create a new EaglePage.">EaglePage_New</ref>(epp-&gt;type,<sp/>begin<sp/>+<sp/>epp-&gt;<ref refid="struct_eagle_page_provider_array_1a43afd3c921ea1cf1b530ec6ebfed3ebe" kindref="member" tooltip="The cursor position.">offsetRecords</ref>,<sp/>pageSize,<sp/>pageSize,<sp/>epp-&gt;<ref refid="struct_eagle_page_provider_array_1a43afd3c921ea1cf1b530ec6ebfed3ebe" kindref="member" tooltip="The cursor position.">offsetRecords</ref>,<sp/><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7aa5c22bab5fe5699bcf03606cb6905d72c" kindref="member" tooltip="FALSE.">EagleFalse</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_data_type_8h_1ac484ab15f125f81b0437f7aed65fbbb2a898857f5829f028ef6f1b94c0ba1b2d5" kindref="member" tooltip="Unknown/invalid data type.">EagleDataTypeUnknown</ref>:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>epp-&gt;<ref refid="struct_eagle_page_provider_array_1a43afd3c921ea1cf1b530ec6ebfed3ebe" kindref="member" tooltip="The cursor position.">offsetRecords</ref><sp/>+=<sp/>pageSize;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_synchronizer_8c_1a6a41ea4ba599f003f8671993660464d6" kindref="member" tooltip="Unlock an EagleLock.">EagleSynchronizer_Unlock</ref>(epp-&gt;<ref refid="struct_eagle_page_provider_array_1a35af3476dcf04b4a47c3ff89c5177ccc" kindref="member" tooltip="Synchronize EaglePageProvider_nextPage() and EaglePageProvider_pagesRemaining().">nextPageLock</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>page;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="_eagle_page_provider_array_8h_1aaf1f8014accfd28b8362a726122d4ab0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_provider_array_8c_1aaf1f8014accfd28b8362a726122d4ab0" kindref="member" tooltip="Reset the cursor of a provider.">EaglePageProviderArray_reset</ref>(<ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref><sp/>*epp)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_synchronizer_8h_1a0f54c3edc40e4477acd9f503e51bf299" kindref="member" tooltip="Lock an EagleLock.">EagleSynchronizer_Lock</ref>(epp-&gt;<ref refid="struct_eagle_page_provider_array_1a35af3476dcf04b4a47c3ff89c5177ccc" kindref="member" tooltip="Synchronize EaglePageProvider_nextPage() and EaglePageProvider_pagesRemaining().">nextPageLock</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>epp-&gt;<ref refid="struct_eagle_page_provider_array_1a43afd3c921ea1cf1b530ec6ebfed3ebe" kindref="member" tooltip="The cursor position.">offsetRecords</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_synchronizer_8c_1a6a41ea4ba599f003f8671993660464d6" kindref="member" tooltip="Unlock an EagleLock.">EagleSynchronizer_Unlock</ref>(epp-&gt;<ref refid="struct_eagle_page_provider_array_1a35af3476dcf04b4a47c3ff89c5177ccc" kindref="member" tooltip="Synchronize EaglePageProvider_nextPage() and EaglePageProvider_pagesRemaining().">nextPageLock</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="_eagle_page_provider_array_8h_1a914c23813fc8fb5a148bf5b97baba2d8" refkind="member"><highlight class="normal"><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member" tooltip="Enum for representing boolean values.">EagleBoolean</ref><sp/><ref refid="_eagle_page_provider_array_8c_1a914c23813fc8fb5a148bf5b97baba2d8" kindref="member" tooltip="Check is a providers pages can be access in any order with EaglePageProvider_getPage()...">EaglePageProviderArray_isRandomAccess</ref>(<ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref><sp/>*epp)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7aa4ac7e7bebceb629a7a2eff6e695504f2" kindref="member" tooltip="TRUE.">EagleTrue</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="_eagle_page_provider_array_8h_1ad848a6337b6b16331b57b5f6778b5751" refkind="member"><highlight class="normal"><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref>*<sp/><ref refid="_eagle_page_provider_array_8c_1ad848a6337b6b16331b57b5f6778b5751" kindref="member" tooltip="Get a random page from a provider.">EaglePageProviderArray_getPage</ref>(<ref refid="struct_eagle_page_provider_array" kindref="compound">EaglePageProviderArray</ref><sp/>*epp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pageNumber)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*page<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offsetRecords<sp/>=<sp/>pageNumber<sp/>*<sp/>epp-&gt;recordsPerPage;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>out<sp/>of<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pageNumber<sp/>&lt;<sp/>0<sp/>||<sp/>pageNumber<sp/>&gt;=<sp/><ref refid="_eagle_page_provider_8c_1a4807f7e4df6b3ff566caa253a073a702" kindref="member" tooltip="Calculate the amount of pages required to serve a given amount of records.">EaglePageProvider_TotalPages</ref>(epp-&gt;<ref refid="struct_eagle_page_provider_array_1a6d229dced099552a8e8b7708f636e0d9" kindref="member" tooltip="The total amount of records.">totalRecords</ref>,<sp/>epp-&gt;recordsPerPage))<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(epp-&gt;type)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_data_type_8h_1ac484ab15f125f81b0437f7aed65fbbb2a036473b82a3370995203efc068bfd977" kindref="member" tooltip="INT or INTEGER: 32bit integer.">EagleDataTypeInteger</ref>:</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*begin<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>epp-&gt;<ref refid="struct_eagle_page_provider_array_1a13656e5d0e264ac3f822f2661a288b79" kindref="member" tooltip="A pointer to the actual data that will be fed into pages.">records</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>page<sp/>=<sp/><ref refid="_eagle_page_8c_1a46dfbf616a96645c9617bbc12312f94a" kindref="member" tooltip="Create a new EaglePage.">EaglePage_New</ref>(epp-&gt;type,<sp/>begin<sp/>+<sp/>offsetRecords,<sp/>epp-&gt;recordsPerPage,<sp/>epp-&gt;recordsPerPage,<sp/>offsetRecords,<sp/><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7aa5c22bab5fe5699bcf03606cb6905d72c" kindref="member" tooltip="FALSE.">EagleFalse</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_data_type_8h_1ac484ab15f125f81b0437f7aed65fbbb2ae23dff1ffd05859c8d1d0b291a6d4693" kindref="member" tooltip="FLOAT: 64bit floating point.">EagleDataTypeFloat</ref>:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>*begin<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>epp-&gt;<ref refid="struct_eagle_page_provider_array_1a13656e5d0e264ac3f822f2661a288b79" kindref="member" tooltip="A pointer to the actual data that will be fed into pages.">records</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>page<sp/>=<sp/><ref refid="_eagle_page_8c_1a46dfbf616a96645c9617bbc12312f94a" kindref="member" tooltip="Create a new EaglePage.">EaglePage_New</ref>(epp-&gt;type,<sp/>begin<sp/>+<sp/>offsetRecords,<sp/>epp-&gt;recordsPerPage,<sp/>epp-&gt;recordsPerPage,<sp/>offsetRecords,<sp/><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7aa5c22bab5fe5699bcf03606cb6905d72c" kindref="member" tooltip="FALSE.">EagleFalse</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_data_type_8h_1ac484ab15f125f81b0437f7aed65fbbb2a23c99b1b8cd114dcb4b0c2671767ac86" kindref="member" tooltip="VARCHAR: A NULL terminated string.">EagleDataTypeVarchar</ref>:</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1adca1890444ae43d449a6df07beb9c313" kindref="member" tooltip="The global data type for handling EagleDataTypeVarchar.">EagleDataTypeVarcharType</ref><sp/>*begin<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1adca1890444ae43d449a6df07beb9c313" kindref="member" tooltip="The global data type for handling EagleDataTypeVarchar.">EagleDataTypeVarcharType</ref>*)<sp/>epp-&gt;<ref refid="struct_eagle_page_provider_array_1a13656e5d0e264ac3f822f2661a288b79" kindref="member" tooltip="A pointer to the actual data that will be fed into pages.">records</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>page<sp/>=<sp/><ref refid="_eagle_page_8c_1a46dfbf616a96645c9617bbc12312f94a" kindref="member" tooltip="Create a new EaglePage.">EaglePage_New</ref>(epp-&gt;type,<sp/>begin<sp/>+<sp/>offsetRecords,<sp/>epp-&gt;recordsPerPage,<sp/>epp-&gt;recordsPerPage,<sp/>offsetRecords,<sp/><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7aa5c22bab5fe5699bcf03606cb6905d72c" kindref="member" tooltip="FALSE.">EagleFalse</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_data_type_8h_1ac484ab15f125f81b0437f7aed65fbbb2a898857f5829f028ef6f1b94c0ba1b2d5" kindref="member" tooltip="Unknown/invalid data type.">EagleDataTypeUnknown</ref>:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>page;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageProviderArray.c"/>
  </compounddef>
</doxygen>
