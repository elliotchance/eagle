<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="_eagle_utils_8h" kind="file">
    <compoundname>EagleUtils.h</compoundname>
    <includes local="no">mach/mach_time.h</includes>
    <includes refid="_eagle_boolean_8h" local="yes">EagleBoolean.h</includes>
    <includedby refid="_eagle_instance_8c" local="yes">eagle/eagle/EagleInstance.c</includedby>
    <includedby refid="_eagle_linked_list_8c" local="yes">eagle/eagle/EagleLinkedList.c</includedby>
    <includedby refid="_eagle_logger_8c" local="yes">eagle/eagle/EagleLogger.c</includedby>
    <includedby refid="_eagle_page_8c" local="yes">eagle/eagle/EaglePage.c</includedby>
    <includedby refid="_eagle_page_operations_8c" local="yes">eagle/eagle/EaglePageOperations.c</includedby>
    <includedby refid="_eagle_page_provider_array_8c" local="yes">eagle/eagle/EaglePageProviderArray.c</includedby>
    <includedby refid="_eagle_page_provider_stream_8c" local="yes">eagle/eagle/EaglePageProviderStream.c</includedby>
    <includedby refid="_eagle_plan_8c" local="yes">eagle/eagle/EaglePlan.c</includedby>
    <includedby refid="_eagle_utils_8c" local="yes">eagle/eagle/EagleUtils.c</includedby>
    <includedby refid="_eagle_worker_8c" local="yes">eagle/eagle/EagleWorker.c</includedby>
    <includedby refid="_eagle_db_console_8c" local="yes">eagle/eagledb/EagleDbConsole.c</includedby>
    <includedby refid="_eagle_db_parser_8c" local="yes">eagle/eagledb/EagleDbParser.c</includedby>
    <includedby refid="_eagle_db_sql_expression_8c" local="yes">eagle/eagledb/EagleDbSqlExpression.c</includedby>
    <includedby refid="_eagle_db_sql_select_8c" local="yes">eagle/eagledb/EagleDbSqlSelect.c</includedby>
    <includedby refid="_eagle_db_table_data_8c" local="yes">eagle/eagledb/EagleDbTableData.c</includedby>
    <includedby refid="_eagle_db_tuple_8c" local="yes">eagle/eagledb/EagleDbTuple.c</includedby>
    <incdepgraph>
      <node id="1653">
        <label>eagle/eagle/EagleUtils.h</label>
        <link refid="EagleUtils.h"/>
        <childnode refid="1654" relation="include">
        </childnode>
        <childnode refid="1655" relation="include">
        </childnode>
      </node>
      <node id="1654">
        <label>mach/mach_time.h</label>
      </node>
      <node id="1655">
        <label>EagleBoolean.h</label>
        <link refid="_eagle_boolean_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1672">
        <label>eagle/eagledb/EagleDbTuple.c</label>
        <link refid="_eagle_db_tuple_8c"/>
      </node>
      <node id="1669">
        <label>eagle/eagledb/EagleDbSqlExpression.c</label>
        <link refid="_eagle_db_sql_expression_8c"/>
        <childnode refid="1669" relation="include">
        </childnode>
      </node>
      <node id="1666">
        <label>eagle/eagle/EagleWorker.c</label>
        <link refid="_eagle_worker_8c"/>
      </node>
      <node id="1671">
        <label>eagle/eagledb/EagleDbTableData.c</label>
        <link refid="_eagle_db_table_data_8c"/>
      </node>
      <node id="1670">
        <label>eagle/eagledb/EagleDbSqlSelect.c</label>
        <link refid="_eagle_db_sql_select_8c"/>
      </node>
      <node id="1659">
        <label>eagle/eagle/EagleLogger.c</label>
        <link refid="_eagle_logger_8c"/>
      </node>
      <node id="1657">
        <label>eagle/eagle/EagleInstance.c</label>
        <link refid="_eagle_instance_8c"/>
        <childnode refid="1657" relation="include">
        </childnode>
      </node>
      <node id="1668">
        <label>eagle/eagledb/EagleDbParser.c</label>
        <link refid="_eagle_db_parser_8c"/>
      </node>
      <node id="1665">
        <label>eagle/eagle/EagleUtils.c</label>
        <link refid="_eagle_utils_8c"/>
      </node>
      <node id="1656">
        <label>eagle/eagle/EagleUtils.h</label>
        <link refid="EagleUtils.h"/>
        <childnode refid="1657" relation="include">
        </childnode>
        <childnode refid="1658" relation="include">
        </childnode>
        <childnode refid="1659" relation="include">
        </childnode>
        <childnode refid="1660" relation="include">
        </childnode>
        <childnode refid="1661" relation="include">
        </childnode>
        <childnode refid="1662" relation="include">
        </childnode>
        <childnode refid="1663" relation="include">
        </childnode>
        <childnode refid="1664" relation="include">
        </childnode>
        <childnode refid="1665" relation="include">
        </childnode>
        <childnode refid="1666" relation="include">
        </childnode>
        <childnode refid="1667" relation="include">
        </childnode>
        <childnode refid="1668" relation="include">
        </childnode>
        <childnode refid="1669" relation="include">
        </childnode>
        <childnode refid="1670" relation="include">
        </childnode>
        <childnode refid="1671" relation="include">
        </childnode>
        <childnode refid="1672" relation="include">
        </childnode>
      </node>
      <node id="1658">
        <label>eagle/eagle/EagleLinkedList.c</label>
        <link refid="_eagle_linked_list_8c"/>
      </node>
      <node id="1661">
        <label>eagle/eagle/EaglePageOperations.c</label>
        <link refid="_eagle_page_operations_8c"/>
      </node>
      <node id="1667">
        <label>eagle/eagledb/EagleDbConsole.c</label>
        <link refid="_eagle_db_console_8c"/>
        <childnode refid="1667" relation="include">
        </childnode>
      </node>
      <node id="1663">
        <label>eagle/eagle/EaglePageProviderStream.c</label>
        <link refid="_eagle_page_provider_stream_8c"/>
      </node>
      <node id="1660">
        <label>eagle/eagle/EaglePage.c</label>
        <link refid="_eagle_page_8c"/>
      </node>
      <node id="1664">
        <label>eagle/eagle/EaglePlan.c</label>
        <link refid="_eagle_plan_8c"/>
      </node>
      <node id="1662">
        <label>eagle/eagle/EaglePageProviderArray.c</label>
        <link refid="_eagle_page_provider_array_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_eagle_utils_8h_1ad2f3678bf5eae3684fc497130b946eae" prot="public" static="no">
        <name>MIN</name>
        <param><defname>X</defname></param>
        <param><defname>Y</defname></param>
        <initializer>((X) &lt; (Y) ? (X) : (Y))</initializer>
        <briefdescription>
<para>Minimum value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EagleUtils.h" line="10" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EagleUtils.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_eagle_utils_8h_1a585ec786801761b3121bd01315277500" prot="public" static="no">
        <name>strcat_safe</name>
        <param><defname>dest</defname></param>
        <param><defname>src</defname></param>
        <initializer>{ if(NULL != (dest) &amp;&amp; NULL != (src)) { strncat(dest, src, strlen(src)); } }</initializer>
        <briefdescription>
<para>Safe string concatination. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EagleUtils.h" line="15" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EagleUtils.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_eagle_utils_8h_1a44245be4beb783e9522ef1d875951764" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t EagleUtils_MockAbsoluteTime</definition>
        <argsstring></argsstring>
        <name>EagleUtils_MockAbsoluteTime</name>
        <briefdescription>
<para>If this is not zero then <ref refid="_eagle_utils_8c_1a075158bf12c9edf71f02c152ce771199" kindref="member">EagleUtils_GetAbsoluteTime()</ref> will return this. </para>        </briefdescription>
        <detaileddescription>
<para>You must set this to 0 to return the true absolute time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EagleUtils.h" line="50" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EagleUtils.c" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_eagle_utils_8h_1a9610c8b103e98e9c66904234ab43fb8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member">EagleBoolean</ref></type>
        <definition>EagleBoolean EagleUtils_CompareWithoutCase</definition>
        <argsstring>(const char *s1, const char *s2)</argsstring>
        <name>EagleUtils_CompareWithoutCase</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
<para>Compare two strings without case-sensitivity. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>s1</computeroutput> or <computeroutput>s2</computeroutput> is NULL then the result will be EagleFalse unless both string are NULL - in which case the result will be EagleTrue. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s1</parametername>
</parameternamelist>
<parameterdescription>
<para>First string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">s2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>EagleTrue is the two strings are the same length and contain the same characters (of any case) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EagleUtils.h" line="25" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EagleUtils.c" bodystart="51" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_utils_8h_1a075158bf12c9edf71f02c152ce771199" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t EagleUtils_GetAbsoluteTime</definition>
        <argsstring>(void)</argsstring>
        <name>EagleUtils_GetAbsoluteTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the absolute time. </para>        </briefdescription>
        <detaileddescription>
<para>One second is 1 billion clock ticks. <simplesect kind="return"><para>The absolute time of the mocked time. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EagleUtils.h" line="44" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EagleUtils.c" bodystart="11" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_utils_8h_1affd8ed69a3456109ab1c1c2a83c5e3c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EagleUtils_ToLowerCase</definition>
        <argsstring>(char *str)</argsstring>
        <name>EagleUtils_ToLowerCase</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Convert a string to lower case. </para>        </briefdescription>
        <detaileddescription>
<para>This will modify the string parsed in effectivly destorying the original case. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EagleUtils.h" line="31" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EagleUtils.c" bodystart="42" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_utils_8h_1aad935dcb7b70838e6ebe0a8041583363" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* EagleUtils_ToLowerCaseCopy</definition>
        <argsstring>(const char *str)</argsstring>
        <name>EagleUtils_ToLowerCaseCopy</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Create a new lowercase copy of a string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new allocated lowercase version of <computeroutput>str</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EagleUtils.h" line="38" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EagleUtils.c" bodystart="22" bodyend="40"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>eagle_EagleUtils_h</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>eagle_EagleUtils_h</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mach/mach_time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_boolean_8h" kindref="compound">EagleBoolean.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="_eagle_utils_8h_1ad2f3678bf5eae3684fc497130b946eae" refkind="member"><highlight class="preprocessor">#define<sp/>MIN(X,<sp/>Y)<sp/>((X)<sp/>&lt;<sp/>(Y)<sp/>?<sp/>(X)<sp/>:<sp/>(Y))</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="15" refid="_eagle_utils_8h_1a585ec786801761b3121bd01315277500" refkind="member"><highlight class="preprocessor">#define<sp/>strcat_safe(dest,<sp/>src)<sp/>{<sp/>if(NULL<sp/>!=<sp/>(dest)<sp/>&amp;&amp;<sp/>NULL<sp/>!=<sp/>(src))<sp/>{<sp/>strncat(dest,<sp/>src,<sp/>strlen(src));<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="_eagle_boolean_8h_1aa01305945a9ba427016fd971ed17ec7a" kindref="member" tooltip="Enum for representing boolean values.">EagleBoolean</ref><sp/><ref refid="_eagle_utils_8c_1a9610c8b103e98e9c66904234ab43fb8a" kindref="member" tooltip="Compare two strings without case-sensitivity.">EagleUtils_CompareWithoutCase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s2);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_utils_8c_1affd8ed69a3456109ab1c1c2a83c5e3c3" kindref="member" tooltip="Convert a string to lower case.">EagleUtils_ToLowerCase</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="_eagle_utils_8c_1aad935dcb7b70838e6ebe0a8041583363" kindref="member" tooltip="Create a new lowercase copy of a string.">EagleUtils_ToLowerCaseCopy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">uint64_t<sp/><ref refid="_eagle_utils_8c_1a075158bf12c9edf71f02c152ce771199" kindref="member" tooltip="Get the absolute time.">EagleUtils_GetAbsoluteTime</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="_eagle_utils_8c_1a44245be4beb783e9522ef1d875951764" kindref="member" tooltip="If this is not zero then EagleUtils_GetAbsoluteTime() will return this.">EagleUtils_MockAbsoluteTime</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EagleUtils.h"/>
  </compounddef>
</doxygen>
