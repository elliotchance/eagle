<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="_eagle_page_operations_8c" kind="file">
    <compoundname>EaglePageOperations.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="_eagle_page_operations_8h" local="yes">EaglePageOperations.h</includes>
    <includes refid="_eagle_page_provider_8h" local="yes">EaglePageProvider.h</includes>
    <includes refid="_eagle_utils_8h" local="yes">EagleUtils.h</includes>
    <includes refid="_eagle_logger_8h" local="yes">EagleLogger.h</includes>
    <includes local="no">unistd.h</includes>
    <incdepgraph>
      <node id="846">
        <label>stdlib.h</label>
      </node>
      <node id="865">
        <label>EagleLogger.h</label>
        <link refid="_eagle_logger_8h"/>
        <childnode refid="847" relation="include">
        </childnode>
        <childnode refid="859" relation="include">
        </childnode>
        <childnode refid="858" relation="include">
        </childnode>
        <childnode refid="861" relation="include">
        </childnode>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
      </node>
      <node id="864">
        <label>EagleUtils.h</label>
        <link refid="_eagle_utils_8h"/>
        <childnode refid="859" relation="include">
        </childnode>
        <childnode refid="852" relation="include">
        </childnode>
      </node>
      <node id="861">
        <label>EagleLinkedList.h</label>
        <link refid="_eagle_linked_list_8h"/>
        <childnode refid="858" relation="include">
        </childnode>
        <childnode refid="852" relation="include">
        </childnode>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="862" relation="include">
        </childnode>
      </node>
      <node id="845">
        <label>eagle/eagle/EaglePageOperations.c</label>
        <link refid="EaglePageOperations.c"/>
        <childnode refid="846" relation="include">
        </childnode>
        <childnode refid="847" relation="include">
        </childnode>
        <childnode refid="848" relation="include">
        </childnode>
        <childnode refid="849" relation="include">
        </childnode>
        <childnode refid="850" relation="include">
        </childnode>
        <childnode refid="856" relation="include">
        </childnode>
        <childnode refid="864" relation="include">
        </childnode>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
      </node>
      <node id="850">
        <label>EaglePageOperations.h</label>
        <link refid="_eagle_page_operations_8h"/>
        <childnode refid="851" relation="include">
        </childnode>
        <childnode refid="856" relation="include">
        </childnode>
      </node>
      <node id="859">
        <label>mach/mach_time.h</label>
      </node>
      <node id="858">
        <label>EagleSynchronizer.h</label>
        <link refid="_eagle_synchronizer_8h"/>
        <childnode refid="859" relation="include">
        </childnode>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="852" relation="include">
        </childnode>
      </node>
      <node id="857">
        <label>pthread.h</label>
      </node>
      <node id="848">
        <label>string.h</label>
      </node>
      <node id="863">
        <label>EaglePageProviderType.h</label>
        <link refid="_eagle_page_provider_type_8h"/>
      </node>
      <node id="869">
        <label>unistd.h</label>
      </node>
      <node id="853">
        <label>EagleData.h</label>
        <link refid="_eagle_data_8h"/>
        <childnode refid="854" relation="include">
        </childnode>
      </node>
      <node id="854">
        <label>EagleDataType.h</label>
        <link refid="_eagle_data_type_8h"/>
      </node>
      <node id="852">
        <label>EagleBoolean.h</label>
        <link refid="_eagle_boolean_8h"/>
      </node>
      <node id="866">
        <label>EagleLoggerEvent.h</label>
        <link refid="_eagle_logger_event_8h"/>
        <childnode refid="867" relation="include">
        </childnode>
        <childnode refid="868" relation="include">
        </childnode>
        <childnode refid="855" relation="include">
        </childnode>
      </node>
      <node id="855">
        <label>Eagle.h</label>
        <link refid="_eagle_8h"/>
      </node>
      <node id="867">
        <label>time.h</label>
      </node>
      <node id="849">
        <label>math.h</label>
      </node>
      <node id="851">
        <label>EaglePage.h</label>
        <link refid="_eagle_page_8h"/>
        <childnode refid="852" relation="include">
        </childnode>
        <childnode refid="853" relation="include">
        </childnode>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="854" relation="include">
        </childnode>
      </node>
      <node id="847">
        <label>stdio.h</label>
      </node>
      <node id="868">
        <label>EagleLoggerSeverity.h</label>
        <link refid="_eagle_logger_severity_8h"/>
      </node>
      <node id="856">
        <label>EaglePageProvider.h</label>
        <link refid="_eagle_page_provider_8h"/>
        <childnode refid="857" relation="include">
        </childnode>
        <childnode refid="851" relation="include">
        </childnode>
        <childnode refid="858" relation="include">
        </childnode>
        <childnode refid="852" relation="include">
        </childnode>
        <childnode refid="861" relation="include">
        </childnode>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="854" relation="include">
        </childnode>
        <childnode refid="863" relation="include">
        </childnode>
      </node>
      <node id="860">
        <label>EagleLock.h</label>
        <link refid="_eagle_lock_8h"/>
        <childnode refid="857" relation="include">
        </childnode>
        <childnode refid="855" relation="include">
        </childnode>
      </node>
      <node id="862">
        <label>EagleLinkedListItem.h</label>
        <link refid="_eagle_linked_list_item_8h"/>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="852" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_eagle_page_operations_8c_1a861e7f4ed4307737d9d8c630f7cdcec4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_AdditionFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_AdditionFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Add a page of floats with a fixed float. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be float* which is dereferenced to the float value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a7093a7a2c7fc9a44189f0c6d66ec8c36" kindref="member">EagleData_Float()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="299" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="298" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a2e11eb9379553de289ac3b3c5cee81b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_AdditionInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_AdditionInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Add a page of integers with a fixed integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="91" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="90" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a75b23c865944d4a1b7948a9aa2adc915" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_AdditionPageFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_AdditionPageFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Addition of two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="479" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="478" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a21fc7a5bfee8005f282ef3ed7364ff22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_AdditionPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_AdditionPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Addition of two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="466" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="465" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a915b1e6e6b789d976601044cc1e419ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_AndPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_AndPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Calculate logical AND between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="387" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="386" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a284428e6f5f611cfa65599323b5aac0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_CastPageIntFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_CastPageIntFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Cast INTEGER page to FLOAT page. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="439" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="438" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a6273e3cd132e8b9db447a1c78bb57cae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_DivideLeftFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_DivideLeftFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Divide a page of floats with a fixed float. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be float* which is dereferenced to the float value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a7093a7a2c7fc9a44189f0c6d66ec8c36" kindref="member">EagleData_Float()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="351" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="350" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a56f44580f81f0d27b43588ceaf6d7bd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_DivideLeftInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_DivideLeftInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Divide a page of integers with a fixed integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="179" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="178" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a72548bca2dde60339ae9da04c4fb5403" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_DividePageFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_DividePageFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Division of two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="839" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="838" bodyend="854"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a28a33a620293a0272815f6128c723047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_DividePageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_DividePageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Division of two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="821" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="820" bodyend="836"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1ae84372f58e22682d7c9698ed116168a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_DivideRightFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_DivideRightFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Divide a page of floats with a fixed float. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be float* which is dereferenced to the float value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a7093a7a2c7fc9a44189f0c6d66ec8c36" kindref="member">EagleData_Float()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="369" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="368" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1ad9e14d92cfedc2ee2d7fd5e43da6e73a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_DivideRightInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_DivideRightInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Divide a page of integers with a fixed integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="197" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="196" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a00470c39358da8a5668eb12c3e83fb53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_EqualsFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_EqualsFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Compare a page of floats with a fixed float. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be float* which is dereferenced to the float value for comparison.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a7093a7a2c7fc9a44189f0c6d66ec8c36" kindref="member">EagleData_Float()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="271" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="270" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a1b4f96245d8608bd9daaab485d03b502" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_EqualsInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_EqualsInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Compare a page of integers with a fixed integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value for comparison.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="65" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="64" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a0fbcb28623e90d9b8766e21e9ded7f4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_EqualsPageFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_EqualsPageFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Equals comparison between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="628" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="627" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a6ef4ae9096f59c67123469ac37362cce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_EqualsPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_EqualsPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Equals comparison between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="615" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="614" bodyend="625"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a5426fa057acf4c558a72f30a0098bfe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_GreaterThanEqualPageFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_GreaterThanEqualPageFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Greater than or equal to comparison between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="754" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="753" bodyend="765"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a3a5e103fbe1bb5eac03b8784df1ac3ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_GreaterThanEqualPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_GreaterThanEqualPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Greater than or equal to comparison between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="741" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="740" bodyend="751"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a9d3c9462933492666ad8652bcc0c9605" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_GreaterThanEqualsFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_GreaterThanEqualsFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Calculate values in a page that are greater or equal to than an float. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be float* which is dereferenced to the float value for comparison.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a7093a7a2c7fc9a44189f0c6d66ec8c36" kindref="member">EagleData_Float()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="257" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="256" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a548450031e1602083a35b4eb09f81552" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_GreaterThanEqualsInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_GreaterThanEqualsInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Calculate values in a page that are greater or equal to than an integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value for comparison.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="52" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="51" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1aa6864058da8a5ca26ebb02491e1fd98e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_GreaterThanFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_GreaterThanFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Calculate values in a page that are greater than an float. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be float* which is dereferenced to the float value for comparison.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a7093a7a2c7fc9a44189f0c6d66ec8c36" kindref="member">EagleData_Float()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="229" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="228" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a406649a1c22393fb0169895b0a25d652" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_GreaterThanInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_GreaterThanInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Calculate values in a page that are greater than an integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value for comparison.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="26" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="25" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a622ae1b85c8c27949088a6cc056fd69f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_GreaterThanPageFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_GreaterThanPageFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Greater than comparison between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="700" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="699" bodyend="711"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a46d8374f2554c3098152ff468220744b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_GreaterThanPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_GreaterThanPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Greater than comparison between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="687" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="686" bodyend="697"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1ad9133605694a86d29cbcfa46e8f28e46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_LessThanEqualPageFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_LessThanEqualPageFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Less than or equal to comparison between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="781" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="780" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1aa5c9b2ce2ebc73ba46b55aac558fff35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_LessThanEqualPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_LessThanEqualPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Less than or equal to comparison between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="768" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="767" bodyend="778"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1ae225611f0b209e1d1e11ae1bc35c3939" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_LessThanEqualsFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_LessThanEqualsFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Calculate values in a page that are less than or equal to an float. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be float* which is dereferenced to the float value for comparison.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a7093a7a2c7fc9a44189f0c6d66ec8c36" kindref="member">EagleData_Float()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="243" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="242" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1aac8d2044d5b96b18a0518ff04c35cba9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_LessThanEqualsInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_LessThanEqualsInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Calculate values in a page that are less than or equal to an integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value for comparison.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="39" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="38" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a5dac831ee2c65a11de4b8ee12a6e9188" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_LessThanFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_LessThanFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Calculate values in a page that are less than an float. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be float* which is dereferenced to the float value for comparison.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a7093a7a2c7fc9a44189f0c6d66ec8c36" kindref="member">EagleData_Float()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="215" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="214" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1aed8af88ca2826e1e5e94640ba17b0e00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_LessThanInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_LessThanInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Calculate values in a page that are less than an integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value for comparison.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="13" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="12" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1af27c52761ca2c22702a9757c4a17cbad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_LessThanPageFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_LessThanPageFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Less than comparison between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="727" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="726" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a87fe8ca136417c4786f08ab6ebc124bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_LessThanPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_LessThanPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Less than comparison between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="714" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="713" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a2690b7e660c0299fb0089cb5b4984dc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_ModulusLeftInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_ModulusLeftInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Modulus (remainder) a page of integers with a fixed integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="104" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="103" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1ac9e90c2aede230864b030c03d87bc207" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_ModulusPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_ModulusPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Modulus of two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="669" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="668" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a4155c2fc61cfb50ddad6751398a70fe7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_ModulusRightInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_ModulusRightInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Modulus (remainder) a page of integers with a fixed integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="122" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="121" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a846c81a30fe7a05d76a446b3c665c73f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_MultiplyFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_MultiplyFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Multiply a page of floats with a fixed float. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be float* which is dereferenced to the float value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a7093a7a2c7fc9a44189f0c6d66ec8c36" kindref="member">EagleData_Float()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="338" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="337" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a7c128e6f9b9f259ea589cec034c1761e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_MultiplyInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_MultiplyInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Multiply a page of integers with a fixed integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="166" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="165" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a413e49906bb479f9083827abd8963675" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_MultiplyPageFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_MultiplyPageFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Multiplication of two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="505" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="504" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a5f9ec379ed68d7a8cc0770c5fd0b4f6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_MultiplyPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_MultiplyPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Multiplication of two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="492" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="491" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1aa56d46b2b2bef43d0c2d34405737ac1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_NegatePageFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_NegatePageFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Negate page. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="453" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="452" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a98101677818d4e0df5687a05ff482fb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_NegatePageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_NegatePageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Negate page. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="426" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="425" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a7e3d7b7368e94c5caf680669e2417d3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_NotEqualsFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_NotEqualsFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Compare a page of floats with a fixed float. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be float* which is dereferenced to the float value for comparison.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a7093a7a2c7fc9a44189f0c6d66ec8c36" kindref="member">EagleData_Float()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="285" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="284" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a30c9e80548ec5f8f0b94e1b159cc1a31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_NotEqualsInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_NotEqualsInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Compare a page of integers with a fixed integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value for comparison.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="78" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="77" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a959e133141972d4cf9bd9af7d0b636b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_NotEqualsPageFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_NotEqualsPageFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Not equals comparison between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="655" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="654" bodyend="666"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a6a93cd870158056ca135eff01bc35910" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_NotEqualsPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_NotEqualsPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Not equals comparison between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="642" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="641" bodyend="652"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a12faa846fed0497aa0f864357adc25bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_NotPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_NotPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Calculate logical NOT of a page. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="413" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="412" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a0f3d6e7d7008dfa6e9dc501dc92c1e3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_OrPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_OrPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Calculate logical OR between two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="400" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="399" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a257bbb90faf1843e888f8e5cf18618ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_SendPageToProvider</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_SendPageToProvider</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Send records to another provider based on a condition. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>A integer (boolean) to decide if the value should be sent to the provider. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be sent to the provider. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>An instance of <ref refid="struct_eagle_page_provider" kindref="compound">EaglePageProvider</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="590" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="589" bodyend="612"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a6d222018a9344a7a91858ff8d28b2bc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_SendPageToProviderFloat_</definition>
        <argsstring>(EaglePageProvider *provider, EaglePage *source1, EaglePage *source2)</argsstring>
        <name>EaglePageOperations_SendPageToProviderFloat_</name>
        <param>
          <type><ref refid="struct_eagle_page_provider" kindref="compound">EaglePageProvider</ref> *</type>
          <declname>provider</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <briefdescription>
<para>Private function used by <ref refid="_eagle_page_operations_8c_1a257bbb90faf1843e888f8e5cf18618ed" kindref="member">EaglePageOperations_SendPageToProvider()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">provider</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Left source. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Right source. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_page_operations_8c_1a257bbb90faf1843e888f8e5cf18618ed" kindref="member">EaglePageOperations_SendPageToProvider()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="568" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="565" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a40d98b84f9efcf9576cc5ed822f591d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_SendPageToProviderInteger_</definition>
        <argsstring>(EaglePageProvider *provider, EaglePage *source1, EaglePage *source2)</argsstring>
        <name>EaglePageOperations_SendPageToProviderInteger_</name>
        <param>
          <type><ref refid="struct_eagle_page_provider" kindref="compound">EaglePageProvider</ref> *</type>
          <declname>provider</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <briefdescription>
<para>Private function used by <ref refid="_eagle_page_operations_8c_1a257bbb90faf1843e888f8e5cf18618ed" kindref="member">EaglePageOperations_SendPageToProvider()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">provider</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Left source. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Right source. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_page_operations_8c_1a257bbb90faf1843e888f8e5cf18618ed" kindref="member">EaglePageOperations_SendPageToProvider()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="520" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="517" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a85f615bceb1bfcb2f5f536e7004330f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_SendPageToProviderVarchar_</definition>
        <argsstring>(EaglePageProvider *provider, EaglePage *source1, EaglePage *source2)</argsstring>
        <name>EaglePageOperations_SendPageToProviderVarchar_</name>
        <param>
          <type><ref refid="struct_eagle_page_provider" kindref="compound">EaglePageProvider</ref> *</type>
          <declname>provider</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <briefdescription>
<para>Private function used by <ref refid="_eagle_page_operations_8c_1a257bbb90faf1843e888f8e5cf18618ed" kindref="member">EaglePageOperations_SendPageToProvider()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">provider</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Left source. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Right source. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_page_operations_8c_1a257bbb90faf1843e888f8e5cf18618ed" kindref="member">EaglePageOperations_SendPageToProvider()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="544" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="541" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a98a63b31f899a86be0b775326d5b5620" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_SqrtPageFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_SqrtPageFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Calculate square root of a page. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. All records in this page will be given a value or 0 or 1 based on the result of the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="857" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="856" bodyend="867"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a47869558a26eb1124a8f43cf4ccc71f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_SubtractLeftFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_SubtractLeftFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Subtract a page of floats with a fixed float. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be float* which is dereferenced to the float value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a7093a7a2c7fc9a44189f0c6d66ec8c36" kindref="member">EagleData_Float()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="312" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="311" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1ade3d9f6cb1b231fc4f2c2c628c093799" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_SubtractLeftInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_SubtractLeftInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Subtract a page of integers with a fixed integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="140" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="139" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a721ddc8191c620d97f909d10e551ecbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_SubtractPageFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_SubtractPageFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Subtraction (minus) of two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="808" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="807" bodyend="818"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1abc383e35d1d4316e7be5150777babea7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_SubtractPageInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_SubtractPageInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Subtraction (minus) of two pages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Operand 2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="795" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="794" bodyend="805"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a016a6436393344e104c5cd3f3848f0dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_SubtractRightFloat</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_SubtractRightFloat</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Subtract a page of floats with a fixed float. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be float* which is dereferenced to the float value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a7093a7a2c7fc9a44189f0c6d66ec8c36" kindref="member">EagleData_Float()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="325" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="324" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="_eagle_page_operations_8c_1a2d909b6a9ce973fcef1815c079bf2491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EaglePageOperations_SubtractRightInt</definition>
        <argsstring>(EaglePage *destination, EaglePage *source1, EaglePage *source2, void *obj)</argsstring>
        <name>EaglePageOperations_SubtractRightInt</name>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source1</declname>
        </param>
        <param>
          <type><ref refid="struct_eagle_page" kindref="compound">EaglePage</ref> *</type>
          <declname>source2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Subtract a page of integers with a fixed integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be preallocated to the same size as <computeroutput>source1</computeroutput> and <computeroutput>source2</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source1</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to scan, can be any size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be int* which is dereferenced to the integer value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_eagle_data_8c_1a9c6598608002abd11eca88e9175698f2" kindref="member">EagleData_Int()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" line="153" bodyfile="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c" bodystart="152" bodyend="163"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_page_operations_8h" kindref="compound">EaglePageOperations.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_page_provider_8h" kindref="compound">EaglePageProvider.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_utils_8h" kindref="compound">EagleUtils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eagle_logger_8h" kindref="compound">EagleLogger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="_eagle_page_operations_8h_1aed8af88ca2826e1e5e94640ba17b0e00" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1aed8af88ca2826e1e5e94640ba17b0e00" kindref="member" tooltip="Calculate values in a page that are less than an integer.">EaglePageOperations_LessThanInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>obj),<sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>&lt;<sp/>value);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="_eagle_page_operations_8h_1a406649a1c22393fb0169895b0a25d652" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a406649a1c22393fb0169895b0a25d652" kindref="member" tooltip="Calculate values in a page that are greater than an integer.">EaglePageOperations_GreaterThanInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>obj),<sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>&gt;<sp/>value);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="_eagle_page_operations_8h_1aac8d2044d5b96b18a0518ff04c35cba9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1aac8d2044d5b96b18a0518ff04c35cba9" kindref="member" tooltip="Calculate values in a page that are less than or equal to an integer.">EaglePageOperations_LessThanEqualsInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>obj),<sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>&lt;=<sp/>value);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="_eagle_page_operations_8h_1a548450031e1602083a35b4eb09f81552" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a548450031e1602083a35b4eb09f81552" kindref="member" tooltip="Calculate values in a page that are greater or equal to than an integer.">EaglePageOperations_GreaterThanEqualsInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>obj),<sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>&gt;=<sp/>value);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="_eagle_page_operations_8h_1a1b4f96245d8608bd9daaab485d03b502" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a1b4f96245d8608bd9daaab485d03b502" kindref="member" tooltip="Compare a page of integers with a fixed integer.">EaglePageOperations_EqualsInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>obj),<sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>==<sp/>value);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="_eagle_page_operations_8h_1a30c9e80548ec5f8f0b94e1b159cc1a31" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a30c9e80548ec5f8f0b94e1b159cc1a31" kindref="member" tooltip="Compare a page of integers with a fixed integer.">EaglePageOperations_NotEqualsInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>obj),<sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>!=<sp/>value);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="_eagle_page_operations_8h_1a2e11eb9379553de289ac3b3c5cee81b1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a2e11eb9379553de289ac3b3c5cee81b1" kindref="member" tooltip="Add a page of integers with a fixed integer.">EaglePageOperations_AdditionInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>obj),<sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>+<sp/>value);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="_eagle_page_operations_8h_1a2690b7e660c0299fb0089cb5b4984dc5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a2690b7e660c0299fb0089cb5b4984dc5" kindref="member" tooltip="Modulus (remainder) a page of integers with a fixed integer.">EaglePageOperations_ModulusLeftInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>obj),<sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>%<sp/>value);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="_eagle_page_operations_8h_1a4155c2fc61cfb50ddad6751398a70fe7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a4155c2fc61cfb50ddad6751398a70fe7" kindref="member" tooltip="Modulus (remainder) a page of integers with a fixed integer.">EaglePageOperations_ModulusRightInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>obj),<sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>source1data[i])<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(value<sp/>%<sp/>source1data[i]);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="_eagle_page_operations_8h_1ade3d9f6cb1b231fc4f2c2c628c093799" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1ade3d9f6cb1b231fc4f2c2c628c093799" kindref="member" tooltip="Subtract a page of integers with a fixed integer.">EaglePageOperations_SubtractLeftInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>obj),<sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>-<sp/>value);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="_eagle_page_operations_8h_1a2d909b6a9ce973fcef1815c079bf2491" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a2d909b6a9ce973fcef1815c079bf2491" kindref="member" tooltip="Subtract a page of integers with a fixed integer.">EaglePageOperations_SubtractRightInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>obj),<sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(value<sp/>-<sp/>source1data[i]);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="_eagle_page_operations_8h_1a7c128e6f9b9f259ea589cec034c1761e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a7c128e6f9b9f259ea589cec034c1761e" kindref="member" tooltip="Multiply a page of integers with a fixed integer.">EaglePageOperations_MultiplyInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>obj),<sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>*<sp/>value);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="_eagle_page_operations_8h_1a56f44580f81f0d27b43588ceaf6d7bd1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a56f44580f81f0d27b43588ceaf6d7bd1" kindref="member" tooltip="Divide a page of integers with a fixed integer.">EaglePageOperations_DivideLeftInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>obj),<sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>/<sp/>value);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="_eagle_page_operations_8h_1ad9e14d92cfedc2ee2d7fd5e43da6e73a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1ad9e14d92cfedc2ee2d7fd5e43da6e73a" kindref="member" tooltip="Divide a page of integers with a fixed integer.">EaglePageOperations_DivideRightInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>obj),<sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>source1data[i])<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(value<sp/>/<sp/>source1data[i]);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="_eagle_page_operations_8h_1a5dac831ee2c65a11de4b8ee12a6e9188" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a5dac831ee2c65a11de4b8ee12a6e9188" kindref="member" tooltip="Calculate values in a page that are less than an float.">EaglePageOperations_LessThanFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>obj),<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>&lt;<sp/>value);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="_eagle_page_operations_8h_1aa6864058da8a5ca26ebb02491e1fd98e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1aa6864058da8a5ca26ebb02491e1fd98e" kindref="member" tooltip="Calculate values in a page that are greater than an float.">EaglePageOperations_GreaterThanFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>obj),<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>&gt;<sp/>value);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="_eagle_page_operations_8h_1ae225611f0b209e1d1e11ae1bc35c3939" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1ae225611f0b209e1d1e11ae1bc35c3939" kindref="member" tooltip="Calculate values in a page that are less than or equal to an float.">EaglePageOperations_LessThanEqualsFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>obj),<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>&lt;=<sp/>value);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="_eagle_page_operations_8h_1a9d3c9462933492666ad8652bcc0c9605" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a9d3c9462933492666ad8652bcc0c9605" kindref="member" tooltip="Calculate values in a page that are greater or equal to than an float.">EaglePageOperations_GreaterThanEqualsFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>obj),<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>&gt;=<sp/>value);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="_eagle_page_operations_8h_1a00470c39358da8a5668eb12c3e83fb53" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a00470c39358da8a5668eb12c3e83fb53" kindref="member" tooltip="Compare a page of floats with a fixed float.">EaglePageOperations_EqualsFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>obj),<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>==<sp/>value);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="_eagle_page_operations_8h_1a7e3d7b7368e94c5caf680669e2417d3c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a7e3d7b7368e94c5caf680669e2417d3c" kindref="member" tooltip="Compare a page of floats with a fixed float.">EaglePageOperations_NotEqualsFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>obj),<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>!=<sp/>value);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="_eagle_page_operations_8h_1a861e7f4ed4307737d9d8c630f7cdcec4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a861e7f4ed4307737d9d8c630f7cdcec4" kindref="member" tooltip="Add a page of floats with a fixed float.">EaglePageOperations_AdditionFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>obj),<sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>+<sp/>value);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="_eagle_page_operations_8h_1a47869558a26eb1124a8f43cf4ccc71f3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a47869558a26eb1124a8f43cf4ccc71f3" kindref="member" tooltip="Subtract a page of floats with a fixed float.">EaglePageOperations_SubtractLeftFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>obj),<sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>-<sp/>value);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324" refid="_eagle_page_operations_8h_1a016a6436393344e104c5cd3f3848f0dc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a016a6436393344e104c5cd3f3848f0dc" kindref="member" tooltip="Subtract a page of floats with a fixed float.">EaglePageOperations_SubtractRightFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="325"><highlight class="normal">{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>obj),<sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(value<sp/>-<sp/>source1data[i]);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="_eagle_page_operations_8h_1a846c81a30fe7a05d76a446b3c665c73f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a846c81a30fe7a05d76a446b3c665c73f" kindref="member" tooltip="Multiply a page of floats with a fixed float.">EaglePageOperations_MultiplyFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>obj),<sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>*<sp/>value);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="_eagle_page_operations_8h_1a6273e3cd132e8b9db447a1c78bb57cae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a6273e3cd132e8b9db447a1c78bb57cae" kindref="member" tooltip="Divide a page of floats with a fixed float.">EaglePageOperations_DivideLeftFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>obj),<sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>/<sp/>value);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="_eagle_page_operations_8h_1ae84372f58e22682d7c9698ed116168a0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1ae84372f58e22682d7c9698ed116168a0" kindref="member" tooltip="Divide a page of floats with a fixed float.">EaglePageOperations_DivideRightFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>value<sp/>=<sp/>*((<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>obj),<sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>source1data[i])<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(value<sp/>/<sp/>source1data[i]);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="_eagle_page_operations_8h_1a915b1e6e6b789d976601044cc1e419ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a915b1e6e6b789d976601044cc1e419ab" kindref="member" tooltip="Calculate logical AND between two pages.">EaglePageOperations_AndPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>source1data[i]<sp/>&amp;&amp;<sp/>source2data[i];</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="_eagle_page_operations_8h_1a0f3d6e7d7008dfa6e9dc501dc92c1e3e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a0f3d6e7d7008dfa6e9dc501dc92c1e3e" kindref="member" tooltip="Calculate logical OR between two pages.">EaglePageOperations_OrPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>source1data[i]<sp/>||<sp/>source2data[i];</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412" refid="_eagle_page_operations_8h_1a12faa846fed0497aa0f864357adc25bd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a12faa846fed0497aa0f864357adc25bd" kindref="member" tooltip="Calculate logical NOT of a page.">EaglePageOperations_NotPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>!source1data[i];</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425" refid="_eagle_page_operations_8h_1a98101677818d4e0df5687a05ff482fb2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a98101677818d4e0df5687a05ff482fb2" kindref="member" tooltip="Negate page.">EaglePageOperations_NegatePageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>-source1data[i];</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="_eagle_page_operations_8h_1a284428e6f5f611cfa65599323b5aac0f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a284428e6f5f611cfa65599323b5aac0f" kindref="member" tooltip="Cast INTEGER page to FLOAT page.">EaglePageOperations_CastPageIntFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>)<sp/>source1data[i];</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452" refid="_eagle_page_operations_8h_1aa56d46b2b2bef43d0c2d34405737ac1a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1aa56d46b2b2bef43d0c2d34405737ac1a" kindref="member" tooltip="Negate page.">EaglePageOperations_NegatePageFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="453"><highlight class="normal">{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>-source1data[i];</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="_eagle_page_operations_8h_1a21fc7a5bfee8005f282ef3ed7364ff22" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a21fc7a5bfee8005f282ef3ed7364ff22" kindref="member" tooltip="Addition of two pages.">EaglePageOperations_AdditionPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>source1data[i]<sp/>+<sp/>source2data[i];</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478" refid="_eagle_page_operations_8h_1a75b23c865944d4a1b7948a9aa2adc915" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a75b23c865944d4a1b7948a9aa2adc915" kindref="member" tooltip="Addition of two pages.">EaglePageOperations_AdditionPageFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="479"><highlight class="normal">{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>source1data[i]<sp/>+<sp/>source2data[i];</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491" refid="_eagle_page_operations_8h_1a5f9ec379ed68d7a8cc0770c5fd0b4f6c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a5f9ec379ed68d7a8cc0770c5fd0b4f6c" kindref="member" tooltip="Multiplication of two pages.">EaglePageOperations_MultiplyPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>source1data[i]<sp/>*<sp/>source2data[i];</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504" refid="_eagle_page_operations_8h_1a413e49906bb479f9083827abd8963675" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a413e49906bb479f9083827abd8963675" kindref="member" tooltip="Multiplication of two pages.">EaglePageOperations_MultiplyPageFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="505"><highlight class="normal">{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>source1data[i]<sp/>*<sp/>source2data[i];</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517" refid="_eagle_page_operations_8h_1a40d98b84f9efcf9576cc5ed822f591d8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a40d98b84f9efcf9576cc5ed822f591d8" kindref="member" tooltip="Private function used by EaglePageOperations_SendPageToProvider().">EaglePageOperations_SendPageToProviderInteger_</ref>(<ref refid="struct_eagle_page_provider" kindref="compound" tooltip="A page provider.">EaglePageProvider</ref><sp/>*provider,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2)</highlight></codeline>
<codeline lineno="520"><highlight class="normal">{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>source1)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>send<sp/>all<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source2-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_page_provider_8c_1a183a8c681cc94873a7a4674af1c35880" kindref="member" tooltip="Add a record to a writable provider (if possible).">EaglePageProvider_add</ref>(provider,<sp/>&amp;source2data[i]);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>send<sp/>some<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source2-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(source1data[i])<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_page_provider_8c_1a183a8c681cc94873a7a4674af1c35880" kindref="member" tooltip="Add a record to a writable provider (if possible).">EaglePageProvider_add</ref>(provider,<sp/>&amp;source2data[i]);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541" refid="_eagle_page_operations_8h_1a85f615bceb1bfcb2f5f536e7004330f5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a85f615bceb1bfcb2f5f536e7004330f5" kindref="member" tooltip="Private function used by EaglePageOperations_SendPageToProvider().">EaglePageOperations_SendPageToProviderVarchar_</ref>(<ref refid="struct_eagle_page_provider" kindref="compound" tooltip="A page provider.">EaglePageProvider</ref><sp/>*provider,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2)</highlight></codeline>
<codeline lineno="544"><highlight class="normal">{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1adca1890444ae43d449a6df07beb9c313" kindref="member" tooltip="The global data type for handling EagleDataTypeVarchar.">EagleDataTypeVarcharType</ref><sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1adca1890444ae43d449a6df07beb9c313" kindref="member" tooltip="The global data type for handling EagleDataTypeVarchar.">EagleDataTypeVarcharType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>source1)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>send<sp/>all<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source2-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_page_provider_8c_1a183a8c681cc94873a7a4674af1c35880" kindref="member" tooltip="Add a record to a writable provider (if possible).">EaglePageProvider_add</ref>(provider,<sp/>strdup(source2data[i]));</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>send<sp/>some<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source2-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(source1data[i])<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_page_provider_8c_1a183a8c681cc94873a7a4674af1c35880" kindref="member" tooltip="Add a record to a writable provider (if possible).">EaglePageProvider_add</ref>(provider,<sp/>strdup(source2data[i]));</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565" refid="_eagle_page_operations_8h_1a6d222018a9344a7a91858ff8d28b2bc8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a6d222018a9344a7a91858ff8d28b2bc8" kindref="member" tooltip="Private function used by EaglePageOperations_SendPageToProvider().">EaglePageOperations_SendPageToProviderFloat_</ref>(<ref refid="struct_eagle_page_provider" kindref="compound" tooltip="A page provider.">EaglePageProvider</ref><sp/>*provider,</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2)</highlight></codeline>
<codeline lineno="568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>source1)<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>send<sp/>all<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source2-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_page_provider_8c_1a183a8c681cc94873a7a4674af1c35880" kindref="member" tooltip="Add a record to a writable provider (if possible).">EaglePageProvider_add</ref>(provider,<sp/>&amp;source2data[i]);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>send<sp/>some<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source2-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(source1data[i])<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_page_provider_8c_1a183a8c681cc94873a7a4674af1c35880" kindref="member" tooltip="Add a record to a writable provider (if possible).">EaglePageProvider_add</ref>(provider,<sp/>&amp;source2data[i]);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589" refid="_eagle_page_operations_8h_1a257bbb90faf1843e888f8e5cf18618ed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a257bbb90faf1843e888f8e5cf18618ed" kindref="member" tooltip="Send records to another provider based on a condition.">EaglePageOperations_SendPageToProvider</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_eagle_page_provider" kindref="compound" tooltip="A page provider.">EaglePageProvider</ref><sp/>*provider<sp/>=<sp/>(<ref refid="struct_eagle_page_provider" kindref="compound" tooltip="A page provider.">EaglePageProvider</ref>*)<sp/>obj;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(provider-&gt;type)<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_data_type_8h_1ac484ab15f125f81b0437f7aed65fbbb2a898857f5829f028ef6f1b94c0ba1b2d5" kindref="member" tooltip="Unknown/invalid data type.">EagleDataTypeUnknown</ref>:</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_logger_8c_1a2b11ce5acff2e74749d6ad9e181e67e8" kindref="member" tooltip="Log an event.">EagleLogger_Log</ref>(<ref refid="_eagle_logger_severity_8h_1a7316d55576378a753facf17fa36597e2a76a93f9f51daaaaf8a119a878fa74988" kindref="member" tooltip="An error is a problem that has stopped a task from continuing but the state of the...">EagleLoggerSeverityError</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>type.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_data_type_8h_1ac484ab15f125f81b0437f7aed65fbbb2a036473b82a3370995203efc068bfd977" kindref="member" tooltip="INT or INTEGER: 32bit integer.">EagleDataTypeInteger</ref>:</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_page_operations_8c_1a40d98b84f9efcf9576cc5ed822f591d8" kindref="member" tooltip="Private function used by EaglePageOperations_SendPageToProvider().">EaglePageOperations_SendPageToProviderInteger_</ref>(provider,<sp/>source1,<sp/>source2);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_data_type_8h_1ac484ab15f125f81b0437f7aed65fbbb2a23c99b1b8cd114dcb4b0c2671767ac86" kindref="member" tooltip="VARCHAR: A NULL terminated string.">EagleDataTypeVarchar</ref>:</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_page_operations_8c_1a85f615bceb1bfcb2f5f536e7004330f5" kindref="member" tooltip="Private function used by EaglePageOperations_SendPageToProvider().">EaglePageOperations_SendPageToProviderVarchar_</ref>(provider,<sp/>source1,<sp/>source2);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_eagle_data_type_8h_1ac484ab15f125f81b0437f7aed65fbbb2ae23dff1ffd05859c8d1d0b291a6d4693" kindref="member" tooltip="FLOAT: 64bit floating point.">EagleDataTypeFloat</ref>:</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_eagle_page_operations_8c_1a6d222018a9344a7a91858ff8d28b2bc8" kindref="member" tooltip="Private function used by EaglePageOperations_SendPageToProvider().">EaglePageOperations_SendPageToProviderFloat_</ref>(provider,<sp/>source1,<sp/>source2);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal">}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614" refid="_eagle_page_operations_8h_1a6ef4ae9096f59c67123469ac37362cce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a6ef4ae9096f59c67123469ac37362cce" kindref="member" tooltip="Equals comparison between two pages.">EaglePageOperations_EqualsPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="615"><highlight class="normal">{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>source1data[i]<sp/>==<sp/>source2data[i];</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627" refid="_eagle_page_operations_8h_1a0fbcb28623e90d9b8766e21e9ded7f4f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a0fbcb28623e90d9b8766e21e9ded7f4f" kindref="member" tooltip="Equals comparison between two pages.">EaglePageOperations_EqualsPageFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="628"><highlight class="normal">{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>source1data[i]<sp/>==<sp/>source2data[i];</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641" refid="_eagle_page_operations_8h_1a6a93cd870158056ca135eff01bc35910" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a6a93cd870158056ca135eff01bc35910" kindref="member" tooltip="Not equals comparison between two pages.">EaglePageOperations_NotEqualsPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="642"><highlight class="normal">{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>source1data[i]<sp/>!=<sp/>source2data[i];</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654" refid="_eagle_page_operations_8h_1a959e133141972d4cf9bd9af7d0b636b6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a959e133141972d4cf9bd9af7d0b636b6" kindref="member" tooltip="Not equals comparison between two pages.">EaglePageOperations_NotEqualsPageFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="655"><highlight class="normal">{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>source1data[i]<sp/>!=<sp/>source2data[i];</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668" refid="_eagle_page_operations_8h_1ac9e90c2aede230864b030c03d87bc207" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1ac9e90c2aede230864b030c03d87bc207" kindref="member" tooltip="Modulus of two pages.">EaglePageOperations_ModulusPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="669"><highlight class="normal">{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>source2data[i])<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>source1data[i]<sp/>%<sp/>source2data[i];</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686" refid="_eagle_page_operations_8h_1a46d8374f2554c3098152ff468220744b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a46d8374f2554c3098152ff468220744b" kindref="member" tooltip="Greater than comparison between two pages.">EaglePageOperations_GreaterThanPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="687"><highlight class="normal">{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>&gt;<sp/>source2data[i]);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699" refid="_eagle_page_operations_8h_1a622ae1b85c8c27949088a6cc056fd69f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a622ae1b85c8c27949088a6cc056fd69f" kindref="member" tooltip="Greater than comparison between two pages.">EaglePageOperations_GreaterThanPageFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="700"><highlight class="normal">{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>&gt;<sp/>source2data[i]);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713" refid="_eagle_page_operations_8h_1a87fe8ca136417c4786f08ab6ebc124bd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a87fe8ca136417c4786f08ab6ebc124bd" kindref="member" tooltip="Less than comparison between two pages.">EaglePageOperations_LessThanPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="714"><highlight class="normal">{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>&lt;<sp/>source2data[i]);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726" refid="_eagle_page_operations_8h_1af27c52761ca2c22702a9757c4a17cbad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1af27c52761ca2c22702a9757c4a17cbad" kindref="member" tooltip="Less than comparison between two pages.">EaglePageOperations_LessThanPageFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="727"><highlight class="normal">{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>&lt;<sp/>source2data[i]);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740" refid="_eagle_page_operations_8h_1a3a5e103fbe1bb5eac03b8784df1ac3ad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a3a5e103fbe1bb5eac03b8784df1ac3ad" kindref="member" tooltip="Greater than or equal to comparison between two pages.">EaglePageOperations_GreaterThanEqualPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="741"><highlight class="normal">{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>&gt;=<sp/>source2data[i]);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753" refid="_eagle_page_operations_8h_1a5426fa057acf4c558a72f30a0098bfe5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a5426fa057acf4c558a72f30a0098bfe5" kindref="member" tooltip="Greater than or equal to comparison between two pages.">EaglePageOperations_GreaterThanEqualPageFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="754"><highlight class="normal">{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>&gt;=<sp/>source2data[i]);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767" refid="_eagle_page_operations_8h_1aa5c9b2ce2ebc73ba46b55aac558fff35" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1aa5c9b2ce2ebc73ba46b55aac558fff35" kindref="member" tooltip="Less than or equal to comparison between two pages.">EaglePageOperations_LessThanEqualPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="768"><highlight class="normal">{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>&lt;=<sp/>source2data[i]);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780" refid="_eagle_page_operations_8h_1ad9133605694a86d29cbcfa46e8f28e46" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1ad9133605694a86d29cbcfa46e8f28e46" kindref="member" tooltip="Less than or equal to comparison between two pages.">EaglePageOperations_LessThanEqualPageFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="781"><highlight class="normal">{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(source1data[i]<sp/>&lt;=<sp/>source2data[i]);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794" refid="_eagle_page_operations_8h_1abc383e35d1d4316e7be5150777babea7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1abc383e35d1d4316e7be5150777babea7" kindref="member" tooltip="Subtraction (minus) of two pages.">EaglePageOperations_SubtractPageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="795"><highlight class="normal">{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>source1data[i]<sp/>-<sp/>source2data[i];</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807" refid="_eagle_page_operations_8h_1a721ddc8191c620d97f909d10e551ecbf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a721ddc8191c620d97f909d10e551ecbf" kindref="member" tooltip="Subtraction (minus) of two pages.">EaglePageOperations_SubtractPageFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="808"><highlight class="normal">{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>source1data[i]<sp/>-<sp/>source2data[i];</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal">}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820" refid="_eagle_page_operations_8h_1a28a33a620293a0272815f6128c723047" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a28a33a620293a0272815f6128c723047" kindref="member" tooltip="Division of two pages.">EaglePageOperations_DividePageInt</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="821"><highlight class="normal">{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1ad854e0f9ec43c88053abc1d5f171e669" kindref="member" tooltip="The global data type for handling EagleDataTypeInteger.">EagleDataTypeIntegerType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>source2data[i])<sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>source1data[i]<sp/>/<sp/>source2data[i];</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal">}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838" refid="_eagle_page_operations_8h_1a72548bca2dde60339ae9da04c4fb5403" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a72548bca2dde60339ae9da04c4fb5403" kindref="member" tooltip="Division of two pages.">EaglePageOperations_DividePageFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="839"><highlight class="normal">{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source2data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source2-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>source2data[i])<sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>source1data[i]<sp/>/<sp/>source2data[i];</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal">}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856" refid="_eagle_page_operations_8h_1a98a63b31f899a86be0b775326d5b5620" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_eagle_page_operations_8c_1a98a63b31f899a86be0b775326d5b5620" kindref="member" tooltip="Calculate square root of a page.">EaglePageOperations_SqrtPageFloat</ref>(<ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*destination,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source1,<sp/><ref refid="struct_eagle_page" kindref="compound" tooltip="Represents a single page of data.">EaglePage</ref><sp/>*source2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="857"><highlight class="normal">{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref><sp/>*destdata<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>destination-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>,<sp/>*source1data<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>*)<sp/>source1-&gt;<ref refid="struct_eagle_page_1a735984d41155bc1032e09bece8f8d66d" kindref="member" tooltip="The actual data for this page.">data</ref>;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1a3b6b231b096fcfd45be140a6d6aa4f8b" kindref="member" tooltip="An arbitrary counter for the row ID offset.">recordOffset</ref>;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref><sp/>=<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>source1-&gt;<ref refid="struct_eagle_page_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member" tooltip="The amount of used records in this page.">count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destdata[i]<sp/>=<sp/>(<ref refid="_eagle_data_type_8h_1aeb78b7fd9c011d917c4f52ee2e9c0f10" kindref="member" tooltip="The global data type for handling EagleDataTypeFloat.">EagleDataTypeFloatType</ref>)<sp/>sqrt(source1data[i]);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/elliot/Xcode/eagle/eagle/eagle/EaglePageOperations.c"/>
  </compounddef>
</doxygen>
