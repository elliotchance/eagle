#!/bin/bash

CMD=$1

if [ $CMD = "fix" ]; then
	ISSUE=`git branch | grep "* " | cut -c4-`
	if [ "`echo $ISSUE | egrep ^[[:digit:]]+$`" = "" ]; then
		echo "You must run this from an issue branch with a name like 'i#'"
		exit 1
	fi
	
	# make sure we are synced up with master
	git merge master
	rc=$?
	if [[ $rc != 0 ]] ; then \
		exit $rc; \
	fi
	
	# make sure release passes
	make release
	rc=$?
	if [[ $rc != 0 ]] ; then \
		exit $rc; \
	fi
	
	# everything looks good
	git checkout master
	rc=$?
	if [[ $rc != 0 ]] ; then \
		exit $rc; \
	fi
	
	git merge --no-ff --no-commit "i$ISSUE"
	rc=$?
	if [[ $rc != 0 ]] ; then \
		exit $rc; \
	fi
	
	git add .
	git commit -m "fixes #$ISSUE"
	
	# remove remote and local branch
	git push origin ":i$ISSUE"
	rc=$?
	if [[ $rc != 0 ]] ; then \
		exit $rc; \
	fi
	
	git branch -d "i$ISSUE"
	rc=$?
	if [[ $rc != 0 ]] ; then \
		exit $rc; \
	fi
	
	# gh-pages
	make gh-pages
	rc=$?
	if [[ $rc != 0 ]] ; then \
		exit $rc; \
	fi

	# push master
	git push
	rc=$?
	if [[ $rc != 0 ]] ; then \
		exit $rc; \
	fi
	
elif [ $CMD = "open" ]; then
	# auto install git hook for issue number in commit message
	cp -f hooks/commit-msg .git/hooks/commit-msg
	rc=$?
	if [[ $rc != 0 ]] ; then \
		exit $rc; \
	fi
	
	# switch branches
	git add .
	git stash
	git checkout master
	rc=$?
	if [[ $rc != 0 ]] ; then \
		exit $rc; \
	fi
	
	git branch "i$2"
	git checkout "i$2"
	rc=$?
	if [[ $rc != 0 ]] ; then \
		exit $rc; \
	fi
	
	git push -u origin "i$2"
	rc=$?
	if [[ $rc != 0 ]] ; then \
		exit $rc; \
	fi
	
	git stash pop
	
fi
